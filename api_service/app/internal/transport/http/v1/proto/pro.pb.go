// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pro.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/pro.proto

It has these top-level messages:
	GetAllFlangeRequest
	CreateFlangeRequest
	UpdateFlangeRequest
	DeleteFlangeRequest
	Flange
	FlangeResponse
	GetStandsRequest
	CreateStandRequest
	UpdateStandRequest
	DeleteStandRequest
	Stand
	StandResponse
	GetStFlRequest
	CreateStFlRequest
	UpdateStFlRequest
	DeleteStFlRequest
	StFl
	StFlResponse
	GetTypeFlRequest
	CreateTypeFlRequest
	UpdateTypeFlRequest
	DeleteTypeFlRequest
	TypeFl
	TypeFlResponse
	GetAllAddRequest
	AddMaterials
	AddTemperature
	AddMod
	AddMoun
	AddGrap
	AddFiller
	AddCoating
	AddConstruction
	AddObturator
	CreateAddRequest
	UpdateAddMatRequest
	UpdateAddModRequest
	UpdateAddTemRequest
	UpdateAddMounRequest
	UpdateAddGrapRequest
	UpdateAddFillersRequest
	UpdateAddCoatingRequest
	UpdateAddConstructionRequest
	UpdateAddObturatorRequest
	Additional
	AdditionalResponse
	SuccessResponse
	GetSizesRequest
	CreateSizeRequest
	UpdateSizeRequest
	DeleteSizeRequest
	DeleteAllSizeRequest
	Size
	Dn
	SizeResponse
	Filler
	Temp
	Materials
	GetSNPRequest
	CreateSNPRequest
	UpdateSNPRequest
	DeleteSNPRequest
	SNP
	SNPResponse
	PutgImage
	GetPutgImageRequest
	CreatePutgImageRequest
	UpdatePutgImageRequest
	DeletePutgImageRequest
	PutgImageResponse
	PutgTemp
	PutgConstructions
	ConTemp
	Constr
	PutgObt
	PutgMaterials
	GetPutgRequest
	CreatePutgRequest
	UpdatePutgRequest
	DeletePutgRequest
	Putg
	PutgResponse
	IdResponse
	PingRequest
	PingResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Flange Service ----------------------------------------------------------------
type GetAllFlangeRequest struct {
}

func (m *GetAllFlangeRequest) Reset()                    { *m = GetAllFlangeRequest{} }
func (m *GetAllFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllFlangeRequest) ProtoMessage()               {}
func (*GetAllFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateFlangeRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
}

func (m *CreateFlangeRequest) Reset()                    { *m = CreateFlangeRequest{} }
func (m *CreateFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateFlangeRequest) ProtoMessage()               {}
func (*CreateFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateFlangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateFlangeRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type UpdateFlangeRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
}

func (m *UpdateFlangeRequest) Reset()                    { *m = UpdateFlangeRequest{} }
func (m *UpdateFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFlangeRequest) ProtoMessage()               {}
func (*UpdateFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateFlangeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateFlangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateFlangeRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type DeleteFlangeRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteFlangeRequest) Reset()                    { *m = DeleteFlangeRequest{} }
func (m *DeleteFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFlangeRequest) ProtoMessage()               {}
func (*DeleteFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteFlangeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Flange struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
}

func (m *Flange) Reset()                    { *m = Flange{} }
func (m *Flange) String() string            { return proto1.CompactTextString(m) }
func (*Flange) ProtoMessage()               {}
func (*Flange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Flange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Flange) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Flange) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type FlangeResponse struct {
	Flanges []*Flange `protobuf:"bytes,1,rep,name=flanges" json:"flanges,omitempty"`
}

func (m *FlangeResponse) Reset()                    { *m = FlangeResponse{} }
func (m *FlangeResponse) String() string            { return proto1.CompactTextString(m) }
func (*FlangeResponse) ProtoMessage()               {}
func (*FlangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FlangeResponse) GetFlanges() []*Flange {
	if m != nil {
		return m.Flanges
	}
	return nil
}

// Stand Service ----------------------------------------------------------------
type GetStandsRequest struct {
}

func (m *GetStandsRequest) Reset()                    { *m = GetStandsRequest{} }
func (m *GetStandsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStandsRequest) ProtoMessage()               {}
func (*GetStandsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CreateStandRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *CreateStandRequest) Reset()                    { *m = CreateStandRequest{} }
func (m *CreateStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateStandRequest) ProtoMessage()               {}
func (*CreateStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateStandRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UpdateStandRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *UpdateStandRequest) Reset()                    { *m = UpdateStandRequest{} }
func (m *UpdateStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateStandRequest) ProtoMessage()               {}
func (*UpdateStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateStandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStandRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type DeleteStandRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteStandRequest) Reset()                    { *m = DeleteStandRequest{} }
func (m *DeleteStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteStandRequest) ProtoMessage()               {}
func (*DeleteStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteStandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Stand struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *Stand) Reset()                    { *m = Stand{} }
func (m *Stand) String() string            { return proto1.CompactTextString(m) }
func (*Stand) ProtoMessage()               {}
func (*Stand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Stand) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Stand) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type StandResponse struct {
	Stands []*Stand `protobuf:"bytes,1,rep,name=stands" json:"stands,omitempty"`
}

func (m *StandResponse) Reset()                    { *m = StandResponse{} }
func (m *StandResponse) String() string            { return proto1.CompactTextString(m) }
func (*StandResponse) ProtoMessage()               {}
func (*StandResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StandResponse) GetStands() []*Stand {
	if m != nil {
		return m.Stands
	}
	return nil
}

// St_Fl Service ----------------------------------------------------------------
type GetStFlRequest struct {
}

func (m *GetStFlRequest) Reset()                    { *m = GetStFlRequest{} }
func (m *GetStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStFlRequest) ProtoMessage()               {}
func (*GetStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type CreateStFlRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *CreateStFlRequest) Reset()                    { *m = CreateStFlRequest{} }
func (m *CreateStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateStFlRequest) ProtoMessage()               {}
func (*CreateStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateStFlRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateStFlRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type UpdateStFlRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdateStFlRequest) Reset()                    { *m = UpdateStFlRequest{} }
func (m *UpdateStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateStFlRequest) ProtoMessage()               {}
func (*UpdateStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UpdateStFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStFlRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateStFlRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeleteStFlRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteStFlRequest) Reset()                    { *m = DeleteStFlRequest{} }
func (m *DeleteStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteStFlRequest) ProtoMessage()               {}
func (*DeleteStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *DeleteStFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StFl struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	Stand    string `protobuf:"bytes,3,opt,name=stand" json:"stand,omitempty"`
	FlangeId string `protobuf:"bytes,4,opt,name=flangeId" json:"flangeId,omitempty"`
	Flange   string `protobuf:"bytes,5,opt,name=flange" json:"flange,omitempty"`
	Short    string `protobuf:"bytes,6,opt,name=short" json:"short,omitempty"`
}

func (m *StFl) Reset()                    { *m = StFl{} }
func (m *StFl) String() string            { return proto1.CompactTextString(m) }
func (*StFl) ProtoMessage()               {}
func (*StFl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *StFl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StFl) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *StFl) GetStand() string {
	if m != nil {
		return m.Stand
	}
	return ""
}

func (m *StFl) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *StFl) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *StFl) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type StFlResponse struct {
	Stfl []*StFl `protobuf:"bytes,1,rep,name=stfl" json:"stfl,omitempty"`
}

func (m *StFlResponse) Reset()                    { *m = StFlResponse{} }
func (m *StFlResponse) String() string            { return proto1.CompactTextString(m) }
func (*StFlResponse) ProtoMessage()               {}
func (*StFlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *StFlResponse) GetStfl() []*StFl {
	if m != nil {
		return m.Stfl
	}
	return nil
}

// Type Flange Service ----------------------------------------------------------------
type GetTypeFlRequest struct {
}

func (m *GetTypeFlRequest) Reset()                    { *m = GetTypeFlRequest{} }
func (m *GetTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetTypeFlRequest) ProtoMessage()               {}
func (*GetTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type CreateTypeFlRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,2,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
	Basis bool   `protobuf:"varint,4,opt,name=basis" json:"basis,omitempty"`
}

func (m *CreateTypeFlRequest) Reset()                    { *m = CreateTypeFlRequest{} }
func (m *CreateTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateTypeFlRequest) ProtoMessage()               {}
func (*CreateTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CreateTypeFlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateTypeFlRequest) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *CreateTypeFlRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *CreateTypeFlRequest) GetBasis() bool {
	if m != nil {
		return m.Basis
	}
	return false
}

type UpdateTypeFlRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,4,opt,name=short" json:"short,omitempty"`
	Basis bool   `protobuf:"varint,5,opt,name=basis" json:"basis,omitempty"`
}

func (m *UpdateTypeFlRequest) Reset()                    { *m = UpdateTypeFlRequest{} }
func (m *UpdateTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateTypeFlRequest) ProtoMessage()               {}
func (*UpdateTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UpdateTypeFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetBasis() bool {
	if m != nil {
		return m.Basis
	}
	return false
}

type DeleteTypeFlRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteTypeFlRequest) Reset()                    { *m = DeleteTypeFlRequest{} }
func (m *DeleteTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteTypeFlRequest) ProtoMessage()               {}
func (*DeleteTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteTypeFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TypeFl struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,4,opt,name=short" json:"short,omitempty"`
}

func (m *TypeFl) Reset()                    { *m = TypeFl{} }
func (m *TypeFl) String() string            { return proto1.CompactTextString(m) }
func (*TypeFl) ProtoMessage()               {}
func (*TypeFl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TypeFl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TypeFl) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TypeFl) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *TypeFl) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type TypeFlResponse struct {
	TypeFl []*TypeFl `protobuf:"bytes,1,rep,name=typeFl" json:"typeFl,omitempty"`
}

func (m *TypeFlResponse) Reset()                    { *m = TypeFlResponse{} }
func (m *TypeFlResponse) String() string            { return proto1.CompactTextString(m) }
func (*TypeFlResponse) ProtoMessage()               {}
func (*TypeFlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *TypeFlResponse) GetTypeFl() []*TypeFl {
	if m != nil {
		return m.TypeFl
	}
	return nil
}

// Additional Service ----------------------------------------------------------------
type GetAllAddRequest struct {
}

func (m *GetAllAddRequest) Reset()                    { *m = GetAllAddRequest{} }
func (m *GetAllAddRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllAddRequest) ProtoMessage()               {}
func (*GetAllAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type AddMaterials struct {
	Short string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddMaterials) Reset()                    { *m = AddMaterials{} }
func (m *AddMaterials) String() string            { return proto1.CompactTextString(m) }
func (*AddMaterials) ProtoMessage()               {}
func (*AddMaterials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *AddMaterials) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddMaterials) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddTemperature struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddTemperature) Reset()                    { *m = AddTemperature{} }
func (m *AddTemperature) String() string            { return proto1.CompactTextString(m) }
func (*AddTemperature) ProtoMessage()               {}
func (*AddTemperature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *AddTemperature) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddTemperature) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddMod struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *AddMod) Reset()                    { *m = AddMod{} }
func (m *AddMod) String() string            { return proto1.CompactTextString(m) }
func (*AddMod) ProtoMessage()               {}
func (*AddMod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *AddMod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddMod) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddMod) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddMod) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddMoun struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddMoun) Reset()                    { *m = AddMoun{} }
func (m *AddMoun) String() string            { return proto1.CompactTextString(m) }
func (*AddMoun) ProtoMessage()               {}
func (*AddMoun) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *AddMoun) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddMoun) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddGrap struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *AddGrap) Reset()                    { *m = AddGrap{} }
func (m *AddGrap) String() string            { return proto1.CompactTextString(m) }
func (*AddGrap) ProtoMessage()               {}
func (*AddGrap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *AddGrap) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddGrap) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddGrap) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddFiller struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *AddFiller) Reset()                    { *m = AddFiller{} }
func (m *AddFiller) String() string            { return proto1.CompactTextString(m) }
func (*AddFiller) ProtoMessage()               {}
func (*AddFiller) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *AddFiller) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddFiller) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddFiller) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddCoating struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *AddCoating) Reset()                    { *m = AddCoating{} }
func (m *AddCoating) String() string            { return proto1.CompactTextString(m) }
func (*AddCoating) ProtoMessage()               {}
func (*AddCoating) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AddCoating) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddCoating) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddCoating) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddCoating) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddConstruction struct {
	Short          string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title          string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	IsHaveMaterial bool   `protobuf:"varint,4,opt,name=isHaveMaterial" json:"isHaveMaterial,omitempty"`
}

func (m *AddConstruction) Reset()                    { *m = AddConstruction{} }
func (m *AddConstruction) String() string            { return proto1.CompactTextString(m) }
func (*AddConstruction) ProtoMessage()               {}
func (*AddConstruction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *AddConstruction) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddConstruction) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddConstruction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddConstruction) GetIsHaveMaterial() bool {
	if m != nil {
		return m.IsHaveMaterial
	}
	return false
}

type AddObturator struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ForDescr    string `protobuf:"bytes,4,opt,name=forDescr" json:"forDescr,omitempty"`
}

func (m *AddObturator) Reset()                    { *m = AddObturator{} }
func (m *AddObturator) String() string            { return proto1.CompactTextString(m) }
func (*AddObturator) ProtoMessage()               {}
func (*AddObturator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AddObturator) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddObturator) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddObturator) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddObturator) GetForDescr() string {
	if m != nil {
		return m.ForDescr
	}
	return ""
}

type CreateAddRequest struct {
	Materials    string `protobuf:"bytes,1,opt,name=materials" json:"materials,omitempty"`
	Mod          string `protobuf:"bytes,2,opt,name=mod" json:"mod,omitempty"`
	Temperature  string `protobuf:"bytes,3,opt,name=temperature" json:"temperature,omitempty"`
	Mounting     string `protobuf:"bytes,4,opt,name=mounting" json:"mounting,omitempty"`
	Graphite     string `protobuf:"bytes,5,opt,name=graphite" json:"graphite,omitempty"`
	Fillers      string `protobuf:"bytes,6,opt,name=fillers" json:"fillers,omitempty"`
	Coating      string `protobuf:"bytes,7,opt,name=coating" json:"coating,omitempty"`
	Construction string `protobuf:"bytes,8,opt,name=construction" json:"construction,omitempty"`
	Obturator    string `protobuf:"bytes,9,opt,name=obturator" json:"obturator,omitempty"`
	Basis        string `protobuf:"bytes,10,opt,name=basis" json:"basis,omitempty"`
	Sealant      string `protobuf:"bytes,11,opt,name=sealant" json:"sealant,omitempty"`
}

func (m *CreateAddRequest) Reset()                    { *m = CreateAddRequest{} }
func (m *CreateAddRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateAddRequest) ProtoMessage()               {}
func (*CreateAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CreateAddRequest) GetMaterials() string {
	if m != nil {
		return m.Materials
	}
	return ""
}

func (m *CreateAddRequest) GetMod() string {
	if m != nil {
		return m.Mod
	}
	return ""
}

func (m *CreateAddRequest) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *CreateAddRequest) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *CreateAddRequest) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

func (m *CreateAddRequest) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

func (m *CreateAddRequest) GetCoating() string {
	if m != nil {
		return m.Coating
	}
	return ""
}

func (m *CreateAddRequest) GetConstruction() string {
	if m != nil {
		return m.Construction
	}
	return ""
}

func (m *CreateAddRequest) GetObturator() string {
	if m != nil {
		return m.Obturator
	}
	return ""
}

func (m *CreateAddRequest) GetBasis() string {
	if m != nil {
		return m.Basis
	}
	return ""
}

func (m *CreateAddRequest) GetSealant() string {
	if m != nil {
		return m.Sealant
	}
	return ""
}

type UpdateAddMatRequest struct {
	Id        string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Materials []*AddMaterials `protobuf:"bytes,2,rep,name=materials" json:"materials,omitempty"`
	TypeCh    string          `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change    string          `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddMatRequest) Reset()                    { *m = UpdateAddMatRequest{} }
func (m *UpdateAddMatRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddMatRequest) ProtoMessage()               {}
func (*UpdateAddMatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *UpdateAddMatRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddMatRequest) GetMaterials() []*AddMaterials {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *UpdateAddMatRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddMatRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddModRequest struct {
	Id     string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mod    []*AddMod `protobuf:"bytes,2,rep,name=mod" json:"mod,omitempty"`
	TypeCh string    `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change string    `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddModRequest) Reset()                    { *m = UpdateAddModRequest{} }
func (m *UpdateAddModRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddModRequest) ProtoMessage()               {}
func (*UpdateAddModRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *UpdateAddModRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddModRequest) GetMod() []*AddMod {
	if m != nil {
		return m.Mod
	}
	return nil
}

func (m *UpdateAddModRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddModRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddTemRequest struct {
	Id          string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Temperature []*AddTemperature `protobuf:"bytes,2,rep,name=temperature" json:"temperature,omitempty"`
	TypeCh      string            `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change      string            `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddTemRequest) Reset()                    { *m = UpdateAddTemRequest{} }
func (m *UpdateAddTemRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddTemRequest) ProtoMessage()               {}
func (*UpdateAddTemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *UpdateAddTemRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddTemRequest) GetTemperature() []*AddTemperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

func (m *UpdateAddTemRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddTemRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddMounRequest struct {
	Id       string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mounting []*AddMoun `protobuf:"bytes,2,rep,name=mounting" json:"mounting,omitempty"`
	TypeCh   string     `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change   string     `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddMounRequest) Reset()                    { *m = UpdateAddMounRequest{} }
func (m *UpdateAddMounRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddMounRequest) ProtoMessage()               {}
func (*UpdateAddMounRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *UpdateAddMounRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddMounRequest) GetMounting() []*AddMoun {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdateAddMounRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddMounRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddGrapRequest struct {
	Id       string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Graphite []*AddGrap `protobuf:"bytes,2,rep,name=graphite" json:"graphite,omitempty"`
	TypeCh   string     `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change   string     `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddGrapRequest) Reset()                    { *m = UpdateAddGrapRequest{} }
func (m *UpdateAddGrapRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddGrapRequest) ProtoMessage()               {}
func (*UpdateAddGrapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *UpdateAddGrapRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddGrapRequest) GetGraphite() []*AddGrap {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *UpdateAddGrapRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddGrapRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddFillersRequest struct {
	Id      string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fillers []*AddFiller `protobuf:"bytes,2,rep,name=fillers" json:"fillers,omitempty"`
	TypeCh  string       `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change  string       `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddFillersRequest) Reset()                    { *m = UpdateAddFillersRequest{} }
func (m *UpdateAddFillersRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddFillersRequest) ProtoMessage()               {}
func (*UpdateAddFillersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *UpdateAddFillersRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddFillersRequest) GetFillers() []*AddFiller {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *UpdateAddFillersRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddFillersRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddCoatingRequest struct {
	Id      string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Coating []*AddCoating `protobuf:"bytes,2,rep,name=coating" json:"coating,omitempty"`
	TypeCh  string        `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change  string        `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddCoatingRequest) Reset()                    { *m = UpdateAddCoatingRequest{} }
func (m *UpdateAddCoatingRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddCoatingRequest) ProtoMessage()               {}
func (*UpdateAddCoatingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *UpdateAddCoatingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddCoatingRequest) GetCoating() []*AddCoating {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *UpdateAddCoatingRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddCoatingRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddConstructionRequest struct {
	Id     string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Constr []*AddConstruction `protobuf:"bytes,2,rep,name=constr" json:"constr,omitempty"`
	TypeCh string             `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change string             `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddConstructionRequest) Reset()                    { *m = UpdateAddConstructionRequest{} }
func (m *UpdateAddConstructionRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddConstructionRequest) ProtoMessage()               {}
func (*UpdateAddConstructionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *UpdateAddConstructionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddConstructionRequest) GetConstr() []*AddConstruction {
	if m != nil {
		return m.Constr
	}
	return nil
}

func (m *UpdateAddConstructionRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddConstructionRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddObturatorRequest struct {
	Id        string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Obturator []*AddObturator `protobuf:"bytes,2,rep,name=obturator" json:"obturator,omitempty"`
	TypeCh    string          `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change    string          `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddObturatorRequest) Reset()                    { *m = UpdateAddObturatorRequest{} }
func (m *UpdateAddObturatorRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddObturatorRequest) ProtoMessage()               {}
func (*UpdateAddObturatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *UpdateAddObturatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddObturatorRequest) GetObturator() []*AddObturator {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *UpdateAddObturatorRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddObturatorRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type Additional struct {
	Id           string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Materials    []*AddMaterials    `protobuf:"bytes,2,rep,name=materials" json:"materials,omitempty"`
	Mod          []*AddMod          `protobuf:"bytes,3,rep,name=mod" json:"mod,omitempty"`
	Temperature  []*AddTemperature  `protobuf:"bytes,4,rep,name=temperature" json:"temperature,omitempty"`
	Mounting     []*AddMoun         `protobuf:"bytes,5,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []*AddGrap         `protobuf:"bytes,6,rep,name=graphite" json:"graphite,omitempty"`
	Fillers      []*AddFiller       `protobuf:"bytes,7,rep,name=fillers" json:"fillers,omitempty"`
	Coating      []*AddCoating      `protobuf:"bytes,8,rep,name=coating" json:"coating,omitempty"`
	Construction []*AddConstruction `protobuf:"bytes,9,rep,name=construction" json:"construction,omitempty"`
	Obturator    []*AddObturator    `protobuf:"bytes,10,rep,name=obturator" json:"obturator,omitempty"`
}

func (m *Additional) Reset()                    { *m = Additional{} }
func (m *Additional) String() string            { return proto1.CompactTextString(m) }
func (*Additional) ProtoMessage()               {}
func (*Additional) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *Additional) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Additional) GetMaterials() []*AddMaterials {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *Additional) GetMod() []*AddMod {
	if m != nil {
		return m.Mod
	}
	return nil
}

func (m *Additional) GetTemperature() []*AddTemperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

func (m *Additional) GetMounting() []*AddMoun {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *Additional) GetGraphite() []*AddGrap {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *Additional) GetFillers() []*AddFiller {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *Additional) GetCoating() []*AddCoating {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *Additional) GetConstruction() []*AddConstruction {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *Additional) GetObturator() []*AddObturator {
	if m != nil {
		return m.Obturator
	}
	return nil
}

type AdditionalResponse struct {
	Additionals []*Additional `protobuf:"bytes,1,rep,name=additionals" json:"additionals,omitempty"`
}

func (m *AdditionalResponse) Reset()                    { *m = AdditionalResponse{} }
func (m *AdditionalResponse) String() string            { return proto1.CompactTextString(m) }
func (*AdditionalResponse) ProtoMessage()               {}
func (*AdditionalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *AdditionalResponse) GetAdditionals() []*Additional {
	if m != nil {
		return m.Additionals
	}
	return nil
}

type SuccessResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SuccessResponse) Reset()                    { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string            { return proto1.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()               {}
func (*SuccessResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Size Service ----------------------------------------------------------------
type GetSizesRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,4,opt,name=standId" json:"standId,omitempty"`
}

func (m *GetSizesRequest) Reset()                    { *m = GetSizesRequest{} }
func (m *GetSizesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSizesRequest) ProtoMessage()               {}
func (*GetSizesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *GetSizesRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *GetSizesRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *GetSizesRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *GetSizesRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

type CreateSizeRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	Dn       string `protobuf:"bytes,3,opt,name=dn" json:"dn,omitempty"`
	Pn       string `protobuf:"bytes,4,opt,name=pn" json:"pn,omitempty"`
	TypePr   string `protobuf:"bytes,5,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,6,opt,name=standId" json:"standId,omitempty"`
	D4       string `protobuf:"bytes,7,opt,name=d4" json:"d4,omitempty"`
	D3       string `protobuf:"bytes,8,opt,name=d3" json:"d3,omitempty"`
	D2       string `protobuf:"bytes,9,opt,name=d2" json:"d2,omitempty"`
	D1       string `protobuf:"bytes,10,opt,name=d1" json:"d1,omitempty"`
	H        string `protobuf:"bytes,11,opt,name=h" json:"h,omitempty"`
	S2       string `protobuf:"bytes,12,opt,name=s2" json:"s2,omitempty"`
	S3       string `protobuf:"bytes,13,opt,name=s3" json:"s3,omitempty"`
	Number   int32  `protobuf:"varint,14,opt,name=number" json:"number,omitempty"`
}

func (m *CreateSizeRequest) Reset()                    { *m = CreateSizeRequest{} }
func (m *CreateSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSizeRequest) ProtoMessage()               {}
func (*CreateSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CreateSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *CreateSizeRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreateSizeRequest) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *CreateSizeRequest) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *CreateSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreateSizeRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateSizeRequest) GetD4() string {
	if m != nil {
		return m.D4
	}
	return ""
}

func (m *CreateSizeRequest) GetD3() string {
	if m != nil {
		return m.D3
	}
	return ""
}

func (m *CreateSizeRequest) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *CreateSizeRequest) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *CreateSizeRequest) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *CreateSizeRequest) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *CreateSizeRequest) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *CreateSizeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type UpdateSizeRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Dn       string `protobuf:"bytes,4,opt,name=dn" json:"dn,omitempty"`
	Pn       string `protobuf:"bytes,5,opt,name=pn" json:"pn,omitempty"`
	TypePr   string `protobuf:"bytes,6,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,7,opt,name=standId" json:"standId,omitempty"`
	D4       string `protobuf:"bytes,8,opt,name=d4" json:"d4,omitempty"`
	D3       string `protobuf:"bytes,9,opt,name=d3" json:"d3,omitempty"`
	D2       string `protobuf:"bytes,10,opt,name=d2" json:"d2,omitempty"`
	D1       string `protobuf:"bytes,11,opt,name=d1" json:"d1,omitempty"`
	H        string `protobuf:"bytes,12,opt,name=h" json:"h,omitempty"`
	S2       string `protobuf:"bytes,13,opt,name=s2" json:"s2,omitempty"`
	S3       string `protobuf:"bytes,14,opt,name=s3" json:"s3,omitempty"`
}

func (m *UpdateSizeRequest) Reset()                    { *m = UpdateSizeRequest{} }
func (m *UpdateSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSizeRequest) ProtoMessage()               {}
func (*UpdateSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *UpdateSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *UpdateSizeRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdateSizeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSizeRequest) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *UpdateSizeRequest) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *UpdateSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdateSizeRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateSizeRequest) GetD4() string {
	if m != nil {
		return m.D4
	}
	return ""
}

func (m *UpdateSizeRequest) GetD3() string {
	if m != nil {
		return m.D3
	}
	return ""
}

func (m *UpdateSizeRequest) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *UpdateSizeRequest) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *UpdateSizeRequest) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *UpdateSizeRequest) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *UpdateSizeRequest) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

type DeleteSizeRequest struct {
	Flange string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSizeRequest) Reset()                    { *m = DeleteSizeRequest{} }
func (m *DeleteSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSizeRequest) ProtoMessage()               {}
func (*DeleteSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *DeleteSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *DeleteSizeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteAllSizeRequest struct {
	Flange string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypePr string `protobuf:"bytes,2,opt,name=typePr" json:"typePr,omitempty"`
}

func (m *DeleteAllSizeRequest) Reset()                    { *m = DeleteAllSizeRequest{} }
func (m *DeleteAllSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteAllSizeRequest) ProtoMessage()               {}
func (*DeleteAllSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *DeleteAllSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *DeleteAllSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

type Size struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Dn       string `protobuf:"bytes,2,opt,name=dn" json:"dn,omitempty"`
	Pn       string `protobuf:"bytes,3,opt,name=pn" json:"pn,omitempty"`
	D4       string `protobuf:"bytes,4,opt,name=d4" json:"d4,omitempty"`
	D3       string `protobuf:"bytes,5,opt,name=d3" json:"d3,omitempty"`
	D2       string `protobuf:"bytes,6,opt,name=d2" json:"d2,omitempty"`
	D1       string `protobuf:"bytes,7,opt,name=d1" json:"d1,omitempty"`
	H        string `protobuf:"bytes,8,opt,name=h" json:"h,omitempty"`
	S2       string `protobuf:"bytes,9,opt,name=s2" json:"s2,omitempty"`
	S3       string `protobuf:"bytes,10,opt,name=s3" json:"s3,omitempty"`
	TypePr   string `protobuf:"bytes,11,opt,name=typePr" json:"typePr,omitempty"`
	TypeFlId string `protobuf:"bytes,12,opt,name=typeFlId" json:"typeFlId,omitempty"`
}

func (m *Size) Reset()                    { *m = Size{} }
func (m *Size) String() string            { return proto1.CompactTextString(m) }
func (*Size) ProtoMessage()               {}
func (*Size) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *Size) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Size) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *Size) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *Size) GetD4() string {
	if m != nil {
		return m.D4
	}
	return ""
}

func (m *Size) GetD3() string {
	if m != nil {
		return m.D3
	}
	return ""
}

func (m *Size) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *Size) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *Size) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *Size) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *Size) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *Size) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *Size) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

type Dn struct {
	Dn string `protobuf:"bytes,1,opt,name=dn" json:"dn,omitempty"`
}

func (m *Dn) Reset()                    { *m = Dn{} }
func (m *Dn) String() string            { return proto1.CompactTextString(m) }
func (*Dn) ProtoMessage()               {}
func (*Dn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *Dn) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

type SizeResponse struct {
	Sizes []*Size `protobuf:"bytes,1,rep,name=sizes" json:"sizes,omitempty"`
	Dn    []*Dn   `protobuf:"bytes,2,rep,name=dn" json:"dn,omitempty"`
}

func (m *SizeResponse) Reset()                    { *m = SizeResponse{} }
func (m *SizeResponse) String() string            { return proto1.CompactTextString(m) }
func (*SizeResponse) ProtoMessage()               {}
func (*SizeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *SizeResponse) GetSizes() []*Size {
	if m != nil {
		return m.Sizes
	}
	return nil
}

func (m *SizeResponse) GetDn() []*Dn {
	if m != nil {
		return m.Dn
	}
	return nil
}

// SNP Service ----------------------------------------------------------------
type Filler struct {
	Id    string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Temps []*Temp `protobuf:"bytes,2,rep,name=temps" json:"temps,omitempty"`
}

func (m *Filler) Reset()                    { *m = Filler{} }
func (m *Filler) String() string            { return proto1.CompactTextString(m) }
func (*Filler) ProtoMessage()               {}
func (*Filler) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *Filler) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Filler) GetTemps() []*Temp {
	if m != nil {
		return m.Temps
	}
	return nil
}

type Temp struct {
	Id   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mods []string `protobuf:"bytes,2,rep,name=mods" json:"mods,omitempty"`
}

func (m *Temp) Reset()                    { *m = Temp{} }
func (m *Temp) String() string            { return proto1.CompactTextString(m) }
func (*Temp) ProtoMessage()               {}
func (*Temp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *Temp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Temp) GetMods() []string {
	if m != nil {
		return m.Mods
	}
	return nil
}

type Materials struct {
	Values  []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Default string   `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
}

func (m *Materials) Reset()                    { *m = Materials{} }
func (m *Materials) String() string            { return proto1.CompactTextString(m) }
func (*Materials) ProtoMessage()               {}
func (*Materials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *Materials) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Materials) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

type GetSNPRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetSNPRequest) Reset()                    { *m = GetSNPRequest{} }
func (m *GetSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSNPRequest) ProtoMessage()               {}
func (*GetSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *GetSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *GetSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreateSNPRequest struct {
	StandId  string     `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string     `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId string     `protobuf:"bytes,3,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string     `protobuf:"bytes,4,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  []*Filler  `protobuf:"bytes,5,rep,name=fillers" json:"fillers,omitempty"`
	Frame    *Materials `protobuf:"bytes,6,opt,name=frame" json:"frame,omitempty"`
	Ir       *Materials `protobuf:"bytes,7,opt,name=ir" json:"ir,omitempty"`
	Or       *Materials `protobuf:"bytes,8,opt,name=or" json:"or,omitempty"`
	Mounting []string   `protobuf:"bytes,9,rep,name=mounting" json:"mounting,omitempty"`
	Graphite []string   `protobuf:"bytes,10,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *CreateSNPRequest) Reset()                    { *m = CreateSNPRequest{} }
func (m *CreateSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSNPRequest) ProtoMessage()               {}
func (*CreateSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *CreateSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreateSNPRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreateSNPRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreateSNPRequest) GetFillers() []*Filler {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *CreateSNPRequest) GetFrame() *Materials {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *CreateSNPRequest) GetIr() *Materials {
	if m != nil {
		return m.Ir
	}
	return nil
}

func (m *CreateSNPRequest) GetOr() *Materials {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *CreateSNPRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *CreateSNPRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type UpdateSNPRequest struct {
	Id       string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string     `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	FlangeId string     `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId string     `protobuf:"bytes,4,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string     `protobuf:"bytes,5,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  []*Filler  `protobuf:"bytes,6,rep,name=fillers" json:"fillers,omitempty"`
	Frame    *Materials `protobuf:"bytes,7,opt,name=frame" json:"frame,omitempty"`
	Ir       *Materials `protobuf:"bytes,8,opt,name=ir" json:"ir,omitempty"`
	Or       *Materials `protobuf:"bytes,9,opt,name=or" json:"or,omitempty"`
	Mounting []string   `protobuf:"bytes,10,rep,name=mounting" json:"mounting,omitempty"`
	Graphite []string   `protobuf:"bytes,11,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *UpdateSNPRequest) Reset()                    { *m = UpdateSNPRequest{} }
func (m *UpdateSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSNPRequest) ProtoMessage()               {}
func (*UpdateSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *UpdateSNPRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *UpdateSNPRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdateSNPRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdateSNPRequest) GetFillers() []*Filler {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *UpdateSNPRequest) GetFrame() *Materials {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *UpdateSNPRequest) GetIr() *Materials {
	if m != nil {
		return m.Ir
	}
	return nil
}

func (m *UpdateSNPRequest) GetOr() *Materials {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *UpdateSNPRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdateSNPRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type DeleteSNPRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSNPRequest) Reset()                    { *m = DeleteSNPRequest{} }
func (m *DeleteSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSNPRequest) ProtoMessage()               {}
func (*DeleteSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *DeleteSNPRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SNP struct {
	Id       string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId string     `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string     `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  []*Filler  `protobuf:"bytes,4,rep,name=fillers" json:"fillers,omitempty"`
	Frame    *Materials `protobuf:"bytes,5,opt,name=frame" json:"frame,omitempty"`
	Ir       *Materials `protobuf:"bytes,6,opt,name=ir" json:"ir,omitempty"`
	Or       *Materials `protobuf:"bytes,7,opt,name=or" json:"or,omitempty"`
	Mounting []string   `protobuf:"bytes,8,rep,name=mounting" json:"mounting,omitempty"`
	Graphite []string   `protobuf:"bytes,9,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *SNP) Reset()                    { *m = SNP{} }
func (m *SNP) String() string            { return proto1.CompactTextString(m) }
func (*SNP) ProtoMessage()               {}
func (*SNP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *SNP) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SNP) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *SNP) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *SNP) GetFillers() []*Filler {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *SNP) GetFrame() *Materials {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *SNP) GetIr() *Materials {
	if m != nil {
		return m.Ir
	}
	return nil
}

func (m *SNP) GetOr() *Materials {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *SNP) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *SNP) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type SNPResponse struct {
	Snp []*SNP `protobuf:"bytes,1,rep,name=snp" json:"snp,omitempty"`
}

func (m *SNPResponse) Reset()                    { *m = SNPResponse{} }
func (m *SNPResponse) String() string            { return proto1.CompactTextString(m) }
func (*SNPResponse) ProtoMessage()               {}
func (*SNPResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *SNPResponse) GetSnp() []*SNP {
	if m != nil {
		return m.Snp
	}
	return nil
}

// PUTG Image Service ----------------------------------------------------------------
type PutgImage struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Form   string `protobuf:"bytes,2,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,3,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *PutgImage) Reset()                    { *m = PutgImage{} }
func (m *PutgImage) String() string            { return proto1.CompactTextString(m) }
func (*PutgImage) ProtoMessage()               {}
func (*PutgImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *PutgImage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutgImage) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *PutgImage) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *PutgImage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetPutgImageRequest struct {
	Form string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
}

func (m *GetPutgImageRequest) Reset()                    { *m = GetPutgImageRequest{} }
func (m *GetPutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPutgImageRequest) ProtoMessage()               {}
func (*GetPutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *GetPutgImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

type CreatePutgImageRequest struct {
	Form   string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,2,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
}

func (m *CreatePutgImageRequest) Reset()                    { *m = CreatePutgImageRequest{} }
func (m *CreatePutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreatePutgImageRequest) ProtoMessage()               {}
func (*CreatePutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CreatePutgImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *CreatePutgImageRequest) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *CreatePutgImageRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UpdatePutgImageRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Form   string `protobuf:"bytes,2,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,3,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *UpdatePutgImageRequest) Reset()                    { *m = UpdatePutgImageRequest{} }
func (m *UpdatePutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePutgImageRequest) ProtoMessage()               {}
func (*UpdatePutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *UpdatePutgImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePutgImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *UpdatePutgImageRequest) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *UpdatePutgImageRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type DeletePutgImageRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePutgImageRequest) Reset()                    { *m = DeletePutgImageRequest{} }
func (m *DeletePutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeletePutgImageRequest) ProtoMessage()               {}
func (*DeletePutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *DeletePutgImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PutgImageResponse struct {
	PutgImage []*PutgImage `protobuf:"bytes,1,rep,name=putgImage" json:"putgImage,omitempty"`
}

func (m *PutgImageResponse) Reset()                    { *m = PutgImageResponse{} }
func (m *PutgImageResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutgImageResponse) ProtoMessage()               {}
func (*PutgImageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *PutgImageResponse) GetPutgImage() []*PutgImage {
	if m != nil {
		return m.PutgImage
	}
	return nil
}

// PUTG Service ----------------------------------------------------------------
type PutgTemp struct {
	Grap  string  `protobuf:"bytes,1,opt,name=grap" json:"grap,omitempty"`
	Temps []*Temp `protobuf:"bytes,2,rep,name=temps" json:"temps,omitempty"`
}

func (m *PutgTemp) Reset()                    { *m = PutgTemp{} }
func (m *PutgTemp) String() string            { return proto1.CompactTextString(m) }
func (*PutgTemp) ProtoMessage()               {}
func (*PutgTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *PutgTemp) GetGrap() string {
	if m != nil {
		return m.Grap
	}
	return ""
}

func (m *PutgTemp) GetTemps() []*Temp {
	if m != nil {
		return m.Temps
	}
	return nil
}

type PutgConstructions struct {
	Grap         string     `protobuf:"bytes,1,opt,name=grap" json:"grap,omitempty"`
	Temperatures []*ConTemp `protobuf:"bytes,2,rep,name=temperatures" json:"temperatures,omitempty"`
}

func (m *PutgConstructions) Reset()                    { *m = PutgConstructions{} }
func (m *PutgConstructions) String() string            { return proto1.CompactTextString(m) }
func (*PutgConstructions) ProtoMessage()               {}
func (*PutgConstructions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *PutgConstructions) GetGrap() string {
	if m != nil {
		return m.Grap
	}
	return ""
}

func (m *PutgConstructions) GetTemperatures() []*ConTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

type ConTemp struct {
	Temp          string    `protobuf:"bytes,1,opt,name=temp" json:"temp,omitempty"`
	Constructions []*Constr `protobuf:"bytes,2,rep,name=constructions" json:"constructions,omitempty"`
}

func (m *ConTemp) Reset()                    { *m = ConTemp{} }
func (m *ConTemp) String() string            { return proto1.CompactTextString(m) }
func (*ConTemp) ProtoMessage()               {}
func (*ConTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *ConTemp) GetTemp() string {
	if m != nil {
		return m.Temp
	}
	return ""
}

func (m *ConTemp) GetConstructions() []*Constr {
	if m != nil {
		return m.Constructions
	}
	return nil
}

type Constr struct {
	Short      string     `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Obturators []*PutgObt `protobuf:"bytes,2,rep,name=obturators" json:"obturators,omitempty"`
}

func (m *Constr) Reset()                    { *m = Constr{} }
func (m *Constr) String() string            { return proto1.CompactTextString(m) }
func (*Constr) ProtoMessage()               {}
func (*Constr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *Constr) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *Constr) GetObturators() []*PutgObt {
	if m != nil {
		return m.Obturators
	}
	return nil
}

type PutgObt struct {
	Short    string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	ImageUrl string `protobuf:"bytes,2,opt,name=imageUrl" json:"imageUrl,omitempty"`
}

func (m *PutgObt) Reset()                    { *m = PutgObt{} }
func (m *PutgObt) String() string            { return proto1.CompactTextString(m) }
func (*PutgObt) ProtoMessage()               {}
func (*PutgObt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *PutgObt) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *PutgObt) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

type PutgMaterials struct {
	Values     []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Default    string   `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Obturators []string `protobuf:"bytes,3,rep,name=obturators" json:"obturators,omitempty"`
}

func (m *PutgMaterials) Reset()                    { *m = PutgMaterials{} }
func (m *PutgMaterials) String() string            { return proto1.CompactTextString(m) }
func (*PutgMaterials) ProtoMessage()               {}
func (*PutgMaterials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *PutgMaterials) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *PutgMaterials) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *PutgMaterials) GetObturators() []string {
	if m != nil {
		return m.Obturators
	}
	return nil
}

type GetPutgRequest struct {
	Form     string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetPutgRequest) Reset()                    { *m = GetPutgRequest{} }
func (m *GetPutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPutgRequest) ProtoMessage()               {}
func (*GetPutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *GetPutgRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *GetPutgRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreatePutgRequest struct {
	FlangeId     string               `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId     string               `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string               `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string               `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp          `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Reinforce    *PutgMaterials       `protobuf:"bytes,7,opt,name=reinforce" json:"reinforce,omitempty"`
	Obturator    *PutgMaterials       `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	ILimiter     *PutgMaterials       `protobuf:"bytes,9,opt,name=iLimiter" json:"iLimiter,omitempty"`
	OLimiter     *PutgMaterials       `protobuf:"bytes,10,opt,name=oLimiter" json:"oLimiter,omitempty"`
	Coating      []string             `protobuf:"bytes,11,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string             `protobuf:"bytes,12,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string             `protobuf:"bytes,13,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *CreatePutgRequest) Reset()                    { *m = CreatePutgRequest{} }
func (m *CreatePutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreatePutgRequest) ProtoMessage()               {}
func (*CreatePutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *CreatePutgRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreatePutgRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreatePutgRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreatePutgRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *CreatePutgRequest) GetConstruction() []*PutgConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *CreatePutgRequest) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *CreatePutgRequest) GetReinforce() *PutgMaterials {
	if m != nil {
		return m.Reinforce
	}
	return nil
}

func (m *CreatePutgRequest) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *CreatePutgRequest) GetILimiter() *PutgMaterials {
	if m != nil {
		return m.ILimiter
	}
	return nil
}

func (m *CreatePutgRequest) GetOLimiter() *PutgMaterials {
	if m != nil {
		return m.OLimiter
	}
	return nil
}

func (m *CreatePutgRequest) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *CreatePutgRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *CreatePutgRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type UpdatePutgRequest struct {
	Id           string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId     string               `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string               `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string               `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp          `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Reinforce    *PutgMaterials       `protobuf:"bytes,7,opt,name=reinforce" json:"reinforce,omitempty"`
	Obturator    *PutgMaterials       `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	ILimiter     *PutgMaterials       `protobuf:"bytes,9,opt,name=iLimiter" json:"iLimiter,omitempty"`
	OLimiter     *PutgMaterials       `protobuf:"bytes,10,opt,name=oLimiter" json:"oLimiter,omitempty"`
	Coating      []string             `protobuf:"bytes,11,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string             `protobuf:"bytes,12,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string             `protobuf:"bytes,13,rep,name=graphite" json:"graphite,omitempty"`
	FlangeId     string               `protobuf:"bytes,14,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdatePutgRequest) Reset()                    { *m = UpdatePutgRequest{} }
func (m *UpdatePutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePutgRequest) ProtoMessage()               {}
func (*UpdatePutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *UpdatePutgRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePutgRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdatePutgRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdatePutgRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *UpdatePutgRequest) GetConstruction() []*PutgConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *UpdatePutgRequest) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *UpdatePutgRequest) GetReinforce() *PutgMaterials {
	if m != nil {
		return m.Reinforce
	}
	return nil
}

func (m *UpdatePutgRequest) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *UpdatePutgRequest) GetILimiter() *PutgMaterials {
	if m != nil {
		return m.ILimiter
	}
	return nil
}

func (m *UpdatePutgRequest) GetOLimiter() *PutgMaterials {
	if m != nil {
		return m.OLimiter
	}
	return nil
}

func (m *UpdatePutgRequest) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *UpdatePutgRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdatePutgRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *UpdatePutgRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeletePutgRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePutgRequest) Reset()                    { *m = DeletePutgRequest{} }
func (m *DeletePutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeletePutgRequest) ProtoMessage()               {}
func (*DeletePutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *DeletePutgRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Putg struct {
	Id           string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId     string               `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string               `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string               `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp          `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Reinforce    *PutgMaterials       `protobuf:"bytes,7,opt,name=reinforce" json:"reinforce,omitempty"`
	Obturator    *PutgMaterials       `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	ILimiter     *PutgMaterials       `protobuf:"bytes,9,opt,name=iLimiter" json:"iLimiter,omitempty"`
	OLimiter     *PutgMaterials       `protobuf:"bytes,10,opt,name=oLimiter" json:"oLimiter,omitempty"`
	Coating      []string             `protobuf:"bytes,11,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string             `protobuf:"bytes,12,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string             `protobuf:"bytes,13,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *Putg) Reset()                    { *m = Putg{} }
func (m *Putg) String() string            { return proto1.CompactTextString(m) }
func (*Putg) ProtoMessage()               {}
func (*Putg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *Putg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Putg) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *Putg) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *Putg) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *Putg) GetConstruction() []*PutgConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *Putg) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *Putg) GetReinforce() *PutgMaterials {
	if m != nil {
		return m.Reinforce
	}
	return nil
}

func (m *Putg) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *Putg) GetILimiter() *PutgMaterials {
	if m != nil {
		return m.ILimiter
	}
	return nil
}

func (m *Putg) GetOLimiter() *PutgMaterials {
	if m != nil {
		return m.OLimiter
	}
	return nil
}

func (m *Putg) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *Putg) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *Putg) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type PutgResponse struct {
	Putg []*Putg `protobuf:"bytes,1,rep,name=putg" json:"putg,omitempty"`
}

func (m *PutgResponse) Reset()                    { *m = PutgResponse{} }
func (m *PutgResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutgResponse) ProtoMessage()               {}
func (*PutgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *PutgResponse) GetPutg() []*Putg {
	if m != nil {
		return m.Putg
	}
	return nil
}

// commmon ----------------------------------------------------------------
type IdResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *IdResponse) Reset()                    { *m = IdResponse{} }
func (m *IdResponse) String() string            { return proto1.CompactTextString(m) }
func (*IdResponse) ProtoMessage()               {}
func (*IdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *IdResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

type PingResponse struct {
	Ping string `protobuf:"bytes,1,opt,name=ping" json:"ping,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *PingResponse) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

func init() {
	proto1.RegisterType((*GetAllFlangeRequest)(nil), "proto.GetAllFlangeRequest")
	proto1.RegisterType((*CreateFlangeRequest)(nil), "proto.CreateFlangeRequest")
	proto1.RegisterType((*UpdateFlangeRequest)(nil), "proto.UpdateFlangeRequest")
	proto1.RegisterType((*DeleteFlangeRequest)(nil), "proto.DeleteFlangeRequest")
	proto1.RegisterType((*Flange)(nil), "proto.Flange")
	proto1.RegisterType((*FlangeResponse)(nil), "proto.FlangeResponse")
	proto1.RegisterType((*GetStandsRequest)(nil), "proto.GetStandsRequest")
	proto1.RegisterType((*CreateStandRequest)(nil), "proto.CreateStandRequest")
	proto1.RegisterType((*UpdateStandRequest)(nil), "proto.UpdateStandRequest")
	proto1.RegisterType((*DeleteStandRequest)(nil), "proto.DeleteStandRequest")
	proto1.RegisterType((*Stand)(nil), "proto.Stand")
	proto1.RegisterType((*StandResponse)(nil), "proto.StandResponse")
	proto1.RegisterType((*GetStFlRequest)(nil), "proto.GetStFlRequest")
	proto1.RegisterType((*CreateStFlRequest)(nil), "proto.CreateStFlRequest")
	proto1.RegisterType((*UpdateStFlRequest)(nil), "proto.UpdateStFlRequest")
	proto1.RegisterType((*DeleteStFlRequest)(nil), "proto.DeleteStFlRequest")
	proto1.RegisterType((*StFl)(nil), "proto.StFl")
	proto1.RegisterType((*StFlResponse)(nil), "proto.StFlResponse")
	proto1.RegisterType((*GetTypeFlRequest)(nil), "proto.GetTypeFlRequest")
	proto1.RegisterType((*CreateTypeFlRequest)(nil), "proto.CreateTypeFlRequest")
	proto1.RegisterType((*UpdateTypeFlRequest)(nil), "proto.UpdateTypeFlRequest")
	proto1.RegisterType((*DeleteTypeFlRequest)(nil), "proto.DeleteTypeFlRequest")
	proto1.RegisterType((*TypeFl)(nil), "proto.TypeFl")
	proto1.RegisterType((*TypeFlResponse)(nil), "proto.TypeFlResponse")
	proto1.RegisterType((*GetAllAddRequest)(nil), "proto.GetAllAddRequest")
	proto1.RegisterType((*AddMaterials)(nil), "proto.AddMaterials")
	proto1.RegisterType((*AddTemperature)(nil), "proto.AddTemperature")
	proto1.RegisterType((*AddMod)(nil), "proto.AddMod")
	proto1.RegisterType((*AddMoun)(nil), "proto.AddMoun")
	proto1.RegisterType((*AddGrap)(nil), "proto.AddGrap")
	proto1.RegisterType((*AddFiller)(nil), "proto.AddFiller")
	proto1.RegisterType((*AddCoating)(nil), "proto.AddCoating")
	proto1.RegisterType((*AddConstruction)(nil), "proto.AddConstruction")
	proto1.RegisterType((*AddObturator)(nil), "proto.AddObturator")
	proto1.RegisterType((*CreateAddRequest)(nil), "proto.CreateAddRequest")
	proto1.RegisterType((*UpdateAddMatRequest)(nil), "proto.UpdateAddMatRequest")
	proto1.RegisterType((*UpdateAddModRequest)(nil), "proto.UpdateAddModRequest")
	proto1.RegisterType((*UpdateAddTemRequest)(nil), "proto.UpdateAddTemRequest")
	proto1.RegisterType((*UpdateAddMounRequest)(nil), "proto.UpdateAddMounRequest")
	proto1.RegisterType((*UpdateAddGrapRequest)(nil), "proto.UpdateAddGrapRequest")
	proto1.RegisterType((*UpdateAddFillersRequest)(nil), "proto.UpdateAddFillersRequest")
	proto1.RegisterType((*UpdateAddCoatingRequest)(nil), "proto.UpdateAddCoatingRequest")
	proto1.RegisterType((*UpdateAddConstructionRequest)(nil), "proto.UpdateAddConstructionRequest")
	proto1.RegisterType((*UpdateAddObturatorRequest)(nil), "proto.UpdateAddObturatorRequest")
	proto1.RegisterType((*Additional)(nil), "proto.Additional")
	proto1.RegisterType((*AdditionalResponse)(nil), "proto.AdditionalResponse")
	proto1.RegisterType((*SuccessResponse)(nil), "proto.SuccessResponse")
	proto1.RegisterType((*GetSizesRequest)(nil), "proto.GetSizesRequest")
	proto1.RegisterType((*CreateSizeRequest)(nil), "proto.CreateSizeRequest")
	proto1.RegisterType((*UpdateSizeRequest)(nil), "proto.UpdateSizeRequest")
	proto1.RegisterType((*DeleteSizeRequest)(nil), "proto.DeleteSizeRequest")
	proto1.RegisterType((*DeleteAllSizeRequest)(nil), "proto.DeleteAllSizeRequest")
	proto1.RegisterType((*Size)(nil), "proto.Size")
	proto1.RegisterType((*Dn)(nil), "proto.Dn")
	proto1.RegisterType((*SizeResponse)(nil), "proto.SizeResponse")
	proto1.RegisterType((*Filler)(nil), "proto.Filler")
	proto1.RegisterType((*Temp)(nil), "proto.Temp")
	proto1.RegisterType((*Materials)(nil), "proto.Materials")
	proto1.RegisterType((*GetSNPRequest)(nil), "proto.GetSNPRequest")
	proto1.RegisterType((*CreateSNPRequest)(nil), "proto.CreateSNPRequest")
	proto1.RegisterType((*UpdateSNPRequest)(nil), "proto.UpdateSNPRequest")
	proto1.RegisterType((*DeleteSNPRequest)(nil), "proto.DeleteSNPRequest")
	proto1.RegisterType((*SNP)(nil), "proto.SNP")
	proto1.RegisterType((*SNPResponse)(nil), "proto.SNPResponse")
	proto1.RegisterType((*PutgImage)(nil), "proto.PutgImage")
	proto1.RegisterType((*GetPutgImageRequest)(nil), "proto.GetPutgImageRequest")
	proto1.RegisterType((*CreatePutgImageRequest)(nil), "proto.CreatePutgImageRequest")
	proto1.RegisterType((*UpdatePutgImageRequest)(nil), "proto.UpdatePutgImageRequest")
	proto1.RegisterType((*DeletePutgImageRequest)(nil), "proto.DeletePutgImageRequest")
	proto1.RegisterType((*PutgImageResponse)(nil), "proto.PutgImageResponse")
	proto1.RegisterType((*PutgTemp)(nil), "proto.PutgTemp")
	proto1.RegisterType((*PutgConstructions)(nil), "proto.PutgConstructions")
	proto1.RegisterType((*ConTemp)(nil), "proto.ConTemp")
	proto1.RegisterType((*Constr)(nil), "proto.Constr")
	proto1.RegisterType((*PutgObt)(nil), "proto.PutgObt")
	proto1.RegisterType((*PutgMaterials)(nil), "proto.PutgMaterials")
	proto1.RegisterType((*GetPutgRequest)(nil), "proto.GetPutgRequest")
	proto1.RegisterType((*CreatePutgRequest)(nil), "proto.CreatePutgRequest")
	proto1.RegisterType((*UpdatePutgRequest)(nil), "proto.UpdatePutgRequest")
	proto1.RegisterType((*DeletePutgRequest)(nil), "proto.DeletePutgRequest")
	proto1.RegisterType((*Putg)(nil), "proto.Putg")
	proto1.RegisterType((*PutgResponse)(nil), "proto.PutgResponse")
	proto1.RegisterType((*IdResponse)(nil), "proto.IdResponse")
	proto1.RegisterType((*PingRequest)(nil), "proto.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "proto.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProService service

type ProServiceClient interface {
	// common -----------------------------------------------------------------------
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error)
	CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error)
	CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error)
	CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error)
	CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateCoating(ctx context.Context, in *UpdateAddCoatingRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateConstruction(ctx context.Context, in *UpdateAddConstructionRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateObturator(ctx context.Context, in *UpdateAddObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// Size Service ----------------------------------------------------------------
	GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	GetAllSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteAllSize(ctx context.Context, in *DeleteAllSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error)
	CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTG Image Service ----------------------------------------------------------------
	GetPutgImage(ctx context.Context, in *GetPutgImageRequest, opts ...grpc.CallOption) (*PutgImageResponse, error)
	CreatePutgImage(ctx context.Context, in *CreatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgImage(ctx context.Context, in *UpdatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgImage(ctx context.Context, in *DeletePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTG Service ----------------------------------------------------------------
	GetPutg(ctx context.Context, in *GetPutgRequest, opts ...grpc.CallOption) (*PutgResponse, error)
	CreatePutg(ctx context.Context, in *CreatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutg(ctx context.Context, in *UpdatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutg(ctx context.Context, in *DeletePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
}

type proServiceClient struct {
	cc *grpc.ClientConn
}

func NewProServiceClient(cc *grpc.ClientConn) ProServiceClient {
	return &proServiceClient{cc}
}

func (c *proServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error) {
	out := new(FlangeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllFlanges", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error) {
	out := new(StandResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllStands", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error) {
	out := new(StFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error) {
	out := new(AdditionalResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllAdditional", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateAdditional", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateTemp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMoun", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateGrap", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateFillers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateCoating(ctx context.Context, in *UpdateAddCoatingRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateCoating", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateConstruction(ctx context.Context, in *UpdateAddConstructionRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateConstruction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateObturator(ctx context.Context, in *UpdateAddObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateObturator", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSizes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllSizes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteAllSize(ctx context.Context, in *DeleteAllSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteAllSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error) {
	out := new(SNPResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgImage(ctx context.Context, in *GetPutgImageRequest, opts ...grpc.CallOption) (*PutgImageResponse, error) {
	out := new(PutgImageResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgImage(ctx context.Context, in *CreatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreatePutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgImage(ctx context.Context, in *UpdatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgImage(ctx context.Context, in *DeletePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeletePutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutg(ctx context.Context, in *GetPutgRequest, opts ...grpc.CallOption) (*PutgResponse, error) {
	out := new(PutgResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutg(ctx context.Context, in *CreatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreatePutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutg(ctx context.Context, in *UpdatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutg(ctx context.Context, in *DeletePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeletePutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProService service

type ProServiceServer interface {
	// common -----------------------------------------------------------------------
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(context.Context, *GetAllFlangeRequest) (*FlangeResponse, error)
	CreateFlange(context.Context, *CreateFlangeRequest) (*IdResponse, error)
	UpdateFlange(context.Context, *UpdateFlangeRequest) (*IdResponse, error)
	DeleteFlange(context.Context, *DeleteFlangeRequest) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(context.Context, *GetStandsRequest) (*StandResponse, error)
	CreateStand(context.Context, *CreateStandRequest) (*IdResponse, error)
	UpdateStand(context.Context, *UpdateStandRequest) (*IdResponse, error)
	DeleteStand(context.Context, *DeleteStandRequest) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(context.Context, *GetStFlRequest) (*StFlResponse, error)
	CreateStFl(context.Context, *CreateStFlRequest) (*IdResponse, error)
	UpdateStFl(context.Context, *UpdateStFlRequest) (*IdResponse, error)
	DeleteStFl(context.Context, *DeleteStFlRequest) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	GetAllTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	CreateTypeFl(context.Context, *CreateTypeFlRequest) (*IdResponse, error)
	UpdateTypeFl(context.Context, *UpdateTypeFlRequest) (*IdResponse, error)
	DeleteTypeFl(context.Context, *DeleteTypeFlRequest) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(context.Context, *GetAllAddRequest) (*AdditionalResponse, error)
	CreateAdditional(context.Context, *CreateAddRequest) (*SuccessResponse, error)
	UpdateMat(context.Context, *UpdateAddMatRequest) (*SuccessResponse, error)
	UpdateMod(context.Context, *UpdateAddModRequest) (*SuccessResponse, error)
	UpdateTemp(context.Context, *UpdateAddTemRequest) (*SuccessResponse, error)
	UpdateMoun(context.Context, *UpdateAddMounRequest) (*SuccessResponse, error)
	UpdateGrap(context.Context, *UpdateAddGrapRequest) (*SuccessResponse, error)
	UpdateFillers(context.Context, *UpdateAddFillersRequest) (*SuccessResponse, error)
	UpdateCoating(context.Context, *UpdateAddCoatingRequest) (*SuccessResponse, error)
	UpdateConstruction(context.Context, *UpdateAddConstructionRequest) (*SuccessResponse, error)
	UpdateObturator(context.Context, *UpdateAddObturatorRequest) (*SuccessResponse, error)
	// Size Service ----------------------------------------------------------------
	GetSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	GetAllSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	CreateSize(context.Context, *CreateSizeRequest) (*IdResponse, error)
	UpdateSize(context.Context, *UpdateSizeRequest) (*IdResponse, error)
	DeleteSize(context.Context, *DeleteSizeRequest) (*IdResponse, error)
	DeleteAllSize(context.Context, *DeleteAllSizeRequest) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(context.Context, *GetSNPRequest) (*SNPResponse, error)
	CreateSNP(context.Context, *CreateSNPRequest) (*IdResponse, error)
	UpdateSNP(context.Context, *UpdateSNPRequest) (*IdResponse, error)
	DeleteSNP(context.Context, *DeleteSNPRequest) (*IdResponse, error)
	// PUTG Image Service ----------------------------------------------------------------
	GetPutgImage(context.Context, *GetPutgImageRequest) (*PutgImageResponse, error)
	CreatePutgImage(context.Context, *CreatePutgImageRequest) (*IdResponse, error)
	UpdatePutgImage(context.Context, *UpdatePutgImageRequest) (*IdResponse, error)
	DeletePutgImage(context.Context, *DeletePutgImageRequest) (*IdResponse, error)
	// PUTG Service ----------------------------------------------------------------
	GetPutg(context.Context, *GetPutgRequest) (*PutgResponse, error)
	CreatePutg(context.Context, *CreatePutgRequest) (*IdResponse, error)
	UpdatePutg(context.Context, *UpdatePutgRequest) (*IdResponse, error)
	DeletePutg(context.Context, *DeletePutgRequest) (*IdResponse, error)
}

func RegisterProServiceServer(s *grpc.Server, srv ProServiceServer) {
	s.RegisterService(&_ProService_serviceDesc, srv)
}

func _ProService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllFlanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllFlanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllFlanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllFlanges(ctx, req.(*GetAllFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateFlange(ctx, req.(*CreateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFlange(ctx, req.(*UpdateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteFlange(ctx, req.(*DeleteFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllStands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllStands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllStands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllStands(ctx, req.(*GetStandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStand(ctx, req.(*CreateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStand(ctx, req.(*UpdateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStand(ctx, req.(*DeleteStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetStFl(ctx, req.(*GetStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStFl(ctx, req.(*CreateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStFl(ctx, req.(*UpdateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStFl(ctx, req.(*DeleteStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateTypeFl(ctx, req.(*CreateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, req.(*UpdateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, req.(*DeleteTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllAdditional(ctx, req.(*GetAllAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateAdditional(ctx, req.(*CreateAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMat(ctx, req.(*UpdateAddMatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddModRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMod(ctx, req.(*UpdateAddModRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddTemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTemp(ctx, req.(*UpdateAddTemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMoun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMounRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMoun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMoun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMoun(ctx, req.(*UpdateAddMounRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateGrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddGrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateGrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateGrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateGrap(ctx, req.(*UpdateAddGrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFillers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddFillersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFillers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateFillers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFillers(ctx, req.(*UpdateAddFillersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateCoating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddCoatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateCoating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateCoating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateCoating(ctx, req.(*UpdateAddCoatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateConstruction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddConstructionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateConstruction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateConstruction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateConstruction(ctx, req.(*UpdateAddConstructionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateObturator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddObturatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateObturator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateObturator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateObturator(ctx, req.(*UpdateAddObturatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSize(ctx, req.(*CreateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSize(ctx, req.(*UpdateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSize(ctx, req.(*DeleteSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteAllSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteAllSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteAllSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteAllSize(ctx, req.(*DeleteAllSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSNP(ctx, req.(*GetSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSNP(ctx, req.(*CreateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSNP(ctx, req.(*UpdateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSNP(ctx, req.(*DeleteSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgImage(ctx, req.(*GetPutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreatePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgImage(ctx, req.(*CreatePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgImage(ctx, req.(*UpdatePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeletePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgImage(ctx, req.(*DeletePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutg(ctx, req.(*GetPutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreatePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutg(ctx, req.(*CreatePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutg(ctx, req.(*UpdatePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeletePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutg(ctx, req.(*DeletePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProService",
	HandlerType: (*ProServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ProService_Ping_Handler,
		},
		{
			MethodName: "GetAllFlanges",
			Handler:    _ProService_GetAllFlanges_Handler,
		},
		{
			MethodName: "CreateFlange",
			Handler:    _ProService_CreateFlange_Handler,
		},
		{
			MethodName: "UpdateFlange",
			Handler:    _ProService_UpdateFlange_Handler,
		},
		{
			MethodName: "DeleteFlange",
			Handler:    _ProService_DeleteFlange_Handler,
		},
		{
			MethodName: "GetAllStands",
			Handler:    _ProService_GetAllStands_Handler,
		},
		{
			MethodName: "CreateStand",
			Handler:    _ProService_CreateStand_Handler,
		},
		{
			MethodName: "UpdateStand",
			Handler:    _ProService_UpdateStand_Handler,
		},
		{
			MethodName: "DeleteStand",
			Handler:    _ProService_DeleteStand_Handler,
		},
		{
			MethodName: "GetStFl",
			Handler:    _ProService_GetStFl_Handler,
		},
		{
			MethodName: "CreateStFl",
			Handler:    _ProService_CreateStFl_Handler,
		},
		{
			MethodName: "UpdateStFl",
			Handler:    _ProService_UpdateStFl_Handler,
		},
		{
			MethodName: "DeleteStFl",
			Handler:    _ProService_DeleteStFl_Handler,
		},
		{
			MethodName: "GetTypeFl",
			Handler:    _ProService_GetTypeFl_Handler,
		},
		{
			MethodName: "GetAllTypeFl",
			Handler:    _ProService_GetAllTypeFl_Handler,
		},
		{
			MethodName: "CreateTypeFl",
			Handler:    _ProService_CreateTypeFl_Handler,
		},
		{
			MethodName: "UpdateTypeFl",
			Handler:    _ProService_UpdateTypeFl_Handler,
		},
		{
			MethodName: "DeleteTypeFl",
			Handler:    _ProService_DeleteTypeFl_Handler,
		},
		{
			MethodName: "GetAllAdditional",
			Handler:    _ProService_GetAllAdditional_Handler,
		},
		{
			MethodName: "CreateAdditional",
			Handler:    _ProService_CreateAdditional_Handler,
		},
		{
			MethodName: "UpdateMat",
			Handler:    _ProService_UpdateMat_Handler,
		},
		{
			MethodName: "UpdateMod",
			Handler:    _ProService_UpdateMod_Handler,
		},
		{
			MethodName: "UpdateTemp",
			Handler:    _ProService_UpdateTemp_Handler,
		},
		{
			MethodName: "UpdateMoun",
			Handler:    _ProService_UpdateMoun_Handler,
		},
		{
			MethodName: "UpdateGrap",
			Handler:    _ProService_UpdateGrap_Handler,
		},
		{
			MethodName: "UpdateFillers",
			Handler:    _ProService_UpdateFillers_Handler,
		},
		{
			MethodName: "UpdateCoating",
			Handler:    _ProService_UpdateCoating_Handler,
		},
		{
			MethodName: "UpdateConstruction",
			Handler:    _ProService_UpdateConstruction_Handler,
		},
		{
			MethodName: "UpdateObturator",
			Handler:    _ProService_UpdateObturator_Handler,
		},
		{
			MethodName: "GetSizes",
			Handler:    _ProService_GetSizes_Handler,
		},
		{
			MethodName: "GetAllSizes",
			Handler:    _ProService_GetAllSizes_Handler,
		},
		{
			MethodName: "CreateSize",
			Handler:    _ProService_CreateSize_Handler,
		},
		{
			MethodName: "UpdateSize",
			Handler:    _ProService_UpdateSize_Handler,
		},
		{
			MethodName: "DeleteSize",
			Handler:    _ProService_DeleteSize_Handler,
		},
		{
			MethodName: "DeleteAllSize",
			Handler:    _ProService_DeleteAllSize_Handler,
		},
		{
			MethodName: "GetSNP",
			Handler:    _ProService_GetSNP_Handler,
		},
		{
			MethodName: "CreateSNP",
			Handler:    _ProService_CreateSNP_Handler,
		},
		{
			MethodName: "UpdateSNP",
			Handler:    _ProService_UpdateSNP_Handler,
		},
		{
			MethodName: "DeleteSNP",
			Handler:    _ProService_DeleteSNP_Handler,
		},
		{
			MethodName: "GetPutgImage",
			Handler:    _ProService_GetPutgImage_Handler,
		},
		{
			MethodName: "CreatePutgImage",
			Handler:    _ProService_CreatePutgImage_Handler,
		},
		{
			MethodName: "UpdatePutgImage",
			Handler:    _ProService_UpdatePutgImage_Handler,
		},
		{
			MethodName: "DeletePutgImage",
			Handler:    _ProService_DeletePutgImage_Handler,
		},
		{
			MethodName: "GetPutg",
			Handler:    _ProService_GetPutg_Handler,
		},
		{
			MethodName: "CreatePutg",
			Handler:    _ProService_CreatePutg_Handler,
		},
		{
			MethodName: "UpdatePutg",
			Handler:    _ProService_UpdatePutg_Handler,
		},
		{
			MethodName: "DeletePutg",
			Handler:    _ProService_DeletePutg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/pro.proto",
}

func init() { proto1.RegisterFile("proto/pro.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x59, 0x73, 0x1c, 0x57,
	0x15, 0xae, 0xe9, 0xe9, 0xd9, 0xce, 0x2c, 0x92, 0x5b, 0xb2, 0x3c, 0x1e, 0x4c, 0xa2, 0xdc, 0x6c,
	0x26, 0x2e, 0x24, 0x2c, 0x25, 0xb8, 0x6c, 0x61, 0x92, 0x89, 0x84, 0x8c, 0x8a, 0xd8, 0x51, 0xc6,
	0x0e, 0x94, 0xc3, 0x53, 0x5b, 0xdd, 0xb2, 0x1a, 0x7a, 0xa6, 0x87, 0xee, 0x1e, 0x03, 0xae, 0xe2,
	0x85, 0x2a, 0x20, 0x4f, 0x14, 0x4f, 0xc0, 0x1b, 0x55, 0xfc, 0x14, 0xde, 0xf2, 0x0f, 0xe0, 0x57,
	0xf0, 0x17, 0xa8, 0xbb, 0x2f, 0xbd, 0x4c, 0xcb, 0x12, 0x55, 0x54, 0x91, 0xa7, 0x99, 0xbb, 0x9c,
	0x73, 0xcf, 0xfd, 0xee, 0x59, 0xfa, 0x9e, 0x7b, 0x60, 0x65, 0x1e, 0x47, 0x69, 0xb4, 0x3d, 0x8f,
	0xa3, 0x2d, 0xf2, 0xcf, 0x69, 0x90, 0x1f, 0x74, 0x15, 0xd6, 0x1e, 0xf8, 0xe9, 0x38, 0x0c, 0x0f,
	0x43, 0x77, 0xf6, 0xdc, 0x9f, 0xf8, 0xbf, 0x58, 0xf8, 0x49, 0x8a, 0xc6, 0xb0, 0xb6, 0x1f, 0xfb,
	0x6e, 0xea, 0x6b, 0xdd, 0xce, 0x3a, 0x34, 0xd2, 0x20, 0x0d, 0xfd, 0x61, 0x6d, 0xb3, 0x76, 0xb3,
	0x33, 0xa1, 0x0d, 0xdc, 0x9b, 0x9c, 0x45, 0x71, 0x3a, 0xb4, 0x68, 0x2f, 0x69, 0xa0, 0xcf, 0x60,
	0xed, 0xf3, 0xb9, 0x97, 0x61, 0x31, 0x00, 0x2b, 0xf0, 0x18, 0xbd, 0x15, 0x78, 0x92, 0xa5, 0x95,
	0xcb, 0xb2, 0xae, 0xb2, 0x7c, 0x1b, 0xd6, 0x0e, 0xfc, 0xd0, 0x5f, 0xc2, 0x12, 0x1d, 0x40, 0x93,
	0x4e, 0xb8, 0xd0, 0x62, 0x77, 0x61, 0xc0, 0x97, 0x49, 0xe6, 0xd1, 0x2c, 0xf1, 0x9d, 0x77, 0xa1,
	0x75, 0x4a, 0x7a, 0x92, 0x61, 0x6d, 0xb3, 0x7e, 0xb3, 0xbb, 0xd3, 0xa7, 0x58, 0x6e, 0xb1, 0x79,
	0x7c, 0x14, 0x39, 0xb0, 0xfa, 0xc0, 0x4f, 0x1f, 0xa7, 0xee, 0xcc, 0x4b, 0x38, 0xa2, 0xef, 0x81,
	0x43, 0x11, 0x25, 0xdd, 0xa5, 0x80, 0xa2, 0x7b, 0xe0, 0x50, 0xe8, 0xb4, 0xb9, 0x95, 0x36, 0x83,
	0xde, 0x02, 0x87, 0x62, 0x54, 0x46, 0x8b, 0xbe, 0x0d, 0x0d, 0x32, 0x5e, 0x91, 0xe9, 0x07, 0xd0,
	0x67, 0xec, 0x18, 0x14, 0x6f, 0x41, 0x33, 0x21, 0xdb, 0x63, 0x48, 0xf4, 0x18, 0x12, 0x74, 0x16,
	0x1b, 0x43, 0xab, 0x30, 0x20, 0x38, 0x1c, 0x86, 0x1c, 0x85, 0x23, 0xb8, 0xc2, 0x51, 0x10, 0x9d,
	0xce, 0x10, 0x5a, 0x84, 0xe0, 0x88, 0x0b, 0xc2, 0x9b, 0xce, 0x08, 0xda, 0x14, 0xd3, 0x23, 0x8f,
	0x09, 0x24, 0xda, 0xe8, 0x29, 0x5c, 0xe1, 0x20, 0x49, 0x56, 0xe6, 0x76, 0x14, 0xd6, 0x56, 0x31,
	0xeb, 0xba, 0xc1, 0xfa, 0x4d, 0xb8, 0xc2, 0x31, 0x2c, 0x64, 0x8d, 0xfe, 0x54, 0x03, 0x1b, 0x8f,
	0x9f, 0x63, 0x4d, 0xac, 0x68, 0xf8, 0xaf, 0x50, 0x34, 0x72, 0x04, 0xaa, 0x24, 0xb6, 0x2e, 0x89,
	0xb3, 0x01, 0x4d, 0xfa, 0x7f, 0xd8, 0x20, 0x23, 0xac, 0x25, 0x55, 0xb6, 0xa9, 0xaa, 0xec, 0x36,
	0xf4, 0xa8, 0xc4, 0xec, 0x94, 0x5e, 0x07, 0x3b, 0x49, 0x4f, 0x43, 0x76, 0x46, 0x5d, 0x71, 0x46,
	0x87, 0xe1, 0x84, 0x0c, 0x30, 0x45, 0x7d, 0xf2, 0xeb, 0xb9, 0x2f, 0x8f, 0x68, 0xca, 0x4d, 0x5f,
	0xeb, 0x2e, 0x36, 0x7d, 0xcf, 0x4f, 0x4e, 0x62, 0xae, 0x2e, 0xa4, 0x91, 0x6f, 0x50, 0xb8, 0xf7,
	0x99, 0x9b, 0x04, 0x09, 0xd9, 0x64, 0x7b, 0x42, 0x1b, 0xe8, 0x37, 0xdc, 0x4d, 0xe8, 0xcb, 0x55,
	0xb6, 0x5c, 0xba, 0x7c, 0x3d, 0x77, 0x79, 0x3b, 0x77, 0xf9, 0x86, 0xba, 0xbc, 0x70, 0x29, 0xa5,
	0xcb, 0xa3, 0x2f, 0xa0, 0x49, 0x27, 0x5c, 0xbe, 0x60, 0xe8, 0x0e, 0x0c, 0xf8, 0xe2, 0xec, 0xdc,
	0xde, 0x86, 0x66, 0x4a, 0x7a, 0x0c, 0x3f, 0xc3, 0xa6, 0xb1, 0x41, 0x76, 0x7a, 0xe3, 0x30, 0x1c,
	0x7b, 0xdc, 0xd0, 0xd1, 0x3d, 0xe8, 0x8d, 0x3d, 0xef, 0xa1, 0x9b, 0xfa, 0x71, 0xe0, 0x86, 0x89,
	0x5c, 0xb2, 0x66, 0x60, 0x91, 0x63, 0xe5, 0xdf, 0x85, 0xc1, 0xd8, 0xf3, 0x9e, 0xf8, 0xd3, 0xb9,
	0x1f, 0xbb, 0xe9, 0x22, 0xae, 0xe8, 0x3f, 0xd1, 0x29, 0x34, 0xf1, 0x9a, 0x51, 0xae, 0x37, 0xc9,
	0x46, 0x06, 0xc9, 0xa5, 0xae, 0x42, 0xb6, 0x09, 0x5d, 0x82, 0x52, 0x30, 0x4f, 0x83, 0x68, 0xc6,
	0x20, 0x52, 0xbb, 0xd0, 0x36, 0xb4, 0xc8, 0x3a, 0x8b, 0x59, 0x45, 0xc1, 0x7e, 0x42, 0x08, 0x1e,
	0xc4, 0xee, 0xfc, 0x3c, 0x38, 0x98, 0x92, 0xd4, 0xb3, 0x92, 0x3c, 0x85, 0xce, 0xd8, 0xf3, 0x0e,
	0x83, 0x30, 0xf4, 0xe3, 0x4b, 0x66, 0xfd, 0x33, 0x80, 0xb1, 0xe7, 0xed, 0x47, 0x6e, 0x1a, 0xcc,
	0x9e, 0xff, 0x97, 0x01, 0xfd, 0x43, 0x0d, 0x56, 0xc8, 0x62, 0xb3, 0x24, 0x8d, 0x17, 0x27, 0xb8,
	0xef, 0x72, 0x77, 0xe3, 0xbc, 0x03, 0x83, 0x20, 0xf9, 0xa1, 0xfb, 0xc2, 0xe7, 0x1a, 0xc9, 0x8c,
	0xdf, 0xe8, 0x45, 0xbf, 0x22, 0x6a, 0xfb, 0xe9, 0xb3, 0x74, 0x11, 0xbb, 0x69, 0x74, 0xc9, 0x98,
	0x12, 0x0f, 0x1b, 0xc5, 0x07, 0xc4, 0x20, 0xb9, 0x87, 0x65, 0x6d, 0xf4, 0x0f, 0x0b, 0x56, 0xa9,
	0xbf, 0x93, 0x56, 0xe4, 0xdc, 0x80, 0xce, 0x94, 0x9b, 0x10, 0x13, 0x41, 0x76, 0x38, 0xab, 0x50,
	0x9f, 0x46, 0xdc, 0xb9, 0xe3, 0xbf, 0x58, 0x84, 0x54, 0x9a, 0x0d, 0x17, 0x41, 0xe9, 0xc2, 0x22,
	0x4c, 0xa3, 0xc5, 0x0c, 0x1f, 0x2a, 0x17, 0x81, 0xb7, 0xf1, 0xd8, 0xf3, 0xd8, 0x9d, 0x9f, 0x05,
	0x29, 0x77, 0xf3, 0xa2, 0x8d, 0x83, 0xc9, 0x29, 0x51, 0xb3, 0x84, 0xb9, 0x7a, 0xde, 0xc4, 0x23,
	0x27, 0x54, 0x4b, 0x86, 0x2d, 0x3a, 0xc2, 0x9a, 0x0e, 0x82, 0xde, 0x89, 0x72, 0xa4, 0xc3, 0x36,
	0x19, 0xd6, 0xfa, 0xf0, 0x0e, 0x23, 0x8e, 0xf6, 0xb0, 0x43, 0x77, 0x18, 0xa9, 0xf0, 0x53, 0x5f,
	0x09, 0x14, 0x68, 0xd2, 0x20, 0x81, 0xcd, 0x77, 0x43, 0x77, 0x96, 0x0e, 0xbb, 0x2c, 0xb0, 0xd1,
	0x26, 0xfa, 0xb2, 0xc6, 0xbd, 0x38, 0x75, 0x3e, 0x45, 0x5e, 0xfc, 0xb6, 0x8a, 0xab, 0x45, 0x7c,
	0xdb, 0x1a, 0xf3, 0x6d, 0xaa, 0xd7, 0x52, 0xc1, 0xde, 0xa0, 0xbe, 0x70, 0xff, 0x8c, 0xa1, 0xca,
	0x5a, 0xb8, 0xff, 0xe4, 0x8c, 0x44, 0x46, 0x0a, 0x27, 0x6b, 0xa1, 0x17, 0xaa, 0x24, 0x51, 0xe1,
	0xc7, 0xd3, 0xeb, 0xfc, 0x0c, 0x55, 0xff, 0xca, 0x48, 0xc8, 0x91, 0x9e, 0x77, 0xdd, 0x3f, 0xaa,
	0x10, 0x3c, 0xf1, 0xa7, 0x45, 0x0b, 0xdf, 0xd1, 0x55, 0x85, 0x0a, 0x70, 0x55, 0x0a, 0xa0, 0xb8,
	0x5f, 0x5d, 0x83, 0xce, 0x2b, 0xd0, 0x6f, 0x6b, 0xb0, 0xae, 0x20, 0xb1, 0x98, 0x15, 0x49, 0xf4,
	0x9e, 0xa2, 0x9a, 0x54, 0x9c, 0x81, 0x8a, 0xc7, 0x62, 0xa6, 0xa8, 0xea, 0x85, 0x84, 0xc0, 0x8e,
	0xb8, 0x44, 0x08, 0x61, 0x03, 0x19, 0x21, 0x08, 0xa1, 0xb4, 0x89, 0xf3, 0x0a, 0xf1, 0xbb, 0x1a,
	0x5c, 0x13, 0x42, 0x50, 0xa7, 0x9d, 0x14, 0xcb, 0x21, 0xec, 0x8d, 0x8a, 0xb1, 0x2a, 0xc5, 0xa0,
	0xa4, 0xd2, 0x02, 0xcf, 0x2b, 0xc7, 0xef, 0x55, 0x39, 0x98, 0x87, 0x2f, 0x92, 0xe3, 0x96, 0xb4,
	0x6e, 0x2a, 0xc7, 0x15, 0x29, 0x07, 0x27, 0x15, 0x06, 0xff, 0x0a, 0xba, 0x7a, 0x43, 0x11, 0x44,
	0xba, 0x85, 0x22, 0x69, 0xb6, 0xa0, 0x49, 0xbd, 0x07, 0x13, 0x66, 0x43, 0x15, 0x46, 0x21, 0x67,
	0xb3, 0x5e, 0x45, 0xa0, 0xeb, 0x42, 0x20, 0x11, 0x05, 0x4a, 0xbc, 0x88, 0xf4, 0x5d, 0x19, 0x2f,
	0x22, 0xc9, 0x15, 0x87, 0x76, 0x5e, 0x81, 0xbe, 0xaa, 0x93, 0x30, 0x1c, 0xe0, 0x5d, 0xb9, 0xe1,
	0x65, 0xf8, 0x31, 0xe6, 0x70, 0xea, 0x85, 0x0e, 0xc7, 0x70, 0x0c, 0x76, 0x65, 0xc7, 0xa0, 0xda,
	0x6f, 0x63, 0x89, 0xfd, 0xaa, 0x66, 0xd6, 0x5c, 0x62, 0x66, 0x8a, 0x29, 0xb4, 0x96, 0x99, 0x82,
	0xa2, 0xae, 0xed, 0xa5, 0xea, 0x7a, 0xcf, 0x88, 0x4f, 0x9d, 0x52, 0x9d, 0xd2, 0xe3, 0x96, 0x76,
	0xf6, 0x50, 0xe5, 0xec, 0xd1, 0x11, 0x38, 0xf2, 0x28, 0xc5, 0x37, 0xf6, 0x2e, 0x74, 0x5d, 0xd1,
	0xcb, 0xaf, 0xb1, 0x8a, 0xd4, 0x7c, 0xbe, 0x3a, 0x0b, 0xdd, 0x82, 0x95, 0xc7, 0x8b, 0x93, 0x13,
	0x3f, 0x49, 0x04, 0x1f, 0x1c, 0x14, 0x69, 0x17, 0xd1, 0x8f, 0xf6, 0x84, 0x37, 0xd1, 0x2f, 0x61,
	0x05, 0xdf, 0x7e, 0x83, 0x97, 0xbe, 0xf0, 0x36, 0xf2, 0x3a, 0x57, 0xd3, 0xae, 0x73, 0x23, 0x68,
	0xd3, 0x6f, 0x7a, 0x79, 0xcf, 0xe5, 0x6d, 0xae, 0xba, 0xc7, 0xb1, 0xaa, 0xba, 0xc7, 0xb1, 0x7a,
	0xcd, 0xb4, 0xb5, 0x6b, 0x26, 0xfa, 0x9b, 0x25, 0x6e, 0xd9, 0xc1, 0x4b, 0xff, 0x22, 0x6b, 0x0f,
	0xc0, 0xf2, 0xf8, 0x17, 0x95, 0xe5, 0x91, 0xcf, 0xee, 0x39, 0xff, 0x92, 0xb4, 0xe6, 0x33, 0x45,
	0xb6, 0x46, 0x91, 0x6c, 0x4d, 0xfd, 0x0a, 0x8c, 0x39, 0xbe, 0xcf, 0x3e, 0x58, 0x2c, 0xef, 0x7d,
	0xd2, 0xde, 0x65, 0x5f, 0x28, 0x96, 0xb7, 0x4b, 0xda, 0x3b, 0xec, 0x83, 0xc4, 0xf2, 0x76, 0x48,
	0xfb, 0x36, 0xfb, 0x0c, 0xb1, 0xbc, 0xdb, 0x4e, 0x0f, 0x6a, 0x67, 0xec, 0xeb, 0xa3, 0x76, 0x86,
	0x47, 0x93, 0x9d, 0x61, 0x8f, 0x8e, 0x26, 0x64, 0x76, 0xb2, 0x3b, 0xec, 0xb3, 0xf6, 0x2e, 0x96,
	0x6f, 0xb6, 0x98, 0x3e, 0xf3, 0xe3, 0xe1, 0x60, 0xb3, 0x76, 0xb3, 0x31, 0x61, 0x2d, 0xf4, 0x17,
	0x4b, 0x24, 0x0f, 0x2e, 0x8e, 0x50, 0xc0, 0xef, 0xf3, 0xd8, 0x33, 0x50, 0xc4, 0x6c, 0x03, 0xb1,
	0x46, 0x0e, 0x62, 0xcd, 0x22, 0xc4, 0x5a, 0x79, 0x88, 0xb5, 0x0d, 0xc4, 0x3a, 0x06, 0x62, 0x60,
	0x20, 0xd6, 0xd5, 0x11, 0xeb, 0xe9, 0x88, 0xf5, 0x0d, 0xc4, 0x06, 0x1c, 0x31, 0xb4, 0x27, 0x52,
	0x1f, 0x15, 0x80, 0xa1, 0x9b, 0xb7, 0xc4, 0x2d, 0xf9, 0x10, 0xd6, 0x29, 0xf1, 0x38, 0x0c, 0xab,
	0xd0, 0x4b, 0x30, 0x2c, 0x15, 0x0c, 0xf4, 0xcf, 0x1a, 0xd8, 0x98, 0x3e, 0xe3, 0x77, 0x29, 0xba,
	0x96, 0x81, 0x6e, 0x5d, 0xa0, 0x4b, 0xb1, 0xb2, 0x0d, 0xac, 0x1a, 0x06, 0x56, 0x4d, 0x03, 0xab,
	0x96, 0x8e, 0x55, 0x5b, 0xc7, 0xaa, 0x63, 0x60, 0x05, 0xaa, 0x76, 0x31, 0xf1, 0xbb, 0xda, 0x59,
	0xaa, 0xfa, 0xd2, 0xd3, 0xf5, 0x05, 0xad, 0x83, 0x75, 0x30, 0x63, 0xfb, 0xa8, 0xf1, 0x7d, 0xa0,
	0x4f, 0xa0, 0x47, 0xf1, 0x62, 0x4e, 0xe5, 0x0d, 0x68, 0x24, 0xd8, 0x6f, 0x98, 0x99, 0x1b, 0x3c,
	0x87, 0x8e, 0x38, 0xd7, 0x19, 0x14, 0x78, 0xbc, 0xc3, 0xc6, 0x0f, 0x66, 0x84, 0xdb, 0x1e, 0x34,
	0xd9, 0xd5, 0xd4, 0xc4, 0xef, 0x0d, 0x68, 0xe0, 0xc8, 0xc1, 0x63, 0x16, 0xe7, 0x8b, 0x43, 0xcb,
	0x84, 0x8e, 0xa0, 0xf7, 0xc0, 0xc6, 0xcd, 0x0c, 0xa9, 0x03, 0xf6, 0x34, 0xf2, 0x28, 0x65, 0x67,
	0x42, 0xfe, 0xa3, 0xfb, 0xd0, 0x79, 0xa8, 0x7e, 0xa8, 0xbf, 0x70, 0xc3, 0x05, 0x13, 0xba, 0x33,
	0x61, 0x2d, 0xac, 0xd9, 0x9e, 0x7f, 0xea, 0x2e, 0x42, 0x7e, 0x69, 0xe5, 0x4d, 0xf4, 0x03, 0xe8,
	0x63, 0x07, 0xf9, 0xe8, 0xf8, 0x62, 0x89, 0xc0, 0xaf, 0xc4, 0x0d, 0xee, 0xa2, 0xac, 0xb4, 0x93,
	0xab, 0x17, 0xfa, 0x61, 0x5b, 0x3b, 0xed, 0x77, 0x65, 0x98, 0x6c, 0xe8, 0x59, 0x61, 0x23, 0x46,
	0xbe, 0x03, 0x8d, 0xd3, 0xd8, 0x9d, 0xfa, 0x44, 0xff, 0x64, 0x34, 0x95, 0x5f, 0x0b, 0x74, 0xd8,
	0xd9, 0x04, 0x2b, 0x88, 0x89, 0x52, 0xe6, 0x4d, 0xb2, 0x82, 0x18, 0xcf, 0x88, 0x62, 0xa2, 0xa7,
	0xb9, 0x33, 0xa2, 0x58, 0xbb, 0x6e, 0x76, 0xc8, 0x71, 0xe4, 0x5f, 0x37, 0x81, 0x8e, 0xf1, 0x36,
	0xfa, 0x97, 0x05, 0xab, 0xcc, 0x31, 0x4a, 0x2c, 0x2f, 0x25, 0xa9, 0xaa, 0x61, 0x6b, 0x17, 0x62,
	0xdb, 0x28, 0xc2, 0xb6, 0x59, 0x0d, 0xdb, 0x56, 0x15, 0x6c, 0xdb, 0x4b, 0xb1, 0xed, 0x54, 0xc4,
	0x16, 0x4a, 0xb0, 0xed, 0x1a, 0xd8, 0x22, 0x58, 0x65, 0xae, 0xb5, 0x10, 0x5a, 0xf4, 0x67, 0x0b,
	0xea, 0x8f, 0x1f, 0x1d, 0x67, 0x20, 0x7f, 0x95, 0x0f, 0x04, 0x05, 0x3c, 0xbb, 0x1a, 0x78, 0x8d,
	0x2a, 0xe0, 0x35, 0x97, 0x82, 0xd7, 0xaa, 0x08, 0x5e, 0xbb, 0x04, 0xbc, 0x8e, 0x01, 0xde, 0x2d,
	0xe8, 0x12, 0xd8, 0x98, 0x83, 0xbc, 0x01, 0xf5, 0x64, 0x36, 0x67, 0xee, 0x11, 0xb8, 0x7b, 0x7c,
	0x74, 0x3c, 0xc1, 0xdd, 0xe8, 0x29, 0x74, 0x8e, 0x17, 0xe9, 0xf3, 0xa3, 0xa9, 0x9b, 0xf3, 0x06,
	0xe4, 0x80, 0x7d, 0x1a, 0xc5, 0x53, 0x06, 0x23, 0xf9, 0x8f, 0x21, 0x7c, 0xee, 0x26, 0x3f, 0xf7,
	0x79, 0xc6, 0x9a, 0xb5, 0x9c, 0x55, 0xa8, 0x2f, 0xe2, 0x90, 0xa9, 0x2b, 0xfe, 0x8b, 0xbe, 0x45,
	0xde, 0xcb, 0x04, 0x77, 0x7e, 0x8e, 0x9c, 0x69, 0x4d, 0x32, 0x45, 0x3f, 0x86, 0x0d, 0xea, 0x96,
	0xaa, 0xcc, 0x56, 0x44, 0xb0, 0xf2, 0x44, 0xa8, 0x4b, 0x11, 0x4e, 0x61, 0x83, 0x9a, 0x68, 0x86,
	0xef, 0xe5, 0x6e, 0xf5, 0x26, 0x6c, 0x50, 0x7d, 0x5d, 0xb6, 0x0e, 0xda, 0x87, 0x2b, 0xca, 0x1c,
	0x76, 0x44, 0x5b, 0xd0, 0x99, 0xf3, 0x4e, 0x76, 0x50, 0x5c, 0x25, 0xe4, 0x64, 0x39, 0x05, 0x8d,
	0xa1, 0x8d, 0xfb, 0x49, 0xf0, 0x71, 0xc0, 0xc6, 0x27, 0xcf, 0x01, 0xc2, 0xff, 0xab, 0xc4, 0xae,
	0x9f, 0x52, 0x39, 0xd4, 0xeb, 0x43, 0x92, 0xcb, 0x6b, 0x07, 0x7a, 0xca, 0x0d, 0x2a, 0x31, 0x32,
	0x0e, 0xfb, 0xd1, 0x8c, 0x70, 0xd5, 0xe6, 0xa0, 0x09, 0xb4, 0xd8, 0x00, 0x66, 0x89, 0x87, 0x38,
	0x4b, 0xfc, 0xdf, 0xd9, 0x85, 0xbe, 0x7a, 0x51, 0x49, 0x8c, 0xd4, 0x12, 0x95, 0x69, 0xa2, 0xcf,
	0x41, 0x8f, 0xa0, 0x49, 0x07, 0x0a, 0x12, 0x9e, 0x5b, 0x00, 0xe2, 0x1e, 0x63, 0x4a, 0x89, 0x77,
	0xfa, 0xe9, 0xb3, 0x74, 0xa2, 0xcc, 0x40, 0x7b, 0xd0, 0x62, 0xdd, 0x05, 0x0c, 0x47, 0xd0, 0x0e,
	0x30, 0xda, 0x9f, 0xc7, 0x21, 0xf7, 0x23, 0xbc, 0x8d, 0x5c, 0xe8, 0x63, 0xe2, 0x0b, 0x44, 0x74,
	0xe7, 0x35, 0x4d, 0xde, 0x3a, 0xa1, 0x52, 0xe5, 0xfb, 0x88, 0x3c, 0x08, 0xe2, 0x55, 0xca, 0x4c,
	0xa1, 0x2c, 0xd8, 0x7f, 0x69, 0xf3, 0xbb, 0x8d, 0xca, 0x45, 0xa5, 0xa8, 0x95, 0xc4, 0x9d, 0xaa,
	0xae, 0x93, 0x4b, 0x65, 0x2b, 0x52, 0x7d, 0xcf, 0xb8, 0xb5, 0xd2, 0x60, 0x3f, 0x54, 0x4e, 0x43,
	0xd3, 0x3b, 0xe3, 0xde, 0xba, 0x6b, 0x68, 0x1c, 0x0d, 0x67, 0x2b, 0x0a, 0x75, 0x56, 0xe5, 0x9c,
	0x1d, 0xe8, 0xc4, 0x7e, 0x30, 0x3b, 0x8d, 0xe2, 0x13, 0x1e, 0xd9, 0xd6, 0x15, 0x0a, 0x25, 0xcf,
	0x20, 0xa6, 0x61, 0x1a, 0x79, 0x41, 0x6e, 0x97, 0xd1, 0xc8, 0xec, 0xc8, 0x77, 0xa0, 0x1d, 0x7c,
	0x12, 0x4c, 0x83, 0xd4, 0xe7, 0x91, 0x2f, 0x9f, 0x44, 0xcc, 0xc2, 0x14, 0x11, 0xa7, 0x80, 0x32,
	0x0a, 0x3e, 0x4b, 0x4d, 0x57, 0xd3, 0xc0, 0x28, 0xd2, 0x01, 0x6a, 0x48, 0xe8, 0x95, 0x84, 0x84,
	0xbe, 0x11, 0x12, 0xfe, 0x6a, 0xf3, 0x4b, 0x9c, 0xaa, 0x0a, 0x97, 0x11, 0x39, 0xbf, 0x3e, 0xfe,
	0xff, 0xfd, 0xe3, 0xd7, 0x6c, 0x7e, 0x50, 0xf4, 0x80, 0x5f, 0xa2, 0x19, 0xe8, 0xdf, 0x75, 0xb0,
	0xf1, 0xf8, 0xd7, 0x2a, 0xf3, 0xff, 0xe2, 0x31, 0xb6, 0xa1, 0x47, 0x15, 0x42, 0xd6, 0x47, 0xe0,
	0xef, 0x0f, 0xe3, 0x96, 0x4d, 0xa6, 0x90, 0x01, 0x74, 0x03, 0xe0, 0x48, 0x16, 0xbd, 0x98, 0x0a,
	0xd4, 0x87, 0xee, 0xb1, 0x4c, 0xe1, 0x23, 0x04, 0x3d, 0xda, 0x64, 0xd3, 0x1d, 0xb0, 0xe7, 0x58,
	0x42, 0x16, 0xda, 0xf0, 0xff, 0x9d, 0xbf, 0x5f, 0x03, 0x38, 0x8e, 0xa3, 0xc7, 0x7e, 0xfc, 0x22,
	0x38, 0xf1, 0x9d, 0x6d, 0xb0, 0x31, 0x89, 0xe3, 0xf0, 0xa5, 0x25, 0xbb, 0xd1, 0x9a, 0xd6, 0xc7,
	0x78, 0x7e, 0x4c, 0xae, 0xcc, 0xa2, 0x5c, 0x2b, 0x71, 0x46, 0x6c, 0x56, 0x4e, 0x11, 0xd7, 0xe8,
	0xaa, 0x5e, 0x9e, 0xc4, 0x79, 0xdc, 0x87, 0x9e, 0x5a, 0xdb, 0x25, 0x58, 0xe4, 0x14, 0x7c, 0x8d,
	0x78, 0x42, 0x54, 0x41, 0xe1, 0x3e, 0xf4, 0xd4, 0xba, 0x2e, 0x41, 0x9e, 0x53, 0xec, 0x55, 0x40,
	0xae, 0xd6, 0x70, 0x09, 0xf2, 0x9c, 0xc2, 0xae, 0x02, 0x72, 0xba, 0x55, 0x5a, 0x5d, 0xe5, 0x5c,
	0x93, 0xfb, 0xd7, 0xea, 0xad, 0x46, 0xeb, 0x5a, 0x45, 0x12, 0x27, 0xdf, 0x83, 0xae, 0x52, 0x85,
	0xe5, 0x5c, 0xd7, 0xb6, 0xae, 0x56, 0x4c, 0xe5, 0xad, 0xbd, 0x07, 0x5d, 0xa5, 0x2c, 0x4b, 0x10,
	0x67, 0x4b, 0xb5, 0x0a, 0x88, 0x95, 0xba, 0x2c, 0x41, 0x9c, 0xad, 0xd5, 0xca, 0x23, 0xfe, 0x00,
	0x5a, 0xac, 0x90, 0xca, 0xb9, 0xaa, 0x6e, 0x58, 0x14, 0xac, 0x08, 0x6d, 0xd1, 0xea, 0x7f, 0xee,
	0x02, 0xc8, 0x6a, 0x2b, 0x67, 0x68, 0x6c, 0x56, 0x12, 0xe7, 0xac, 0x78, 0x17, 0x40, 0x56, 0x57,
	0x09, 0xd2, 0x4c, 0xc1, 0x55, 0x01, 0xa9, 0xac, 0x9e, 0x12, 0xa4, 0x99, 0x82, 0xaa, 0x7c, 0x90,
	0x3a, 0xa2, 0x1e, 0x49, 0x3d, 0x5a, 0xad, 0x38, 0x47, 0xe8, 0xb5, 0x51, 0x35, 0xf3, 0x7d, 0xae,
	0x1a, 0xaf, 0x48, 0x2f, 0xec, 0x82, 0xd1, 0xeb, 0x76, 0xa1, 0xb3, 0x28, 0xb3, 0x0b, 0x83, 0x3c,
	0xa7, 0xba, 0xa9, 0xd4, 0x2e, 0x0c, 0xf2, 0x9c, 0xea, 0xa4, 0x3c, 0xf2, 0x43, 0xa5, 0x16, 0x88,
	0xbf, 0x5a, 0x5d, 0xd3, 0x7c, 0x83, 0x2c, 0x6f, 0x18, 0x5d, 0xcf, 0x3e, 0x73, 0x70, 0x3e, 0xfb,
	0x4a, 0x35, 0x84, 0xc9, 0xc7, 0x2c, 0x93, 0x18, 0xf1, 0x27, 0x1b, 0xf3, 0x4d, 0xe4, 0x43, 0xe8,
	0xd0, 0x5d, 0x3f, 0x74, 0x53, 0x03, 0x07, 0xad, 0x3e, 0xa0, 0x02, 0x83, 0xc8, 0xcb, 0x61, 0x10,
	0x2d, 0x95, 0xe0, 0x23, 0xae, 0xbe, 0xe4, 0xbe, 0x96, 0xe1, 0x20, 0xdf, 0xe7, 0x0b, 0x39, 0x8c,
	0x39, 0x07, 0x52, 0x6f, 0xf4, 0x8d, 0xac, 0x0c, 0xe2, 0x41, 0x7d, 0x39, 0x0b, 0x52, 0x81, 0x94,
	0x61, 0xa1, 0x3c, 0x87, 0x17, 0xb2, 0x78, 0x00, 0x7d, 0xe6, 0x57, 0x59, 0xae, 0xe6, 0x35, 0x93,
	0x8b, 0xfe, 0x9e, 0xbd, 0x9c, 0x11, 0xaf, 0x2c, 0xca, 0x30, 0xd2, 0x1f, 0xa4, 0x0b, 0x19, 0x7d,
	0xc6, 0x6b, 0x53, 0xb5, 0xaa, 0xa1, 0x37, 0xb3, 0xdc, 0x32, 0xaf, 0xca, 0x85, 0x2c, 0x7f, 0x04,
	0x2b, 0x94, 0x4e, 0xd6, 0xff, 0x6c, 0x9a, 0xfc, 0xcc, 0x47, 0xe1, 0x42, 0x66, 0x77, 0xa0, 0xcd,
	0x5f, 0xdd, 0x9c, 0x0d, 0xc5, 0x57, 0x2a, 0xcf, 0x70, 0xd2, 0x59, 0xaa, 0x39, 0xf7, 0x7b, 0xd0,
	0x65, 0x91, 0xe5, 0xfc, 0xb4, 0xd2, 0xd1, 0x06, 0x2f, 0x7d, 0xd3, 0xd1, 0xca, 0x87, 0x90, 0x72,
	0x47, 0xab, 0x92, 0x66, 0x1e, 0xa7, 0xca, 0x1d, 0xad, 0x4a, 0x9a, 0x79, 0xbe, 0xc9, 0x23, 0xfd,
	0x10, 0xfa, 0xda, 0x4b, 0x8d, 0xd0, 0xce, 0xbc, 0xf7, 0x9b, 0x3c, 0x06, 0x3b, 0xd0, 0xa4, 0xb9,
	0x7b, 0x67, 0x5d, 0x01, 0x4a, 0x24, 0x36, 0x47, 0x8e, 0x92, 0x93, 0x93, 0x47, 0xd3, 0x11, 0x79,
	0x7a, 0xc3, 0xa9, 0x28, 0x94, 0x39, 0x8b, 0xdd, 0xe1, 0xee, 0x40, 0x25, 0x34, 0xd3, 0xd4, 0x05,
	0x84, 0x22, 0xe5, 0x2a, 0x08, 0xcd, 0x24, 0x6c, 0x1e, 0xe1, 0x01, 0x89, 0x25, 0x32, 0x89, 0xa8,
	0x7c, 0x66, 0x99, 0xd9, 0xb0, 0xd1, 0x30, 0x93, 0xd5, 0x92, 0xce, 0x74, 0xc5, 0xc8, 0x00, 0x3a,
	0xdf, 0xd4, 0xb6, 0x9d, 0xe1, 0x95, 0x23, 0xca, 0x3e, 0xb7, 0x8e, 0x2c, 0x93, 0xfc, 0x34, 0x60,
	0x01, 0x13, 0x23, 0x97, 0x27, 0x98, 0xe4, 0xe7, 0xf8, 0x8a, 0xbf, 0x42, 0xc8, 0x95, 0xe9, 0xaa,
	0x8e, 0x47, 0xe6, 0x9b, 0x55, 0xfd, 0xca, 0x16, 0xc6, 0x41, 0x28, 0x87, 0x19, 0x00, 0xaa, 0x18,
	0x87, 0x46, 0x9a, 0xb9, 0xf4, 0x97, 0x1a, 0x87, 0x46, 0x9a, 0xb9, 0x15, 0xe6, 0x90, 0x7e, 0x0c,
	0x5f, 0xb4, 0xb7, 0xb6, 0xf7, 0x48, 0xf7, 0xb3, 0x26, 0xf9, 0xd9, 0xfd, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x8f, 0x75, 0xb9, 0x2c, 0x40, 0x31, 0x00, 0x00,
}
