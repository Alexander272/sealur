// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/file.proto

/*
Package proto_file is a generated protocol buffer package.

It is generated from these files:
	proto/file.proto

It has these top-level messages:
	MetaData
	File
	FileUploadRequest
	FileUploadResponse
	FileDownloadRequest
	FileDownloadResponse
	FileDeleteRequest
	FileDeleteResponse
	PingRequest
	PingResponse
*/
package proto_file

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetaData struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Uuid   string `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	Backet string `protobuf:"bytes,5,opt,name=backet" json:"backet,omitempty"`
}

func (m *MetaData) Reset()                    { *m = MetaData{} }
func (m *MetaData) String() string            { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()               {}
func (*MetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MetaData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetaData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MetaData) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MetaData) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MetaData) GetBacket() string {
	if m != nil {
		return m.Backet
	}
	return ""
}

type File struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type FileUploadRequest struct {
	// Types that are valid to be assigned to Request:
	//	*FileUploadRequest_Metadata
	//	*FileUploadRequest_File
	Request isFileUploadRequest_Request `protobuf_oneof:"request"`
}

func (m *FileUploadRequest) Reset()                    { *m = FileUploadRequest{} }
func (m *FileUploadRequest) String() string            { return proto.CompactTextString(m) }
func (*FileUploadRequest) ProtoMessage()               {}
func (*FileUploadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isFileUploadRequest_Request interface{ isFileUploadRequest_Request() }

type FileUploadRequest_Metadata struct {
	Metadata *MetaData `protobuf:"bytes,2,opt,name=metadata,oneof"`
}
type FileUploadRequest_File struct {
	File *File `protobuf:"bytes,1,opt,name=file,oneof"`
}

func (*FileUploadRequest_Metadata) isFileUploadRequest_Request() {}
func (*FileUploadRequest_File) isFileUploadRequest_Request()     {}

func (m *FileUploadRequest) GetRequest() isFileUploadRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *FileUploadRequest) GetMetadata() *MetaData {
	if x, ok := m.GetRequest().(*FileUploadRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *FileUploadRequest) GetFile() *File {
	if x, ok := m.GetRequest().(*FileUploadRequest_File); ok {
		return x.File
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FileUploadRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FileUploadRequest_OneofMarshaler, _FileUploadRequest_OneofUnmarshaler, _FileUploadRequest_OneofSizer, []interface{}{
		(*FileUploadRequest_Metadata)(nil),
		(*FileUploadRequest_File)(nil),
	}
}

func _FileUploadRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FileUploadRequest)
	// request
	switch x := m.Request.(type) {
	case *FileUploadRequest_Metadata:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Metadata); err != nil {
			return err
		}
	case *FileUploadRequest_File:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FileUploadRequest.Request has unexpected type %T", x)
	}
	return nil
}

func _FileUploadRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FileUploadRequest)
	switch tag {
	case 2: // request.metadata
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MetaData)
		err := b.DecodeMessage(msg)
		m.Request = &FileUploadRequest_Metadata{msg}
		return true, err
	case 1: // request.file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Request = &FileUploadRequest_File{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FileUploadRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FileUploadRequest)
	// request
	switch x := m.Request.(type) {
	case *FileUploadRequest_Metadata:
		s := proto.Size(x.Metadata)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FileUploadRequest_File:
		s := proto.Size(x.File)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FileUploadResponse struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *FileUploadResponse) Reset()                    { *m = FileUploadResponse{} }
func (m *FileUploadResponse) String() string            { return proto.CompactTextString(m) }
func (*FileUploadResponse) ProtoMessage()               {}
func (*FileUploadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FileUploadResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FileUploadResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FileDownloadRequest struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *FileDownloadRequest) Reset()                    { *m = FileDownloadRequest{} }
func (m *FileDownloadRequest) String() string            { return proto.CompactTextString(m) }
func (*FileDownloadRequest) ProtoMessage()               {}
func (*FileDownloadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FileDownloadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FileDownloadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type FileDownloadResponse struct {
	Metadata *MetaData `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	File     *File     `protobuf:"bytes,2,opt,name=file" json:"file,omitempty"`
}

func (m *FileDownloadResponse) Reset()                    { *m = FileDownloadResponse{} }
func (m *FileDownloadResponse) String() string            { return proto.CompactTextString(m) }
func (*FileDownloadResponse) ProtoMessage()               {}
func (*FileDownloadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FileDownloadResponse) GetMetadata() *MetaData {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FileDownloadResponse) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type FileDeleteRequest struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *FileDeleteRequest) Reset()                    { *m = FileDeleteRequest{} }
func (m *FileDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*FileDeleteRequest) ProtoMessage()               {}
func (*FileDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FileDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FileDeleteRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type FileDeleteResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *FileDeleteResponse) Reset()                    { *m = FileDeleteResponse{} }
func (m *FileDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*FileDeleteResponse) ProtoMessage()               {}
func (*FileDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FileDeleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type PingResponse struct {
	Ping string `protobuf:"bytes,1,opt,name=ping" json:"ping,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PingResponse) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

func init() {
	proto.RegisterType((*MetaData)(nil), "proto_file.MetaData")
	proto.RegisterType((*File)(nil), "proto_file.File")
	proto.RegisterType((*FileUploadRequest)(nil), "proto_file.FileUploadRequest")
	proto.RegisterType((*FileUploadResponse)(nil), "proto_file.FileUploadResponse")
	proto.RegisterType((*FileDownloadRequest)(nil), "proto_file.FileDownloadRequest")
	proto.RegisterType((*FileDownloadResponse)(nil), "proto_file.FileDownloadResponse")
	proto.RegisterType((*FileDeleteRequest)(nil), "proto_file.FileDeleteRequest")
	proto.RegisterType((*FileDeleteResponse)(nil), "proto_file.FileDeleteResponse")
	proto.RegisterType((*PingRequest)(nil), "proto_file.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "proto_file.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileService service

type FileServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// rpc Download (FileDownloadRequest) returns (stream FileDownloadResponse);
	Upload(ctx context.Context, opts ...grpc.CallOption) (FileService_UploadClient, error)
}

type fileServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileServiceClient(cc *grpc.ClientConn) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto_file.FileService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Upload(ctx context.Context, opts ...grpc.CallOption) (FileService_UploadClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FileService_serviceDesc.Streams[0], c.cc, "/proto_file.FileService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileServiceUploadClient{stream}
	return x, nil
}

type FileService_UploadClient interface {
	Send(*FileUploadRequest) error
	CloseAndRecv() (*FileUploadResponse, error)
	grpc.ClientStream
}

type fileServiceUploadClient struct {
	grpc.ClientStream
}

func (x *fileServiceUploadClient) Send(m *FileUploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileServiceUploadClient) CloseAndRecv() (*FileUploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(FileUploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for FileService service

type FileServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// rpc Download (FileDownloadRequest) returns (stream FileDownloadResponse);
	Upload(FileService_UploadServer) error
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_file.FileService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileServiceServer).Upload(&fileServiceUploadServer{stream})
}

type FileService_UploadServer interface {
	SendAndClose(*FileUploadResponse) error
	Recv() (*FileUploadRequest, error)
	grpc.ServerStream
}

type fileServiceUploadServer struct {
	grpc.ServerStream
}

func (x *fileServiceUploadServer) SendAndClose(m *FileUploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileServiceUploadServer) Recv() (*FileUploadRequest, error) {
	m := new(FileUploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_file.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _FileService_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _FileService_Upload_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/file.proto",
}

func init() { proto.RegisterFile("proto/file.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4b, 0xcf, 0xd2, 0x40,
	0x14, 0xfd, 0xda, 0xaf, 0xf2, 0xb8, 0x05, 0xc5, 0x91, 0xe8, 0x84, 0x44, 0x43, 0x26, 0xc6, 0xb0,
	0x2a, 0xa6, 0x2e, 0x94, 0xb8, 0x23, 0xc4, 0xe0, 0xc2, 0xc4, 0xd4, 0xb8, 0x71, 0x63, 0x06, 0x7a,
	0x25, 0x13, 0xcb, 0xb4, 0xb6, 0x83, 0x46, 0xfe, 0x86, 0x7f, 0xd8, 0xcc, 0xa3, 0xb4, 0x28, 0x2c,
	0xbe, 0x55, 0xcf, 0x7d, 0x9e, 0x7b, 0x4e, 0x07, 0x46, 0x45, 0x99, 0xab, 0x7c, 0xfe, 0x4d, 0x64,
	0x18, 0x19, 0x48, 0xc0, 0x7c, 0xbe, 0xea, 0x0c, 0x2b, 0xa1, 0xf7, 0x01, 0x15, 0x5f, 0x71, 0xc5,
	0x09, 0x81, 0x40, 0xf2, 0x3d, 0x52, 0x6f, 0xea, 0xcd, 0xfa, 0x89, 0xc1, 0x3a, 0xa7, 0x7e, 0x17,
	0x48, 0x7d, 0x9b, 0xd3, 0x58, 0xe7, 0x2a, 0x71, 0x44, 0x7a, 0x3b, 0xf5, 0x66, 0xb7, 0x89, 0xc1,
	0x3a, 0x77, 0x38, 0x88, 0x94, 0x06, 0xb6, 0x4f, 0x63, 0xf2, 0x18, 0x3a, 0x1b, 0xbe, 0xfd, 0x8e,
	0x8a, 0xde, 0x33, 0x59, 0x17, 0xb1, 0x29, 0x04, 0xef, 0x44, 0x86, 0x84, 0x42, 0x77, 0x9b, 0x4b,
	0x85, 0x52, 0x19, 0xca, 0x41, 0x52, 0x87, 0xec, 0x08, 0x0f, 0x75, 0xc7, 0xe7, 0x22, 0xcb, 0x79,
	0x9a, 0xe0, 0x8f, 0x03, 0x56, 0x8a, 0xc4, 0xd0, 0xdb, 0xa3, 0xe2, 0x29, 0x57, 0xdc, 0x9c, 0x13,
	0xc6, 0xe3, 0xa8, 0x51, 0x12, 0xd5, 0x32, 0xd6, 0x37, 0xc9, 0xa9, 0x8f, 0xbc, 0x80, 0x40, 0x17,
	0xcd, 0xfe, 0x30, 0x1e, 0xb5, 0xfb, 0x35, 0xc1, 0xfa, 0x26, 0x31, 0xf5, 0x65, 0x1f, 0xba, 0xa5,
	0xa5, 0x61, 0x6f, 0x80, 0xb4, 0xb9, 0xab, 0x22, 0x97, 0x15, 0x92, 0xfb, 0xe0, 0x8b, 0xd4, 0x39,
	0xe3, 0x8b, 0xf4, 0xe4, 0x95, 0xdf, 0x78, 0xc5, 0x16, 0xf0, 0x48, 0x4f, 0xae, 0xf2, 0x5f, 0xb2,
	0x7d, 0xf7, 0x85, 0x51, 0x63, 0x95, 0xdf, 0x58, 0xc5, 0x24, 0x8c, 0xcf, 0x47, 0x1d, 0xed, 0xcb,
	0x96, 0x66, 0xef, 0xba, 0xe6, 0x96, 0xe2, 0xe7, 0x4e, 0xb1, 0x7f, 0x59, 0xb1, 0xd5, 0xcb, 0x5e,
	0x5b, 0x83, 0x57, 0x98, 0xa1, 0xc2, 0xbb, 0x1c, 0x1a, 0x59, 0x77, 0xea, 0x41, 0x77, 0x26, 0x85,
	0xee, 0x1e, 0xab, 0x8a, 0xef, 0xea, 0xc7, 0x53, 0x87, 0x6c, 0x08, 0xe1, 0x47, 0x21, 0x77, 0x8e,
	0x82, 0x31, 0x18, 0xd8, 0xd0, 0x0d, 0x12, 0x08, 0x0a, 0x21, 0x77, 0xf5, 0x93, 0xd3, 0x38, 0xfe,
	0xe3, 0x41, 0xa8, 0x39, 0x3e, 0x61, 0xf9, 0x53, 0x6c, 0x91, 0x2c, 0x20, 0xd0, 0x33, 0xe4, 0x49,
	0x5b, 0x4b, 0x6b, 0xe9, 0x84, 0xfe, 0x5f, 0x70, 0xeb, 0xdf, 0x43, 0xc7, 0xfe, 0x47, 0xf2, 0xf4,
	0x5f, 0x23, 0xce, 0xde, 0xd6, 0xe4, 0xd9, 0xb5, 0xb2, 0x5d, 0x34, 0xf3, 0x96, 0x0f, 0xbe, 0x0c,
	0xa3, 0xf9, 0xdb, 0xa6, 0x6b, 0xd3, 0x31, 0xf8, 0xd5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbd,
	0xc6, 0x6c, 0x59, 0x60, 0x03, 0x00, 0x00,
}
