// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pro.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/pro.proto

It has these top-level messages:
	GetAllFlangeRequest
	CreateFlangeRequest
	UpdateFlangeRequest
	DeleteFlangeRequest
	Flange
	FlangeResponse
	GetStandsRequest
	CreateStandRequest
	UpdateStandRequest
	DeleteStandRequest
	Stand
	StandResponse
	GetStFlRequest
	CreateStFlRequest
	UpdateStFlRequest
	DeleteStFlRequest
	StFl
	StFlResponse
	GetTypeFlRequest
	CreateTypeFlRequest
	UpdateTypeFlRequest
	DeleteTypeFlRequest
	TypeFl
	TypeFlResponse
	GetAllAddRequest
	CreateAddRequest
	UpdateAddMatRequest
	UpdateAddModRequest
	UpdateAddTemRequest
	UpdateAddMounRequest
	UpdateAddGrapRequest
	UpdateAddFillersRequest
	Additional
	AdditionalResponse
	SuccessResponse
	GetSizesRequest
	CreateSizeRequest
	UpdateSizeRequest
	DeleteSizeRequest
	Size
	SizeResponse
	GetSNPRequest
	CreateSNPRequest
	UpdateSNPRequest
	DeleteSNPRequest
	SNP
	SNPResponse
	IdResponse
	PingRequest
	PingResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Flange Service ----------------------------------------------------------------
type GetAllFlangeRequest struct {
}

func (m *GetAllFlangeRequest) Reset()                    { *m = GetAllFlangeRequest{} }
func (m *GetAllFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllFlangeRequest) ProtoMessage()               {}
func (*GetAllFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateFlangeRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
}

func (m *CreateFlangeRequest) Reset()                    { *m = CreateFlangeRequest{} }
func (m *CreateFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateFlangeRequest) ProtoMessage()               {}
func (*CreateFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateFlangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateFlangeRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type UpdateFlangeRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
}

func (m *UpdateFlangeRequest) Reset()                    { *m = UpdateFlangeRequest{} }
func (m *UpdateFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFlangeRequest) ProtoMessage()               {}
func (*UpdateFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateFlangeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateFlangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateFlangeRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type DeleteFlangeRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteFlangeRequest) Reset()                    { *m = DeleteFlangeRequest{} }
func (m *DeleteFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFlangeRequest) ProtoMessage()               {}
func (*DeleteFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteFlangeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Flange struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
}

func (m *Flange) Reset()                    { *m = Flange{} }
func (m *Flange) String() string            { return proto1.CompactTextString(m) }
func (*Flange) ProtoMessage()               {}
func (*Flange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Flange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Flange) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Flange) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type FlangeResponse struct {
	Flanges []*Flange `protobuf:"bytes,1,rep,name=flanges" json:"flanges,omitempty"`
}

func (m *FlangeResponse) Reset()                    { *m = FlangeResponse{} }
func (m *FlangeResponse) String() string            { return proto1.CompactTextString(m) }
func (*FlangeResponse) ProtoMessage()               {}
func (*FlangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FlangeResponse) GetFlanges() []*Flange {
	if m != nil {
		return m.Flanges
	}
	return nil
}

// Stand Service ----------------------------------------------------------------
type GetStandsRequest struct {
}

func (m *GetStandsRequest) Reset()                    { *m = GetStandsRequest{} }
func (m *GetStandsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStandsRequest) ProtoMessage()               {}
func (*GetStandsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CreateStandRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *CreateStandRequest) Reset()                    { *m = CreateStandRequest{} }
func (m *CreateStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateStandRequest) ProtoMessage()               {}
func (*CreateStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateStandRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UpdateStandRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *UpdateStandRequest) Reset()                    { *m = UpdateStandRequest{} }
func (m *UpdateStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateStandRequest) ProtoMessage()               {}
func (*UpdateStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateStandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStandRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type DeleteStandRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteStandRequest) Reset()                    { *m = DeleteStandRequest{} }
func (m *DeleteStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteStandRequest) ProtoMessage()               {}
func (*DeleteStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteStandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Stand struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *Stand) Reset()                    { *m = Stand{} }
func (m *Stand) String() string            { return proto1.CompactTextString(m) }
func (*Stand) ProtoMessage()               {}
func (*Stand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Stand) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Stand) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type StandResponse struct {
	Stands []*Stand `protobuf:"bytes,1,rep,name=stands" json:"stands,omitempty"`
}

func (m *StandResponse) Reset()                    { *m = StandResponse{} }
func (m *StandResponse) String() string            { return proto1.CompactTextString(m) }
func (*StandResponse) ProtoMessage()               {}
func (*StandResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StandResponse) GetStands() []*Stand {
	if m != nil {
		return m.Stands
	}
	return nil
}

// St_Fl Service ----------------------------------------------------------------
type GetStFlRequest struct {
}

func (m *GetStFlRequest) Reset()                    { *m = GetStFlRequest{} }
func (m *GetStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStFlRequest) ProtoMessage()               {}
func (*GetStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type CreateStFlRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *CreateStFlRequest) Reset()                    { *m = CreateStFlRequest{} }
func (m *CreateStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateStFlRequest) ProtoMessage()               {}
func (*CreateStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateStFlRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateStFlRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type UpdateStFlRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdateStFlRequest) Reset()                    { *m = UpdateStFlRequest{} }
func (m *UpdateStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateStFlRequest) ProtoMessage()               {}
func (*UpdateStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UpdateStFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStFlRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateStFlRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeleteStFlRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteStFlRequest) Reset()                    { *m = DeleteStFlRequest{} }
func (m *DeleteStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteStFlRequest) ProtoMessage()               {}
func (*DeleteStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *DeleteStFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StFl struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	Stand    string `protobuf:"bytes,3,opt,name=stand" json:"stand,omitempty"`
	FlangeId string `protobuf:"bytes,4,opt,name=flangeId" json:"flangeId,omitempty"`
	Flange   string `protobuf:"bytes,5,opt,name=flange" json:"flange,omitempty"`
	Short    string `protobuf:"bytes,6,opt,name=short" json:"short,omitempty"`
}

func (m *StFl) Reset()                    { *m = StFl{} }
func (m *StFl) String() string            { return proto1.CompactTextString(m) }
func (*StFl) ProtoMessage()               {}
func (*StFl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *StFl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StFl) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *StFl) GetStand() string {
	if m != nil {
		return m.Stand
	}
	return ""
}

func (m *StFl) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *StFl) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *StFl) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type StFlResponse struct {
	Stfl []*StFl `protobuf:"bytes,1,rep,name=stfl" json:"stfl,omitempty"`
}

func (m *StFlResponse) Reset()                    { *m = StFlResponse{} }
func (m *StFlResponse) String() string            { return proto1.CompactTextString(m) }
func (*StFlResponse) ProtoMessage()               {}
func (*StFlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *StFlResponse) GetStfl() []*StFl {
	if m != nil {
		return m.Stfl
	}
	return nil
}

// Type Flange Service ----------------------------------------------------------------
type GetTypeFlRequest struct {
}

func (m *GetTypeFlRequest) Reset()                    { *m = GetTypeFlRequest{} }
func (m *GetTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetTypeFlRequest) ProtoMessage()               {}
func (*GetTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type CreateTypeFlRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,2,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
	Basis bool   `protobuf:"varint,4,opt,name=basis" json:"basis,omitempty"`
}

func (m *CreateTypeFlRequest) Reset()                    { *m = CreateTypeFlRequest{} }
func (m *CreateTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateTypeFlRequest) ProtoMessage()               {}
func (*CreateTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CreateTypeFlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateTypeFlRequest) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *CreateTypeFlRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *CreateTypeFlRequest) GetBasis() bool {
	if m != nil {
		return m.Basis
	}
	return false
}

type UpdateTypeFlRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,4,opt,name=short" json:"short,omitempty"`
	Basis bool   `protobuf:"varint,5,opt,name=basis" json:"basis,omitempty"`
}

func (m *UpdateTypeFlRequest) Reset()                    { *m = UpdateTypeFlRequest{} }
func (m *UpdateTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateTypeFlRequest) ProtoMessage()               {}
func (*UpdateTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UpdateTypeFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetBasis() bool {
	if m != nil {
		return m.Basis
	}
	return false
}

type DeleteTypeFlRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteTypeFlRequest) Reset()                    { *m = DeleteTypeFlRequest{} }
func (m *DeleteTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteTypeFlRequest) ProtoMessage()               {}
func (*DeleteTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteTypeFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TypeFl struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,4,opt,name=short" json:"short,omitempty"`
}

func (m *TypeFl) Reset()                    { *m = TypeFl{} }
func (m *TypeFl) String() string            { return proto1.CompactTextString(m) }
func (*TypeFl) ProtoMessage()               {}
func (*TypeFl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TypeFl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TypeFl) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TypeFl) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *TypeFl) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type TypeFlResponse struct {
	TypeFl []*TypeFl `protobuf:"bytes,1,rep,name=typeFl" json:"typeFl,omitempty"`
}

func (m *TypeFlResponse) Reset()                    { *m = TypeFlResponse{} }
func (m *TypeFlResponse) String() string            { return proto1.CompactTextString(m) }
func (*TypeFlResponse) ProtoMessage()               {}
func (*TypeFlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *TypeFlResponse) GetTypeFl() []*TypeFl {
	if m != nil {
		return m.TypeFl
	}
	return nil
}

// Additional Service ----------------------------------------------------------------
type GetAllAddRequest struct {
}

func (m *GetAllAddRequest) Reset()                    { *m = GetAllAddRequest{} }
func (m *GetAllAddRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllAddRequest) ProtoMessage()               {}
func (*GetAllAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type CreateAddRequest struct {
	Materials   string `protobuf:"bytes,1,opt,name=materials" json:"materials,omitempty"`
	Mod         string `protobuf:"bytes,2,opt,name=mod" json:"mod,omitempty"`
	Temperature string `protobuf:"bytes,3,opt,name=temperature" json:"temperature,omitempty"`
	Mounting    string `protobuf:"bytes,4,opt,name=mounting" json:"mounting,omitempty"`
	Graphite    string `protobuf:"bytes,5,opt,name=graphite" json:"graphite,omitempty"`
	Fillers     string `protobuf:"bytes,6,opt,name=fillers" json:"fillers,omitempty"`
}

func (m *CreateAddRequest) Reset()                    { *m = CreateAddRequest{} }
func (m *CreateAddRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateAddRequest) ProtoMessage()               {}
func (*CreateAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreateAddRequest) GetMaterials() string {
	if m != nil {
		return m.Materials
	}
	return ""
}

func (m *CreateAddRequest) GetMod() string {
	if m != nil {
		return m.Mod
	}
	return ""
}

func (m *CreateAddRequest) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *CreateAddRequest) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *CreateAddRequest) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

func (m *CreateAddRequest) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

type UpdateAddMatRequest struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Materials string `protobuf:"bytes,2,opt,name=materials" json:"materials,omitempty"`
}

func (m *UpdateAddMatRequest) Reset()                    { *m = UpdateAddMatRequest{} }
func (m *UpdateAddMatRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddMatRequest) ProtoMessage()               {}
func (*UpdateAddMatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *UpdateAddMatRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddMatRequest) GetMaterials() string {
	if m != nil {
		return m.Materials
	}
	return ""
}

type UpdateAddModRequest struct {
	Id  string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mod string `protobuf:"bytes,2,opt,name=mod" json:"mod,omitempty"`
}

func (m *UpdateAddModRequest) Reset()                    { *m = UpdateAddModRequest{} }
func (m *UpdateAddModRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddModRequest) ProtoMessage()               {}
func (*UpdateAddModRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *UpdateAddModRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddModRequest) GetMod() string {
	if m != nil {
		return m.Mod
	}
	return ""
}

type UpdateAddTemRequest struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Temperature string `protobuf:"bytes,2,opt,name=temperature" json:"temperature,omitempty"`
}

func (m *UpdateAddTemRequest) Reset()                    { *m = UpdateAddTemRequest{} }
func (m *UpdateAddTemRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddTemRequest) ProtoMessage()               {}
func (*UpdateAddTemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateAddTemRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddTemRequest) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

type UpdateAddMounRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mounting string `protobuf:"bytes,2,opt,name=mounting" json:"mounting,omitempty"`
}

func (m *UpdateAddMounRequest) Reset()                    { *m = UpdateAddMounRequest{} }
func (m *UpdateAddMounRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddMounRequest) ProtoMessage()               {}
func (*UpdateAddMounRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateAddMounRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddMounRequest) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

type UpdateAddGrapRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Graphite string `protobuf:"bytes,2,opt,name=graphite" json:"graphite,omitempty"`
}

func (m *UpdateAddGrapRequest) Reset()                    { *m = UpdateAddGrapRequest{} }
func (m *UpdateAddGrapRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddGrapRequest) ProtoMessage()               {}
func (*UpdateAddGrapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *UpdateAddGrapRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddGrapRequest) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

type UpdateAddFillersRequest struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fillers string `protobuf:"bytes,2,opt,name=fillers" json:"fillers,omitempty"`
}

func (m *UpdateAddFillersRequest) Reset()                    { *m = UpdateAddFillersRequest{} }
func (m *UpdateAddFillersRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddFillersRequest) ProtoMessage()               {}
func (*UpdateAddFillersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *UpdateAddFillersRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddFillersRequest) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

type Additional struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Materials   string `protobuf:"bytes,2,opt,name=materials" json:"materials,omitempty"`
	Mod         string `protobuf:"bytes,3,opt,name=mod" json:"mod,omitempty"`
	Temperature string `protobuf:"bytes,4,opt,name=temperature" json:"temperature,omitempty"`
	Mounting    string `protobuf:"bytes,5,opt,name=mounting" json:"mounting,omitempty"`
	Graphite    string `protobuf:"bytes,6,opt,name=graphite" json:"graphite,omitempty"`
	Fillers     string `protobuf:"bytes,7,opt,name=fillers" json:"fillers,omitempty"`
}

func (m *Additional) Reset()                    { *m = Additional{} }
func (m *Additional) String() string            { return proto1.CompactTextString(m) }
func (*Additional) ProtoMessage()               {}
func (*Additional) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Additional) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Additional) GetMaterials() string {
	if m != nil {
		return m.Materials
	}
	return ""
}

func (m *Additional) GetMod() string {
	if m != nil {
		return m.Mod
	}
	return ""
}

func (m *Additional) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *Additional) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *Additional) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

func (m *Additional) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

type AdditionalResponse struct {
	Additionals []*Additional `protobuf:"bytes,1,rep,name=additionals" json:"additionals,omitempty"`
}

func (m *AdditionalResponse) Reset()                    { *m = AdditionalResponse{} }
func (m *AdditionalResponse) String() string            { return proto1.CompactTextString(m) }
func (*AdditionalResponse) ProtoMessage()               {}
func (*AdditionalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AdditionalResponse) GetAdditionals() []*Additional {
	if m != nil {
		return m.Additionals
	}
	return nil
}

type SuccessResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SuccessResponse) Reset()                    { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string            { return proto1.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()               {}
func (*SuccessResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Size Service ----------------------------------------------------------------
type GetSizesRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,4,opt,name=standId" json:"standId,omitempty"`
}

func (m *GetSizesRequest) Reset()                    { *m = GetSizesRequest{} }
func (m *GetSizesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSizesRequest) ProtoMessage()               {}
func (*GetSizesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GetSizesRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *GetSizesRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *GetSizesRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *GetSizesRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

type CreateSizeRequest struct {
	Flange   string  `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string  `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	Dn       string  `protobuf:"bytes,3,opt,name=dn" json:"dn,omitempty"`
	Pn       string  `protobuf:"bytes,4,opt,name=pn" json:"pn,omitempty"`
	TypePr   string  `protobuf:"bytes,5,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string  `protobuf:"bytes,6,opt,name=standId" json:"standId,omitempty"`
	D4       float32 `protobuf:"fixed32,7,opt,name=d4" json:"d4,omitempty"`
	D3       float32 `protobuf:"fixed32,8,opt,name=d3" json:"d3,omitempty"`
	D2       float32 `protobuf:"fixed32,9,opt,name=d2" json:"d2,omitempty"`
	D1       float32 `protobuf:"fixed32,10,opt,name=d1" json:"d1,omitempty"`
	H        string  `protobuf:"bytes,11,opt,name=h" json:"h,omitempty"`
	S2       string  `protobuf:"bytes,12,opt,name=s2" json:"s2,omitempty"`
	S3       string  `protobuf:"bytes,13,opt,name=s3" json:"s3,omitempty"`
	Adn      string  `protobuf:"bytes,14,opt,name=adn" json:"adn,omitempty"`
}

func (m *CreateSizeRequest) Reset()                    { *m = CreateSizeRequest{} }
func (m *CreateSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSizeRequest) ProtoMessage()               {}
func (*CreateSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CreateSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *CreateSizeRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreateSizeRequest) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *CreateSizeRequest) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *CreateSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreateSizeRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateSizeRequest) GetD4() float32 {
	if m != nil {
		return m.D4
	}
	return 0
}

func (m *CreateSizeRequest) GetD3() float32 {
	if m != nil {
		return m.D3
	}
	return 0
}

func (m *CreateSizeRequest) GetD2() float32 {
	if m != nil {
		return m.D2
	}
	return 0
}

func (m *CreateSizeRequest) GetD1() float32 {
	if m != nil {
		return m.D1
	}
	return 0
}

func (m *CreateSizeRequest) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *CreateSizeRequest) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *CreateSizeRequest) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *CreateSizeRequest) GetAdn() string {
	if m != nil {
		return m.Adn
	}
	return ""
}

type UpdateSizeRequest struct {
	Flange   string  `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string  `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	Id       string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Dn       string  `protobuf:"bytes,4,opt,name=dn" json:"dn,omitempty"`
	Pn       string  `protobuf:"bytes,5,opt,name=pn" json:"pn,omitempty"`
	TypePr   string  `protobuf:"bytes,6,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string  `protobuf:"bytes,7,opt,name=standId" json:"standId,omitempty"`
	D4       float32 `protobuf:"fixed32,8,opt,name=d4" json:"d4,omitempty"`
	D3       float32 `protobuf:"fixed32,9,opt,name=d3" json:"d3,omitempty"`
	D2       float32 `protobuf:"fixed32,10,opt,name=d2" json:"d2,omitempty"`
	D1       float32 `protobuf:"fixed32,11,opt,name=d1" json:"d1,omitempty"`
	H        string  `protobuf:"bytes,12,opt,name=h" json:"h,omitempty"`
	S2       string  `protobuf:"bytes,13,opt,name=s2" json:"s2,omitempty"`
	S3       string  `protobuf:"bytes,14,opt,name=s3" json:"s3,omitempty"`
	Adn      string  `protobuf:"bytes,15,opt,name=adn" json:"adn,omitempty"`
}

func (m *UpdateSizeRequest) Reset()                    { *m = UpdateSizeRequest{} }
func (m *UpdateSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSizeRequest) ProtoMessage()               {}
func (*UpdateSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *UpdateSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *UpdateSizeRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdateSizeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSizeRequest) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *UpdateSizeRequest) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *UpdateSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdateSizeRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateSizeRequest) GetD4() float32 {
	if m != nil {
		return m.D4
	}
	return 0
}

func (m *UpdateSizeRequest) GetD3() float32 {
	if m != nil {
		return m.D3
	}
	return 0
}

func (m *UpdateSizeRequest) GetD2() float32 {
	if m != nil {
		return m.D2
	}
	return 0
}

func (m *UpdateSizeRequest) GetD1() float32 {
	if m != nil {
		return m.D1
	}
	return 0
}

func (m *UpdateSizeRequest) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *UpdateSizeRequest) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *UpdateSizeRequest) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *UpdateSizeRequest) GetAdn() string {
	if m != nil {
		return m.Adn
	}
	return ""
}

type DeleteSizeRequest struct {
	Flange string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSizeRequest) Reset()                    { *m = DeleteSizeRequest{} }
func (m *DeleteSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSizeRequest) ProtoMessage()               {}
func (*DeleteSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *DeleteSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *DeleteSizeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Size struct {
	Id     string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Dn     string  `protobuf:"bytes,2,opt,name=dn" json:"dn,omitempty"`
	Pn     string  `protobuf:"bytes,3,opt,name=pn" json:"pn,omitempty"`
	D4     float32 `protobuf:"fixed32,4,opt,name=d4" json:"d4,omitempty"`
	D3     float32 `protobuf:"fixed32,5,opt,name=d3" json:"d3,omitempty"`
	D2     float32 `protobuf:"fixed32,6,opt,name=d2" json:"d2,omitempty"`
	D1     float32 `protobuf:"fixed32,7,opt,name=d1" json:"d1,omitempty"`
	H      string  `protobuf:"bytes,8,opt,name=h" json:"h,omitempty"`
	S2     string  `protobuf:"bytes,9,opt,name=s2" json:"s2,omitempty"`
	S3     string  `protobuf:"bytes,10,opt,name=s3" json:"s3,omitempty"`
	TypePr string  `protobuf:"bytes,11,opt,name=typePr" json:"typePr,omitempty"`
}

func (m *Size) Reset()                    { *m = Size{} }
func (m *Size) String() string            { return proto1.CompactTextString(m) }
func (*Size) ProtoMessage()               {}
func (*Size) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *Size) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Size) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *Size) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *Size) GetD4() float32 {
	if m != nil {
		return m.D4
	}
	return 0
}

func (m *Size) GetD3() float32 {
	if m != nil {
		return m.D3
	}
	return 0
}

func (m *Size) GetD2() float32 {
	if m != nil {
		return m.D2
	}
	return 0
}

func (m *Size) GetD1() float32 {
	if m != nil {
		return m.D1
	}
	return 0
}

func (m *Size) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *Size) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *Size) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *Size) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

type SizeResponse struct {
	Sizes []*Size `protobuf:"bytes,1,rep,name=sizes" json:"sizes,omitempty"`
}

func (m *SizeResponse) Reset()                    { *m = SizeResponse{} }
func (m *SizeResponse) String() string            { return proto1.CompactTextString(m) }
func (*SizeResponse) ProtoMessage()               {}
func (*SizeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *SizeResponse) GetSizes() []*Size {
	if m != nil {
		return m.Sizes
	}
	return nil
}

// SNP Service ----------------------------------------------------------------
type GetSNPRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetSNPRequest) Reset()                    { *m = GetSNPRequest{} }
func (m *GetSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSNPRequest) ProtoMessage()               {}
func (*GetSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *GetSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *GetSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreateSNPRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId string `protobuf:"bytes,3,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string `protobuf:"bytes,4,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  string `protobuf:"bytes,5,opt,name=fillers" json:"fillers,omitempty"`
	Frame    string `protobuf:"bytes,6,opt,name=frame" json:"frame,omitempty"`
	Ir       string `protobuf:"bytes,7,opt,name=ir" json:"ir,omitempty"`
	Or       string `protobuf:"bytes,8,opt,name=or" json:"or,omitempty"`
	Mounting string `protobuf:"bytes,9,opt,name=mounting" json:"mounting,omitempty"`
	Graphite string `protobuf:"bytes,10,opt,name=graphite" json:"graphite,omitempty"`
}

func (m *CreateSNPRequest) Reset()                    { *m = CreateSNPRequest{} }
func (m *CreateSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSNPRequest) ProtoMessage()               {}
func (*CreateSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CreateSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreateSNPRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreateSNPRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreateSNPRequest) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

func (m *CreateSNPRequest) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *CreateSNPRequest) GetIr() string {
	if m != nil {
		return m.Ir
	}
	return ""
}

func (m *CreateSNPRequest) GetOr() string {
	if m != nil {
		return m.Or
	}
	return ""
}

func (m *CreateSNPRequest) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *CreateSNPRequest) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

type UpdateSNPRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId string `protobuf:"bytes,4,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string `protobuf:"bytes,5,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  string `protobuf:"bytes,6,opt,name=fillers" json:"fillers,omitempty"`
	Frame    string `protobuf:"bytes,7,opt,name=frame" json:"frame,omitempty"`
	Ir       string `protobuf:"bytes,8,opt,name=ir" json:"ir,omitempty"`
	Or       string `protobuf:"bytes,9,opt,name=or" json:"or,omitempty"`
	Mounting string `protobuf:"bytes,10,opt,name=mounting" json:"mounting,omitempty"`
	Graphite string `protobuf:"bytes,11,opt,name=graphite" json:"graphite,omitempty"`
}

func (m *UpdateSNPRequest) Reset()                    { *m = UpdateSNPRequest{} }
func (m *UpdateSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSNPRequest) ProtoMessage()               {}
func (*UpdateSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *UpdateSNPRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *UpdateSNPRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdateSNPRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdateSNPRequest) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

func (m *UpdateSNPRequest) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *UpdateSNPRequest) GetIr() string {
	if m != nil {
		return m.Ir
	}
	return ""
}

func (m *UpdateSNPRequest) GetOr() string {
	if m != nil {
		return m.Or
	}
	return ""
}

func (m *UpdateSNPRequest) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *UpdateSNPRequest) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

type DeleteSNPRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSNPRequest) Reset()                    { *m = DeleteSNPRequest{} }
func (m *DeleteSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSNPRequest) ProtoMessage()               {}
func (*DeleteSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *DeleteSNPRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SNP struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  string `protobuf:"bytes,4,opt,name=fillers" json:"fillers,omitempty"`
	Frame    string `protobuf:"bytes,5,opt,name=frame" json:"frame,omitempty"`
	Ir       string `protobuf:"bytes,6,opt,name=ir" json:"ir,omitempty"`
	Or       string `protobuf:"bytes,7,opt,name=or" json:"or,omitempty"`
	Mounting string `protobuf:"bytes,8,opt,name=mounting" json:"mounting,omitempty"`
	Graphite string `protobuf:"bytes,9,opt,name=graphite" json:"graphite,omitempty"`
}

func (m *SNP) Reset()                    { *m = SNP{} }
func (m *SNP) String() string            { return proto1.CompactTextString(m) }
func (*SNP) ProtoMessage()               {}
func (*SNP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *SNP) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SNP) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *SNP) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *SNP) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

func (m *SNP) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *SNP) GetIr() string {
	if m != nil {
		return m.Ir
	}
	return ""
}

func (m *SNP) GetOr() string {
	if m != nil {
		return m.Or
	}
	return ""
}

func (m *SNP) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *SNP) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

type SNPResponse struct {
	Snp []*SNP `protobuf:"bytes,1,rep,name=snp" json:"snp,omitempty"`
}

func (m *SNPResponse) Reset()                    { *m = SNPResponse{} }
func (m *SNPResponse) String() string            { return proto1.CompactTextString(m) }
func (*SNPResponse) ProtoMessage()               {}
func (*SNPResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *SNPResponse) GetSnp() []*SNP {
	if m != nil {
		return m.Snp
	}
	return nil
}

// commmon ----------------------------------------------------------------
type IdResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *IdResponse) Reset()                    { *m = IdResponse{} }
func (m *IdResponse) String() string            { return proto1.CompactTextString(m) }
func (*IdResponse) ProtoMessage()               {}
func (*IdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *IdResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

type PingResponse struct {
	Ping string `protobuf:"bytes,1,opt,name=ping" json:"ping,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *PingResponse) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

func init() {
	proto1.RegisterType((*GetAllFlangeRequest)(nil), "proto.GetAllFlangeRequest")
	proto1.RegisterType((*CreateFlangeRequest)(nil), "proto.CreateFlangeRequest")
	proto1.RegisterType((*UpdateFlangeRequest)(nil), "proto.UpdateFlangeRequest")
	proto1.RegisterType((*DeleteFlangeRequest)(nil), "proto.DeleteFlangeRequest")
	proto1.RegisterType((*Flange)(nil), "proto.Flange")
	proto1.RegisterType((*FlangeResponse)(nil), "proto.FlangeResponse")
	proto1.RegisterType((*GetStandsRequest)(nil), "proto.GetStandsRequest")
	proto1.RegisterType((*CreateStandRequest)(nil), "proto.CreateStandRequest")
	proto1.RegisterType((*UpdateStandRequest)(nil), "proto.UpdateStandRequest")
	proto1.RegisterType((*DeleteStandRequest)(nil), "proto.DeleteStandRequest")
	proto1.RegisterType((*Stand)(nil), "proto.Stand")
	proto1.RegisterType((*StandResponse)(nil), "proto.StandResponse")
	proto1.RegisterType((*GetStFlRequest)(nil), "proto.GetStFlRequest")
	proto1.RegisterType((*CreateStFlRequest)(nil), "proto.CreateStFlRequest")
	proto1.RegisterType((*UpdateStFlRequest)(nil), "proto.UpdateStFlRequest")
	proto1.RegisterType((*DeleteStFlRequest)(nil), "proto.DeleteStFlRequest")
	proto1.RegisterType((*StFl)(nil), "proto.StFl")
	proto1.RegisterType((*StFlResponse)(nil), "proto.StFlResponse")
	proto1.RegisterType((*GetTypeFlRequest)(nil), "proto.GetTypeFlRequest")
	proto1.RegisterType((*CreateTypeFlRequest)(nil), "proto.CreateTypeFlRequest")
	proto1.RegisterType((*UpdateTypeFlRequest)(nil), "proto.UpdateTypeFlRequest")
	proto1.RegisterType((*DeleteTypeFlRequest)(nil), "proto.DeleteTypeFlRequest")
	proto1.RegisterType((*TypeFl)(nil), "proto.TypeFl")
	proto1.RegisterType((*TypeFlResponse)(nil), "proto.TypeFlResponse")
	proto1.RegisterType((*GetAllAddRequest)(nil), "proto.GetAllAddRequest")
	proto1.RegisterType((*CreateAddRequest)(nil), "proto.CreateAddRequest")
	proto1.RegisterType((*UpdateAddMatRequest)(nil), "proto.UpdateAddMatRequest")
	proto1.RegisterType((*UpdateAddModRequest)(nil), "proto.UpdateAddModRequest")
	proto1.RegisterType((*UpdateAddTemRequest)(nil), "proto.UpdateAddTemRequest")
	proto1.RegisterType((*UpdateAddMounRequest)(nil), "proto.UpdateAddMounRequest")
	proto1.RegisterType((*UpdateAddGrapRequest)(nil), "proto.UpdateAddGrapRequest")
	proto1.RegisterType((*UpdateAddFillersRequest)(nil), "proto.UpdateAddFillersRequest")
	proto1.RegisterType((*Additional)(nil), "proto.Additional")
	proto1.RegisterType((*AdditionalResponse)(nil), "proto.AdditionalResponse")
	proto1.RegisterType((*SuccessResponse)(nil), "proto.SuccessResponse")
	proto1.RegisterType((*GetSizesRequest)(nil), "proto.GetSizesRequest")
	proto1.RegisterType((*CreateSizeRequest)(nil), "proto.CreateSizeRequest")
	proto1.RegisterType((*UpdateSizeRequest)(nil), "proto.UpdateSizeRequest")
	proto1.RegisterType((*DeleteSizeRequest)(nil), "proto.DeleteSizeRequest")
	proto1.RegisterType((*Size)(nil), "proto.Size")
	proto1.RegisterType((*SizeResponse)(nil), "proto.SizeResponse")
	proto1.RegisterType((*GetSNPRequest)(nil), "proto.GetSNPRequest")
	proto1.RegisterType((*CreateSNPRequest)(nil), "proto.CreateSNPRequest")
	proto1.RegisterType((*UpdateSNPRequest)(nil), "proto.UpdateSNPRequest")
	proto1.RegisterType((*DeleteSNPRequest)(nil), "proto.DeleteSNPRequest")
	proto1.RegisterType((*SNP)(nil), "proto.SNP")
	proto1.RegisterType((*SNPResponse)(nil), "proto.SNPResponse")
	proto1.RegisterType((*IdResponse)(nil), "proto.IdResponse")
	proto1.RegisterType((*PingRequest)(nil), "proto.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "proto.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProService service

type ProServiceClient interface {
	// common -----------------------------------------------------------------------
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error)
	CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error)
	CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error)
	CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error)
	CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// Size Service ----------------------------------------------------------------
	GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error)
	CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
}

type proServiceClient struct {
	cc *grpc.ClientConn
}

func NewProServiceClient(cc *grpc.ClientConn) ProServiceClient {
	return &proServiceClient{cc}
}

func (c *proServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error) {
	out := new(FlangeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllFlanges", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error) {
	out := new(StandResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllStands", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error) {
	out := new(StFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error) {
	out := new(AdditionalResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllAdditional", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateAdditional", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateTemp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMoun", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateGrap", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateFillers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSizes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error) {
	out := new(SNPResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProService service

type ProServiceServer interface {
	// common -----------------------------------------------------------------------
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(context.Context, *GetAllFlangeRequest) (*FlangeResponse, error)
	CreateFlange(context.Context, *CreateFlangeRequest) (*IdResponse, error)
	UpdateFlange(context.Context, *UpdateFlangeRequest) (*IdResponse, error)
	DeleteFlange(context.Context, *DeleteFlangeRequest) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(context.Context, *GetStandsRequest) (*StandResponse, error)
	CreateStand(context.Context, *CreateStandRequest) (*IdResponse, error)
	UpdateStand(context.Context, *UpdateStandRequest) (*IdResponse, error)
	DeleteStand(context.Context, *DeleteStandRequest) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(context.Context, *GetStFlRequest) (*StFlResponse, error)
	CreateStFl(context.Context, *CreateStFlRequest) (*IdResponse, error)
	UpdateStFl(context.Context, *UpdateStFlRequest) (*IdResponse, error)
	DeleteStFl(context.Context, *DeleteStFlRequest) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	GetAllTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	CreateTypeFl(context.Context, *CreateTypeFlRequest) (*IdResponse, error)
	UpdateTypeFl(context.Context, *UpdateTypeFlRequest) (*IdResponse, error)
	DeleteTypeFl(context.Context, *DeleteTypeFlRequest) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(context.Context, *GetAllAddRequest) (*AdditionalResponse, error)
	CreateAdditional(context.Context, *CreateAddRequest) (*SuccessResponse, error)
	UpdateMat(context.Context, *UpdateAddMatRequest) (*SuccessResponse, error)
	UpdateMod(context.Context, *UpdateAddModRequest) (*SuccessResponse, error)
	UpdateTemp(context.Context, *UpdateAddTemRequest) (*SuccessResponse, error)
	UpdateMoun(context.Context, *UpdateAddMounRequest) (*SuccessResponse, error)
	UpdateGrap(context.Context, *UpdateAddGrapRequest) (*SuccessResponse, error)
	UpdateFillers(context.Context, *UpdateAddFillersRequest) (*SuccessResponse, error)
	// Size Service ----------------------------------------------------------------
	GetSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	CreateSize(context.Context, *CreateSizeRequest) (*IdResponse, error)
	UpdateSize(context.Context, *UpdateSizeRequest) (*IdResponse, error)
	DeleteSize(context.Context, *DeleteSizeRequest) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(context.Context, *GetSNPRequest) (*SNPResponse, error)
	CreateSNP(context.Context, *CreateSNPRequest) (*IdResponse, error)
	UpdateSNP(context.Context, *UpdateSNPRequest) (*IdResponse, error)
	DeleteSNP(context.Context, *DeleteSNPRequest) (*IdResponse, error)
}

func RegisterProServiceServer(s *grpc.Server, srv ProServiceServer) {
	s.RegisterService(&_ProService_serviceDesc, srv)
}

func _ProService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllFlanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllFlanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllFlanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllFlanges(ctx, req.(*GetAllFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateFlange(ctx, req.(*CreateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFlange(ctx, req.(*UpdateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteFlange(ctx, req.(*DeleteFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllStands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllStands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllStands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllStands(ctx, req.(*GetStandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStand(ctx, req.(*CreateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStand(ctx, req.(*UpdateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStand(ctx, req.(*DeleteStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetStFl(ctx, req.(*GetStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStFl(ctx, req.(*CreateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStFl(ctx, req.(*UpdateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStFl(ctx, req.(*DeleteStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateTypeFl(ctx, req.(*CreateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, req.(*UpdateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, req.(*DeleteTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllAdditional(ctx, req.(*GetAllAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateAdditional(ctx, req.(*CreateAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMat(ctx, req.(*UpdateAddMatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddModRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMod(ctx, req.(*UpdateAddModRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddTemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTemp(ctx, req.(*UpdateAddTemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMoun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMounRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMoun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMoun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMoun(ctx, req.(*UpdateAddMounRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateGrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddGrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateGrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateGrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateGrap(ctx, req.(*UpdateAddGrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFillers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddFillersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFillers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateFillers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFillers(ctx, req.(*UpdateAddFillersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSize(ctx, req.(*CreateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSize(ctx, req.(*UpdateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSize(ctx, req.(*DeleteSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSNP(ctx, req.(*GetSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSNP(ctx, req.(*CreateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSNP(ctx, req.(*UpdateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSNP(ctx, req.(*DeleteSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProService",
	HandlerType: (*ProServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ProService_Ping_Handler,
		},
		{
			MethodName: "GetAllFlanges",
			Handler:    _ProService_GetAllFlanges_Handler,
		},
		{
			MethodName: "CreateFlange",
			Handler:    _ProService_CreateFlange_Handler,
		},
		{
			MethodName: "UpdateFlange",
			Handler:    _ProService_UpdateFlange_Handler,
		},
		{
			MethodName: "DeleteFlange",
			Handler:    _ProService_DeleteFlange_Handler,
		},
		{
			MethodName: "GetAllStands",
			Handler:    _ProService_GetAllStands_Handler,
		},
		{
			MethodName: "CreateStand",
			Handler:    _ProService_CreateStand_Handler,
		},
		{
			MethodName: "UpdateStand",
			Handler:    _ProService_UpdateStand_Handler,
		},
		{
			MethodName: "DeleteStand",
			Handler:    _ProService_DeleteStand_Handler,
		},
		{
			MethodName: "GetStFl",
			Handler:    _ProService_GetStFl_Handler,
		},
		{
			MethodName: "CreateStFl",
			Handler:    _ProService_CreateStFl_Handler,
		},
		{
			MethodName: "UpdateStFl",
			Handler:    _ProService_UpdateStFl_Handler,
		},
		{
			MethodName: "DeleteStFl",
			Handler:    _ProService_DeleteStFl_Handler,
		},
		{
			MethodName: "GetTypeFl",
			Handler:    _ProService_GetTypeFl_Handler,
		},
		{
			MethodName: "GetAllTypeFl",
			Handler:    _ProService_GetAllTypeFl_Handler,
		},
		{
			MethodName: "CreateTypeFl",
			Handler:    _ProService_CreateTypeFl_Handler,
		},
		{
			MethodName: "UpdateTypeFl",
			Handler:    _ProService_UpdateTypeFl_Handler,
		},
		{
			MethodName: "DeleteTypeFl",
			Handler:    _ProService_DeleteTypeFl_Handler,
		},
		{
			MethodName: "GetAllAdditional",
			Handler:    _ProService_GetAllAdditional_Handler,
		},
		{
			MethodName: "CreateAdditional",
			Handler:    _ProService_CreateAdditional_Handler,
		},
		{
			MethodName: "UpdateMat",
			Handler:    _ProService_UpdateMat_Handler,
		},
		{
			MethodName: "UpdateMod",
			Handler:    _ProService_UpdateMod_Handler,
		},
		{
			MethodName: "UpdateTemp",
			Handler:    _ProService_UpdateTemp_Handler,
		},
		{
			MethodName: "UpdateMoun",
			Handler:    _ProService_UpdateMoun_Handler,
		},
		{
			MethodName: "UpdateGrap",
			Handler:    _ProService_UpdateGrap_Handler,
		},
		{
			MethodName: "UpdateFillers",
			Handler:    _ProService_UpdateFillers_Handler,
		},
		{
			MethodName: "GetSizes",
			Handler:    _ProService_GetSizes_Handler,
		},
		{
			MethodName: "CreateSize",
			Handler:    _ProService_CreateSize_Handler,
		},
		{
			MethodName: "UpdateSize",
			Handler:    _ProService_UpdateSize_Handler,
		},
		{
			MethodName: "DeleteSize",
			Handler:    _ProService_DeleteSize_Handler,
		},
		{
			MethodName: "GetSNP",
			Handler:    _ProService_GetSNP_Handler,
		},
		{
			MethodName: "CreateSNP",
			Handler:    _ProService_CreateSNP_Handler,
		},
		{
			MethodName: "UpdateSNP",
			Handler:    _ProService_UpdateSNP_Handler,
		},
		{
			MethodName: "DeleteSNP",
			Handler:    _ProService_DeleteSNP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/pro.proto",
}

func init() { proto1.RegisterFile("proto/pro.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1625 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0xd6, 0x7a, 0x77, 0xbd, 0xbb, 0x67, 0x7f, 0xb2, 0x99, 0xa4, 0xad, 0xbb, 0x54, 0x50, 0x86,
	0x56, 0x54, 0x54, 0x34, 0x6a, 0xd2, 0x2a, 0x2a, 0x51, 0x81, 0x6d, 0x4a, 0xa2, 0x5c, 0xb4, 0x0a,
	0x9b, 0x72, 0x41, 0xef, 0xdc, 0xd8, 0x49, 0x2c, 0x79, 0x6d, 0x63, 0x3b, 0x20, 0x2a, 0x71, 0xc7,
	0x03, 0x70, 0xc1, 0x0d, 0x8f, 0xc0, 0x0b, 0x70, 0x85, 0x04, 0xaf, 0xc0, 0x1b, 0xa1, 0xf9, 0xf5,
	0xcc, 0xf8, 0xa7, 0x69, 0xd3, 0xab, 0xdd, 0x33, 0x9e, 0xf3, 0xcd, 0x9c, 0x6f, 0xce, 0x39, 0x33,
	0xe7, 0xc0, 0x4a, 0x92, 0xc6, 0x79, 0xbc, 0x91, 0xa4, 0xf1, 0x3d, 0xfa, 0x0f, 0x75, 0xe9, 0x0f,
	0xbe, 0x02, 0x6b, 0xfb, 0x7e, 0x3e, 0x0f, 0xc3, 0xbd, 0xd0, 0x8d, 0x4e, 0xfd, 0x85, 0xff, 0xc3,
	0xb9, 0x9f, 0xe5, 0x78, 0x0e, 0x6b, 0xbb, 0xa9, 0xef, 0xe6, 0xbe, 0x36, 0x8c, 0xd6, 0xa1, 0x9b,
	0x07, 0x79, 0xe8, 0x3b, 0xad, 0x9b, 0xad, 0x3b, 0x83, 0x05, 0x13, 0xc8, 0x68, 0x76, 0x16, 0xa7,
	0xb9, 0x63, 0xb1, 0x51, 0x2a, 0xe0, 0x6f, 0x61, 0xed, 0xbb, 0xc4, 0x2b, 0x41, 0x4c, 0xc0, 0x0a,
	0x3c, 0xae, 0x6f, 0x05, 0x5e, 0x01, 0x69, 0x55, 0x42, 0xb6, 0x55, 0xc8, 0xdb, 0xb0, 0xf6, 0xd4,
	0x0f, 0xfd, 0x37, 0x40, 0xe2, 0xa7, 0x60, 0xb3, 0x09, 0x97, 0x5a, 0xec, 0x11, 0x4c, 0xc4, 0x32,
	0x59, 0x12, 0x47, 0x99, 0x8f, 0x3e, 0x85, 0xde, 0x09, 0x1d, 0xc9, 0x9c, 0xd6, 0xcd, 0xf6, 0x9d,
	0xe1, 0xe6, 0x98, 0x71, 0x79, 0x8f, 0xcf, 0x13, 0x5f, 0x31, 0x82, 0xe9, 0xbe, 0x9f, 0x1f, 0xe5,
	0x6e, 0xe4, 0x65, 0x82, 0xd1, 0xcf, 0x00, 0x31, 0x46, 0xe9, 0x70, 0x23, 0xa1, 0xf8, 0x0b, 0x40,
	0x8c, 0x3a, 0x6d, 0xee, 0x85, 0x8c, 0xc1, 0xb7, 0x00, 0x31, 0x8e, 0x9a, 0x74, 0xf1, 0xe7, 0xd0,
	0xa5, 0xdf, 0x2f, 0x08, 0xfa, 0x10, 0xc6, 0x1c, 0x8e, 0x53, 0x71, 0x0b, 0xec, 0x8c, 0x9a, 0xc7,
	0x99, 0x18, 0x71, 0x26, 0xd8, 0x2c, 0xfe, 0x0d, 0x4f, 0x61, 0x42, 0x79, 0xd8, 0x0b, 0x05, 0x0b,
	0x07, 0xb0, 0x2a, 0x58, 0x90, 0x83, 0xc8, 0x81, 0x1e, 0x55, 0x38, 0x10, 0x1b, 0x11, 0x22, 0x9a,
	0x41, 0x9f, 0x71, 0x7a, 0xe0, 0xf1, 0x0d, 0x49, 0x19, 0x7f, 0x0f, 0xab, 0x82, 0xa4, 0x02, 0xca,
	0x34, 0x47, 0x81, 0xb6, 0xea, 0xa1, 0xdb, 0x06, 0xf4, 0x27, 0xb0, 0x2a, 0x38, 0xac, 0x85, 0xc6,
	0xbf, 0xb5, 0xa0, 0x43, 0xbe, 0xbf, 0xc5, 0x9a, 0xc4, 0xd1, 0xc8, 0x5f, 0xe9, 0x68, 0xf4, 0x08,
	0xd4, 0x9d, 0x74, 0xf4, 0x9d, 0xa0, 0xab, 0x60, 0xb3, 0xff, 0x4e, 0x97, 0x7e, 0xe1, 0x52, 0xe1,
	0xb2, 0xb6, 0xea, 0xb2, 0x1b, 0x30, 0x62, 0x3b, 0xe6, 0xa7, 0xf4, 0x11, 0x74, 0xb2, 0xfc, 0x24,
	0xe4, 0x67, 0x34, 0x94, 0x67, 0xb4, 0x17, 0x2e, 0xe8, 0x07, 0xee, 0xa8, 0x2f, 0x7e, 0x4e, 0xfc,
	0xe2, 0x88, 0x96, 0x22, 0xf4, 0xb5, 0xe1, 0xfa, 0xd0, 0xf7, 0xfc, 0xec, 0x38, 0x15, 0xee, 0x42,
	0x85, 0xea, 0x80, 0x22, 0xa3, 0xaf, 0xdc, 0x2c, 0xc8, 0xa8, 0x91, 0xfd, 0x05, 0x13, 0xf0, 0x2f,
	0x22, 0x4d, 0xe8, 0xcb, 0x5d, 0x38, 0x72, 0xd9, 0xf2, 0xed, 0xca, 0xe5, 0x3b, 0x95, 0xcb, 0x77,
	0xd5, 0xe5, 0x65, 0x4a, 0x69, 0x5c, 0x1e, 0xbf, 0x04, 0x9b, 0x4d, 0x78, 0xff, 0x1b, 0xc3, 0xdb,
	0x30, 0x11, 0x8b, 0xf3, 0x73, 0xbb, 0x0d, 0x76, 0x4e, 0x47, 0x8c, 0x3c, 0xc3, 0xa7, 0xf1, 0x8f,
	0xfc, 0xf4, 0xe6, 0x61, 0x38, 0xf7, 0x44, 0xa0, 0xe3, 0xbf, 0x5a, 0x30, 0x65, 0xc7, 0x57, 0x0c,
	0xa2, 0x1b, 0x30, 0x58, 0xba, 0xb9, 0x9f, 0x06, 0x6e, 0x98, 0xf1, 0xad, 0x17, 0x03, 0x68, 0x0a,
	0xed, 0x65, 0x2c, 0x7c, 0x95, 0xfc, 0x45, 0x37, 0x61, 0x98, 0xfb, 0xcb, 0xc4, 0x4f, 0xdd, 0xfc,
	0x3c, 0xf5, 0xb9, 0x0d, 0xea, 0x10, 0xf1, 0xd9, 0x65, 0x7c, 0x1e, 0xe5, 0x41, 0x74, 0x2a, 0x7c,
	0x56, 0xc8, 0xe4, 0xdb, 0x69, 0xea, 0x26, 0x67, 0x41, 0x2e, 0xbc, 0x56, 0xca, 0x24, 0x36, 0x4e,
	0x82, 0x30, 0xf4, 0xd3, 0x8c, 0x7b, 0xae, 0x10, 0xf1, 0xae, 0xf0, 0x83, 0xb9, 0xe7, 0x3d, 0x73,
	0xf3, 0x3a, 0x3f, 0xd0, 0x4c, 0xb1, 0x0c, 0x53, 0xf0, 0xb6, 0x0a, 0x12, 0xd7, 0x66, 0xce, 0x92,
	0xc5, 0x78, 0x5f, 0x51, 0x7c, 0xe1, 0x2f, 0xeb, 0x14, 0x0d, 0x62, 0xac, 0x12, 0x31, 0xf8, 0x09,
	0xac, 0x2b, 0x3b, 0x38, 0x8f, 0xea, 0x90, 0x54, 0x02, 0x2d, 0x9d, 0x40, 0x0d, 0x63, 0x3f, 0x75,
	0x93, 0x06, 0x0c, 0x49, 0xb4, 0xa5, 0x13, 0x8d, 0x77, 0xe1, 0x9a, 0xc4, 0xd8, 0x63, 0x14, 0x37,
	0xe4, 0x48, 0x71, 0x26, 0x96, 0x7e, 0x26, 0xff, 0xb6, 0x00, 0xe6, 0x9e, 0x17, 0xe4, 0x41, 0x1c,
	0xb9, 0xe1, 0xdb, 0x9d, 0x85, 0x20, 0xb9, 0x5d, 0xeb, 0x56, 0x9d, 0x66, 0xb7, 0xea, 0x36, 0xb8,
	0x95, 0x5d, 0xef, 0x56, 0x3d, 0xdd, 0x84, 0x03, 0x40, 0x85, 0x05, 0x32, 0xc0, 0xb6, 0x60, 0xe8,
	0xca, 0x51, 0x71, 0x87, 0xad, 0xf2, 0x28, 0x53, 0xe6, 0xab, 0xb3, 0xf0, 0x5d, 0x58, 0x39, 0x3a,
	0x3f, 0x3e, 0xf6, 0xb3, 0x4c, 0xe2, 0x90, 0x54, 0xcf, 0x86, 0x28, 0x2d, 0xfd, 0x85, 0x10, 0xf1,
	0x4f, 0xb0, 0x42, 0xae, 0xbe, 0xe0, 0xb5, 0x2f, 0x79, 0x2f, 0x72, 0x79, 0x4b, 0xcb, 0xe5, 0x33,
	0xe8, 0xb3, 0x80, 0x2e, 0x2e, 0x39, 0x21, 0x13, 0x1d, 0xf2, 0xff, 0x50, 0x24, 0x12, 0x2e, 0xa9,
	0x77, 0x4c, 0x47, 0xbb, 0x63, 0xf0, 0x1f, 0x96, 0xbc, 0x62, 0x83, 0xd7, 0xfe, 0x65, 0xd6, 0x9e,
	0x80, 0xe5, 0x45, 0x7c, 0x5d, 0xcb, 0x8b, 0x88, 0x9c, 0x44, 0x7c, 0x39, 0x2b, 0x89, 0x94, 0xbd,
	0x75, 0xeb, 0xf6, 0x66, 0xeb, 0xf7, 0x1f, 0x41, 0x7c, 0x40, 0x4f, 0xc8, 0x5a, 0x58, 0xde, 0x03,
	0x2a, 0x6f, 0x39, 0x7d, 0x2e, 0x6f, 0x51, 0x79, 0xd3, 0x19, 0x70, 0x79, 0x93, 0xca, 0xf7, 0x1d,
	0xe0, 0xf2, 0x7d, 0x34, 0x82, 0xd6, 0x99, 0x33, 0xa4, 0x98, 0xad, 0x33, 0xf2, 0x35, 0xdb, 0x74,
	0x46, 0x6c, 0x3f, 0x19, 0x9d, 0x9d, 0x6d, 0x39, 0x63, 0x2e, 0x6f, 0x11, 0x07, 0x74, 0xbd, 0xc8,
	0x99, 0x30, 0x07, 0x74, 0xbd, 0x08, 0xff, 0x69, 0xc9, 0x37, 0xc3, 0xe5, 0xb9, 0x09, 0x84, 0x6f,
	0x93, 0x50, 0x60, 0x5c, 0x75, 0x0c, 0xae, 0xba, 0x15, 0x5c, 0xd9, 0x75, 0x5c, 0xf5, 0xaa, 0xb8,
	0xea, 0x1b, 0x5c, 0x0d, 0x0c, 0xae, 0xc0, 0xe0, 0x6a, 0xa8, 0x73, 0x35, 0xd2, 0xb9, 0x1a, 0x1b,
	0x5c, 0x4d, 0x4c, 0xae, 0x56, 0x0a, 0xae, 0x76, 0xe4, 0x1b, 0xe8, 0x02, 0x54, 0x31, 0x3a, 0x2c,
	0x79, 0x5d, 0xfe, 0x4d, 0xde, 0x46, 0xc1, 0xeb, 0xf2, 0x03, 0x9c, 0xf1, 0x64, 0x19, 0x3c, 0xb5,
	0x25, 0x4f, 0xcc, 0xea, 0x8e, 0x61, 0x75, 0xd7, 0xb0, 0xda, 0x36, 0xac, 0xee, 0xe9, 0x56, 0xf7,
	0x75, 0xab, 0x07, 0x86, 0xd5, 0x20, 0xad, 0x2e, 0x4e, 0x65, 0xa8, 0x9e, 0x0a, 0xbe, 0x0f, 0x23,
	0x66, 0x35, 0x0f, 0xf3, 0x8f, 0xa1, 0x9b, 0x91, 0x48, 0x36, 0x1f, 0x52, 0x64, 0x0e, 0xfb, 0x82,
	0xbf, 0x81, 0x31, 0x89, 0xf7, 0xe7, 0x87, 0x97, 0x7b, 0xd4, 0xfe, 0x6a, 0x89, 0xeb, 0xfb, 0xb2,
	0x50, 0x9a, 0xfb, 0xb6, 0x6b, 0xd3, 0x4a, 0xc7, 0x74, 0x47, 0x91, 0x47, 0xbb, 0x5a, 0x1e, 0x25,
	0x4f, 0x97, 0x93, 0xd4, 0x5d, 0x8a, 0xd4, 0xcb, 0x04, 0x7a, 0xbc, 0x29, 0xf7, 0x5c, 0x2b, 0x48,
	0x89, 0x1c, 0xa7, 0x9c, 0x7f, 0x2b, 0x4e, 0xb5, 0x7c, 0x3e, 0x68, 0xc8, 0xe7, 0x60, 0xdc, 0x5e,
	0xbf, 0x5b, 0x30, 0xe5, 0x81, 0x5a, 0xd0, 0xf0, 0x5e, 0xde, 0xf6, 0x1a, 0x2d, 0x9d, 0x5a, 0x5a,
	0xba, 0x75, 0xb4, 0xd8, 0x35, 0xb4, 0xf4, 0xca, 0xb4, 0xf4, 0x0d, 0x5a, 0x06, 0x95, 0xb4, 0x40,
	0x03, 0x2d, 0x43, 0x83, 0x16, 0x0c, 0x53, 0x1e, 0x93, 0xb5, 0xac, 0xe0, 0xff, 0x5a, 0xd0, 0x3e,
	0x7a, 0x7e, 0x58, 0xf5, 0x58, 0x78, 0x97, 0x5b, 0x46, 0xd8, 0xdd, 0xa9, 0xb1, 0xbb, 0x5b, 0xb6,
	0xdb, 0x36, 0xec, 0xee, 0x55, 0xda, 0xdd, 0x6f, 0xb0, 0x7b, 0x60, 0xd8, 0x7d, 0x17, 0x86, 0xd4,
	0x62, 0x1e, 0x8e, 0x37, 0xa0, 0x9d, 0x45, 0x09, 0x0f, 0x46, 0x10, 0xc1, 0xf8, 0xfc, 0x70, 0x41,
	0x86, 0xf1, 0x0d, 0x80, 0x83, 0xa2, 0x50, 0x35, 0xe9, 0x19, 0xc3, 0xf0, 0x30, 0x88, 0x4e, 0xc5,
	0x73, 0x19, 0xc3, 0x88, 0x89, 0x7c, 0x3a, 0x82, 0x4e, 0x42, 0x76, 0xc7, 0x14, 0xe8, 0xff, 0xcd,
	0x7f, 0xa6, 0x00, 0x87, 0x69, 0x7c, 0xe4, 0xa7, 0x3f, 0x06, 0xc7, 0x3e, 0xda, 0x80, 0x0e, 0x51,
	0x41, 0x88, 0x2f, 0xac, 0xc0, 0xcd, 0xd6, 0xb4, 0x31, 0x8e, 0xf9, 0x84, 0xa6, 0x06, 0xd9, 0x62,
	0xc9, 0xd0, 0x8c, 0xcf, 0xaa, 0x68, 0xbc, 0xcc, 0xae, 0xe8, 0x2d, 0x05, 0x81, 0xf1, 0x18, 0x46,
	0x6a, 0x3f, 0x46, 0x42, 0x54, 0x34, 0x69, 0x66, 0xe2, 0x1d, 0xa3, 0xb0, 0xf0, 0x18, 0x46, 0x6a,
	0x2f, 0x46, 0xaa, 0x57, 0x34, 0x68, 0x6a, 0xd4, 0xd5, 0xbe, 0x8b, 0x54, 0xaf, 0x68, 0xc6, 0xd4,
	0xa8, 0x33, 0x53, 0x59, 0x47, 0x04, 0x5d, 0x2b, 0xec, 0xd7, 0x7a, 0x24, 0xb3, 0x75, 0xad, 0x8b,
	0x20, 0xd4, 0x77, 0x60, 0xa8, 0x74, 0x4e, 0xd0, 0x75, 0xcd, 0x74, 0xb5, 0xcb, 0x51, 0xb5, 0xf6,
	0x0e, 0x0c, 0x95, 0x56, 0x8a, 0x54, 0x2e, 0xb7, 0x57, 0x6a, 0x94, 0x95, 0x5e, 0x8a, 0x54, 0x2e,
	0xf7, 0x57, 0xaa, 0x94, 0x1f, 0x42, 0x8f, 0x37, 0x3f, 0xd0, 0x15, 0xd5, 0x60, 0x59, 0x64, 0x4a,
	0x6f, 0xd1, 0x6a, 0xf6, 0x47, 0x00, 0x45, 0x87, 0x04, 0x39, 0x86, 0xb1, 0x85, 0x72, 0xc5, 0x8a,
	0x8f, 0x00, 0x8a, 0x8e, 0x88, 0x54, 0x2d, 0x35, 0x49, 0x6a, 0x54, 0x8b, 0x8e, 0x87, 0x54, 0x2d,
	0x35, 0x41, 0xaa, 0x49, 0x1a, 0xc8, 0x1e, 0x82, 0x7a, 0xb4, 0x5a, 0x41, 0x2d, 0xfd, 0xda, 0xa8,
	0x74, 0xbf, 0x14, 0xae, 0xf1, 0x8e, 0xfa, 0x32, 0x2e, 0xb8, 0xbe, 0x1e, 0x17, 0x3a, 0x44, 0x53,
	0x5c, 0x18, 0xea, 0x15, 0x1d, 0x89, 0xc6, 0xb8, 0x30, 0xd4, 0x2b, 0x3a, 0x0a, 0x55, 0xea, 0x7b,
	0x4a, 0xfd, 0x2e, 0x6a, 0xac, 0x6b, 0x5a, 0x6e, 0x28, 0x6a, 0xf8, 0xd9, 0xf5, 0x72, 0x75, 0x22,
	0x70, 0x76, 0x95, 0x92, 0xdf, 0xc4, 0x31, 0x7b, 0x01, 0xb3, 0xab, 0xc2, 0xe9, 0x8c, 0x52, 0xe6,
	0x2b, 0x18, 0x30, 0xab, 0x9f, 0xb9, 0xb9, 0xc1, 0x83, 0x56, 0x91, 0x5f, 0x00, 0x20, 0xf6, 0x2a,
	0x00, 0xe2, 0x37, 0xee, 0xe0, 0x6b, 0xe1, 0xbe, 0x2f, 0xfc, 0x65, 0x52, 0x46, 0x28, 0xca, 0xf2,
	0x5a, 0x84, 0xb9, 0x40, 0x20, 0x95, 0x37, 0xfa, 0xa0, 0xbc, 0x07, 0x59, 0x8f, 0xbf, 0x19, 0x82,
	0x14, 0xde, 0x65, 0x08, 0xa5, 0x1c, 0xaf, 0x85, 0xd8, 0x87, 0x31, 0xcf, 0xab, 0xfc, 0xb2, 0xfc,
	0xd0, 0x44, 0xd1, 0x0b, 0xf2, 0x5a, 0xa0, 0x6d, 0xe8, 0x8b, 0x1a, 0x12, 0x5d, 0x55, 0x52, 0x88,
	0x52, 0x54, 0x16, 0x39, 0x44, 0x7d, 0xaf, 0x16, 0x39, 0x84, 0xbc, 0xc1, 0x8d, 0x1c, 0x52, 0x3c,
	0xe7, 0x9b, 0x73, 0x88, 0xaa, 0x5a, 0x2a, 0x9a, 0x9a, 0x73, 0x88, 0xaa, 0x5a, 0x2a, 0x22, 0xaa,
	0x54, 0x37, 0xc1, 0x66, 0xaf, 0x67, 0xb4, 0xae, 0xd8, 0x29, 0x1f, 0x39, 0x33, 0xa4, 0x5c, 0xf2,
	0x05, 0x3b, 0x03, 0xf9, 0x52, 0x36, 0xdc, 0x5d, 0xd1, 0xac, 0x58, 0x6c, 0x5b, 0x38, 0xaa, 0xaa,
	0x68, 0xbe, 0x36, 0x6b, 0x14, 0xe5, 0xf3, 0x4b, 0x2a, 0x9a, 0x0f, 0xb2, 0x0a, 0xc5, 0x27, 0xf0,
	0xb2, 0x7f, 0x6f, 0x63, 0x87, 0x0e, 0xbf, 0xb2, 0xe9, 0xcf, 0xd6, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x86, 0x97, 0x5d, 0xed, 0x91, 0x19, 0x00, 0x00,
}
