// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pro.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/pro.proto

It has these top-level messages:
	GetAllFlangeRequest
	CreateFlangeRequest
	UpdateFlangeRequest
	DeleteFlangeRequest
	Flange
	FlangeResponse
	GetStandsRequest
	CreateStandRequest
	UpdateStandRequest
	DeleteStandRequest
	Stand
	StandResponse
	GetStFlRequest
	CreateStFlRequest
	UpdateStFlRequest
	DeleteStFlRequest
	StFl
	StFlResponse
	GetTypeFlRequest
	CreateTypeFlRequest
	UpdateTypeFlRequest
	DeleteTypeFlRequest
	TypeFl
	TypeFlResponse
	GetAllAddRequest
	AddMaterials
	AddTemperature
	AddMod
	AddMoun
	AddGrap
	AddFiller
	AddCoating
	AddConstruction
	AddObturator
	AddBasis
	AddPObturator
	AddSealant
	CreateAddRequest
	UpdateAddMatRequest
	UpdateAddModRequest
	UpdateAddTemRequest
	UpdateAddMounRequest
	UpdateAddGrapRequest
	UpdateAddFillersRequest
	UpdateAddCoatingRequest
	UpdateAddConstructionRequest
	UpdateAddObturatorRequest
	UpdateAddBasisRequest
	UpdateAddPObturatorRequest
	UpdateAddSealantRequest
	Additional
	AdditionalResponse
	SuccessResponse
	GetSizesRequest
	CreateSizeRequest
	CreateSizesRequest
	UpdateSizeRequest
	DeleteSizeRequest
	DeleteAllSizeRequest
	Size
	Dn
	SizeResponse
	Filler
	Temp
	SnpMaterials
	GetSNPRequest
	CreateSNPRequest
	UpdateSNPRequest
	DeleteSNPRequest
	SNP
	SNPResponse
	PutgImage
	GetPutgImageRequest
	CreatePutgImageRequest
	UpdatePutgImageRequest
	DeletePutgImageRequest
	PutgImageResponse
	PutgTemp
	PutgConstructions
	ConTemp
	Constr
	PutgObt
	PutgMaterials
	GetPutgRequest
	CreatePutgRequest
	UpdatePutgRequest
	DeletePutgRequest
	Putg
	PutgResponse
	PutgmImage
	GetPutgmImageRequest
	CreatePutgmImageRequest
	UpdatePutgmImageRequest
	DeletePutgmImageRequest
	PutgmImageResponse
	PutgmConstructions
	PutgmConstr
	PutgmObt
	PutgmSeal
	GetPutgmRequest
	CreatePutgmRequest
	UpdatePutgmRequest
	DeletePutgmRequest
	Putgm
	PutgmResponse
	GetMaterialsRequest
	CreateMaterialsRequest
	UpdateMaterialsRequest
	DeleteMaterialsRequest
	Materials
	MaterialsResponse
	GetBoltMaterialsRequest
	CreateBoltMaterialsRequest
	UpdateBoltMaterialsRequest
	DeleteBoltMaterialsRequest
	BoltMaterials
	BoltMaterialsResponse
	GetSizesIntRequest
	GetAllSizeIntRequest
	CreateSizeIntRequest
	CreateSizesIntRequest
	UpdateSizeIntRequest
	DeleteSizeIntRequest
	DeleteAllSizeIntRequest
	SizeInt
	SizeIntResponse
	SendInterviewRequest
	Drawing
	SizesInt
	GetOrderRequest
	GetAllOrdersRequest
	GetCurOrderRequest
	CreateOrderRequest
	DeleteOrderRequest
	SaveOrderRequest
	GetPositionsRequest
	GetCurPositionsRequest
	AddPositionRequest
	UpdatePositionRequest
	RemovePositionRequest
	Order
	OrderPosition
	OrderResponse
	OrderPositionResponse
	MetaData
	File
	FileDownloadResponse
	IdResponse
	PingRequest
	PingResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Flange Service ----------------------------------------------------------------
type GetAllFlangeRequest struct {
}

func (m *GetAllFlangeRequest) Reset()                    { *m = GetAllFlangeRequest{} }
func (m *GetAllFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllFlangeRequest) ProtoMessage()               {}
func (*GetAllFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateFlangeRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
}

func (m *CreateFlangeRequest) Reset()                    { *m = CreateFlangeRequest{} }
func (m *CreateFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateFlangeRequest) ProtoMessage()               {}
func (*CreateFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateFlangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateFlangeRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type UpdateFlangeRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
}

func (m *UpdateFlangeRequest) Reset()                    { *m = UpdateFlangeRequest{} }
func (m *UpdateFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFlangeRequest) ProtoMessage()               {}
func (*UpdateFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateFlangeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateFlangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateFlangeRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type DeleteFlangeRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteFlangeRequest) Reset()                    { *m = DeleteFlangeRequest{} }
func (m *DeleteFlangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFlangeRequest) ProtoMessage()               {}
func (*DeleteFlangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteFlangeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Flange struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
}

func (m *Flange) Reset()                    { *m = Flange{} }
func (m *Flange) String() string            { return proto1.CompactTextString(m) }
func (*Flange) ProtoMessage()               {}
func (*Flange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Flange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Flange) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Flange) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type FlangeResponse struct {
	Flanges []*Flange `protobuf:"bytes,1,rep,name=flanges" json:"flanges,omitempty"`
}

func (m *FlangeResponse) Reset()                    { *m = FlangeResponse{} }
func (m *FlangeResponse) String() string            { return proto1.CompactTextString(m) }
func (*FlangeResponse) ProtoMessage()               {}
func (*FlangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FlangeResponse) GetFlanges() []*Flange {
	if m != nil {
		return m.Flanges
	}
	return nil
}

// Stand Service ----------------------------------------------------------------
type GetStandsRequest struct {
}

func (m *GetStandsRequest) Reset()                    { *m = GetStandsRequest{} }
func (m *GetStandsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStandsRequest) ProtoMessage()               {}
func (*GetStandsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CreateStandRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *CreateStandRequest) Reset()                    { *m = CreateStandRequest{} }
func (m *CreateStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateStandRequest) ProtoMessage()               {}
func (*CreateStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateStandRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UpdateStandRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *UpdateStandRequest) Reset()                    { *m = UpdateStandRequest{} }
func (m *UpdateStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateStandRequest) ProtoMessage()               {}
func (*UpdateStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateStandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStandRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type DeleteStandRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteStandRequest) Reset()                    { *m = DeleteStandRequest{} }
func (m *DeleteStandRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteStandRequest) ProtoMessage()               {}
func (*DeleteStandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteStandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Stand struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *Stand) Reset()                    { *m = Stand{} }
func (m *Stand) String() string            { return proto1.CompactTextString(m) }
func (*Stand) ProtoMessage()               {}
func (*Stand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Stand) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Stand) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type StandResponse struct {
	Stands []*Stand `protobuf:"bytes,1,rep,name=stands" json:"stands,omitempty"`
}

func (m *StandResponse) Reset()                    { *m = StandResponse{} }
func (m *StandResponse) String() string            { return proto1.CompactTextString(m) }
func (*StandResponse) ProtoMessage()               {}
func (*StandResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StandResponse) GetStands() []*Stand {
	if m != nil {
		return m.Stands
	}
	return nil
}

// St_Fl Service ----------------------------------------------------------------
type GetStFlRequest struct {
}

func (m *GetStFlRequest) Reset()                    { *m = GetStFlRequest{} }
func (m *GetStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStFlRequest) ProtoMessage()               {}
func (*GetStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type CreateStFlRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *CreateStFlRequest) Reset()                    { *m = CreateStFlRequest{} }
func (m *CreateStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateStFlRequest) ProtoMessage()               {}
func (*CreateStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateStFlRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateStFlRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type UpdateStFlRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdateStFlRequest) Reset()                    { *m = UpdateStFlRequest{} }
func (m *UpdateStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateStFlRequest) ProtoMessage()               {}
func (*UpdateStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UpdateStFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStFlRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateStFlRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeleteStFlRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteStFlRequest) Reset()                    { *m = DeleteStFlRequest{} }
func (m *DeleteStFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteStFlRequest) ProtoMessage()               {}
func (*DeleteStFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *DeleteStFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StFl struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	Stand    string `protobuf:"bytes,3,opt,name=stand" json:"stand,omitempty"`
	FlangeId string `protobuf:"bytes,4,opt,name=flangeId" json:"flangeId,omitempty"`
	Flange   string `protobuf:"bytes,5,opt,name=flange" json:"flange,omitempty"`
	Short    string `protobuf:"bytes,6,opt,name=short" json:"short,omitempty"`
}

func (m *StFl) Reset()                    { *m = StFl{} }
func (m *StFl) String() string            { return proto1.CompactTextString(m) }
func (*StFl) ProtoMessage()               {}
func (*StFl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *StFl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StFl) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *StFl) GetStand() string {
	if m != nil {
		return m.Stand
	}
	return ""
}

func (m *StFl) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *StFl) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *StFl) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type StFlResponse struct {
	Stfl []*StFl `protobuf:"bytes,1,rep,name=stfl" json:"stfl,omitempty"`
}

func (m *StFlResponse) Reset()                    { *m = StFlResponse{} }
func (m *StFlResponse) String() string            { return proto1.CompactTextString(m) }
func (*StFlResponse) ProtoMessage()               {}
func (*StFlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *StFlResponse) GetStfl() []*StFl {
	if m != nil {
		return m.Stfl
	}
	return nil
}

// Type Flange Service ----------------------------------------------------------------
type GetTypeFlRequest struct {
}

func (m *GetTypeFlRequest) Reset()                    { *m = GetTypeFlRequest{} }
func (m *GetTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetTypeFlRequest) ProtoMessage()               {}
func (*GetTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type CreateTypeFlRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,2,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,3,opt,name=short" json:"short,omitempty"`
	Basis bool   `protobuf:"varint,4,opt,name=basis" json:"basis,omitempty"`
}

func (m *CreateTypeFlRequest) Reset()                    { *m = CreateTypeFlRequest{} }
func (m *CreateTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateTypeFlRequest) ProtoMessage()               {}
func (*CreateTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CreateTypeFlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateTypeFlRequest) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *CreateTypeFlRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *CreateTypeFlRequest) GetBasis() bool {
	if m != nil {
		return m.Basis
	}
	return false
}

type UpdateTypeFlRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,4,opt,name=short" json:"short,omitempty"`
	Basis bool   `protobuf:"varint,5,opt,name=basis" json:"basis,omitempty"`
}

func (m *UpdateTypeFlRequest) Reset()                    { *m = UpdateTypeFlRequest{} }
func (m *UpdateTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateTypeFlRequest) ProtoMessage()               {}
func (*UpdateTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UpdateTypeFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *UpdateTypeFlRequest) GetBasis() bool {
	if m != nil {
		return m.Basis
	}
	return false
}

type DeleteTypeFlRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteTypeFlRequest) Reset()                    { *m = DeleteTypeFlRequest{} }
func (m *DeleteTypeFlRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteTypeFlRequest) ProtoMessage()               {}
func (*DeleteTypeFlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteTypeFlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TypeFl struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr" json:"descr,omitempty"`
	Short string `protobuf:"bytes,4,opt,name=short" json:"short,omitempty"`
}

func (m *TypeFl) Reset()                    { *m = TypeFl{} }
func (m *TypeFl) String() string            { return proto1.CompactTextString(m) }
func (*TypeFl) ProtoMessage()               {}
func (*TypeFl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TypeFl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TypeFl) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TypeFl) GetDescr() string {
	if m != nil {
		return m.Descr
	}
	return ""
}

func (m *TypeFl) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

type TypeFlResponse struct {
	TypeFl []*TypeFl `protobuf:"bytes,1,rep,name=typeFl" json:"typeFl,omitempty"`
}

func (m *TypeFlResponse) Reset()                    { *m = TypeFlResponse{} }
func (m *TypeFlResponse) String() string            { return proto1.CompactTextString(m) }
func (*TypeFlResponse) ProtoMessage()               {}
func (*TypeFlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *TypeFlResponse) GetTypeFl() []*TypeFl {
	if m != nil {
		return m.TypeFl
	}
	return nil
}

// Additional Service ----------------------------------------------------------------
type GetAllAddRequest struct {
}

func (m *GetAllAddRequest) Reset()                    { *m = GetAllAddRequest{} }
func (m *GetAllAddRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllAddRequest) ProtoMessage()               {}
func (*GetAllAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type AddMaterials struct {
	Short string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddMaterials) Reset()                    { *m = AddMaterials{} }
func (m *AddMaterials) String() string            { return proto1.CompactTextString(m) }
func (*AddMaterials) ProtoMessage()               {}
func (*AddMaterials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *AddMaterials) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddMaterials) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddTemperature struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddTemperature) Reset()                    { *m = AddTemperature{} }
func (m *AddTemperature) String() string            { return proto1.CompactTextString(m) }
func (*AddTemperature) ProtoMessage()               {}
func (*AddTemperature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *AddTemperature) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddTemperature) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddMod struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *AddMod) Reset()                    { *m = AddMod{} }
func (m *AddMod) String() string            { return proto1.CompactTextString(m) }
func (*AddMod) ProtoMessage()               {}
func (*AddMod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *AddMod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddMod) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddMod) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddMod) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddMoun struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddMoun) Reset()                    { *m = AddMoun{} }
func (m *AddMoun) String() string            { return proto1.CompactTextString(m) }
func (*AddMoun) ProtoMessage()               {}
func (*AddMoun) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *AddMoun) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddMoun) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddGrap struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *AddGrap) Reset()                    { *m = AddGrap{} }
func (m *AddGrap) String() string            { return proto1.CompactTextString(m) }
func (*AddGrap) ProtoMessage()               {}
func (*AddGrap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *AddGrap) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddGrap) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddGrap) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddFiller struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *AddFiller) Reset()                    { *m = AddFiller{} }
func (m *AddFiller) String() string            { return proto1.CompactTextString(m) }
func (*AddFiller) ProtoMessage()               {}
func (*AddFiller) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *AddFiller) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddFiller) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddFiller) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddCoating struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *AddCoating) Reset()                    { *m = AddCoating{} }
func (m *AddCoating) String() string            { return proto1.CompactTextString(m) }
func (*AddCoating) ProtoMessage()               {}
func (*AddCoating) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AddCoating) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddCoating) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddCoating) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddCoating) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddConstruction struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *AddConstruction) Reset()                    { *m = AddConstruction{} }
func (m *AddConstruction) String() string            { return proto1.CompactTextString(m) }
func (*AddConstruction) ProtoMessage()               {}
func (*AddConstruction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *AddConstruction) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddConstruction) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddConstruction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddObturator struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ForDescr    string `protobuf:"bytes,4,opt,name=forDescr" json:"forDescr,omitempty"`
}

func (m *AddObturator) Reset()                    { *m = AddObturator{} }
func (m *AddObturator) String() string            { return proto1.CompactTextString(m) }
func (*AddObturator) ProtoMessage()               {}
func (*AddObturator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AddObturator) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddObturator) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddObturator) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddObturator) GetForDescr() string {
	if m != nil {
		return m.ForDescr
	}
	return ""
}

type AddBasis struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *AddBasis) Reset()                    { *m = AddBasis{} }
func (m *AddBasis) String() string            { return proto1.CompactTextString(m) }
func (*AddBasis) ProtoMessage()               {}
func (*AddBasis) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *AddBasis) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddBasis) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddBasis) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddPObturator struct {
	Short       string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ForDescr    string `protobuf:"bytes,4,opt,name=forDescr" json:"forDescr,omitempty"`
}

func (m *AddPObturator) Reset()                    { *m = AddPObturator{} }
func (m *AddPObturator) String() string            { return proto1.CompactTextString(m) }
func (*AddPObturator) ProtoMessage()               {}
func (*AddPObturator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *AddPObturator) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddPObturator) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddPObturator) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddPObturator) GetForDescr() string {
	if m != nil {
		return m.ForDescr
	}
	return ""
}

type AddSealant struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short" json:"short,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	ForDescr    string `protobuf:"bytes,5,opt,name=forDescr" json:"forDescr,omitempty"`
}

func (m *AddSealant) Reset()                    { *m = AddSealant{} }
func (m *AddSealant) String() string            { return proto1.CompactTextString(m) }
func (*AddSealant) ProtoMessage()               {}
func (*AddSealant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *AddSealant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddSealant) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *AddSealant) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddSealant) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddSealant) GetForDescr() string {
	if m != nil {
		return m.ForDescr
	}
	return ""
}

type CreateAddRequest struct {
	Materials    string `protobuf:"bytes,1,opt,name=materials" json:"materials,omitempty"`
	Mod          string `protobuf:"bytes,2,opt,name=mod" json:"mod,omitempty"`
	Temperature  string `protobuf:"bytes,3,opt,name=temperature" json:"temperature,omitempty"`
	Mounting     string `protobuf:"bytes,4,opt,name=mounting" json:"mounting,omitempty"`
	Graphite     string `protobuf:"bytes,5,opt,name=graphite" json:"graphite,omitempty"`
	Fillers      string `protobuf:"bytes,6,opt,name=fillers" json:"fillers,omitempty"`
	Coating      string `protobuf:"bytes,7,opt,name=coating" json:"coating,omitempty"`
	Construction string `protobuf:"bytes,8,opt,name=construction" json:"construction,omitempty"`
	Obturator    string `protobuf:"bytes,9,opt,name=obturator" json:"obturator,omitempty"`
	Basis        string `protobuf:"bytes,10,opt,name=basis" json:"basis,omitempty"`
	PObturator   string `protobuf:"bytes,11,opt,name=pObturator" json:"pObturator,omitempty"`
	Sealant      string `protobuf:"bytes,12,opt,name=sealant" json:"sealant,omitempty"`
}

func (m *CreateAddRequest) Reset()                    { *m = CreateAddRequest{} }
func (m *CreateAddRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateAddRequest) ProtoMessage()               {}
func (*CreateAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *CreateAddRequest) GetMaterials() string {
	if m != nil {
		return m.Materials
	}
	return ""
}

func (m *CreateAddRequest) GetMod() string {
	if m != nil {
		return m.Mod
	}
	return ""
}

func (m *CreateAddRequest) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *CreateAddRequest) GetMounting() string {
	if m != nil {
		return m.Mounting
	}
	return ""
}

func (m *CreateAddRequest) GetGraphite() string {
	if m != nil {
		return m.Graphite
	}
	return ""
}

func (m *CreateAddRequest) GetFillers() string {
	if m != nil {
		return m.Fillers
	}
	return ""
}

func (m *CreateAddRequest) GetCoating() string {
	if m != nil {
		return m.Coating
	}
	return ""
}

func (m *CreateAddRequest) GetConstruction() string {
	if m != nil {
		return m.Construction
	}
	return ""
}

func (m *CreateAddRequest) GetObturator() string {
	if m != nil {
		return m.Obturator
	}
	return ""
}

func (m *CreateAddRequest) GetBasis() string {
	if m != nil {
		return m.Basis
	}
	return ""
}

func (m *CreateAddRequest) GetPObturator() string {
	if m != nil {
		return m.PObturator
	}
	return ""
}

func (m *CreateAddRequest) GetSealant() string {
	if m != nil {
		return m.Sealant
	}
	return ""
}

type UpdateAddMatRequest struct {
	Id        string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Materials []*AddMaterials `protobuf:"bytes,2,rep,name=materials" json:"materials,omitempty"`
	TypeCh    string          `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change    string          `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddMatRequest) Reset()                    { *m = UpdateAddMatRequest{} }
func (m *UpdateAddMatRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddMatRequest) ProtoMessage()               {}
func (*UpdateAddMatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *UpdateAddMatRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddMatRequest) GetMaterials() []*AddMaterials {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *UpdateAddMatRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddMatRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddModRequest struct {
	Id     string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mod    []*AddMod `protobuf:"bytes,2,rep,name=mod" json:"mod,omitempty"`
	TypeCh string    `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change string    `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddModRequest) Reset()                    { *m = UpdateAddModRequest{} }
func (m *UpdateAddModRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddModRequest) ProtoMessage()               {}
func (*UpdateAddModRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *UpdateAddModRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddModRequest) GetMod() []*AddMod {
	if m != nil {
		return m.Mod
	}
	return nil
}

func (m *UpdateAddModRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddModRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddTemRequest struct {
	Id          string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Temperature []*AddTemperature `protobuf:"bytes,2,rep,name=temperature" json:"temperature,omitempty"`
	TypeCh      string            `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change      string            `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddTemRequest) Reset()                    { *m = UpdateAddTemRequest{} }
func (m *UpdateAddTemRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddTemRequest) ProtoMessage()               {}
func (*UpdateAddTemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *UpdateAddTemRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddTemRequest) GetTemperature() []*AddTemperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

func (m *UpdateAddTemRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddTemRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddMounRequest struct {
	Id       string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mounting []*AddMoun `protobuf:"bytes,2,rep,name=mounting" json:"mounting,omitempty"`
	TypeCh   string     `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change   string     `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddMounRequest) Reset()                    { *m = UpdateAddMounRequest{} }
func (m *UpdateAddMounRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddMounRequest) ProtoMessage()               {}
func (*UpdateAddMounRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *UpdateAddMounRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddMounRequest) GetMounting() []*AddMoun {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdateAddMounRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddMounRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddGrapRequest struct {
	Id       string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Graphite []*AddGrap `protobuf:"bytes,2,rep,name=graphite" json:"graphite,omitempty"`
	TypeCh   string     `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change   string     `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddGrapRequest) Reset()                    { *m = UpdateAddGrapRequest{} }
func (m *UpdateAddGrapRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddGrapRequest) ProtoMessage()               {}
func (*UpdateAddGrapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *UpdateAddGrapRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddGrapRequest) GetGraphite() []*AddGrap {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *UpdateAddGrapRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddGrapRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddFillersRequest struct {
	Id      string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fillers []*AddFiller `protobuf:"bytes,2,rep,name=fillers" json:"fillers,omitempty"`
	TypeCh  string       `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change  string       `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddFillersRequest) Reset()                    { *m = UpdateAddFillersRequest{} }
func (m *UpdateAddFillersRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddFillersRequest) ProtoMessage()               {}
func (*UpdateAddFillersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *UpdateAddFillersRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddFillersRequest) GetFillers() []*AddFiller {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *UpdateAddFillersRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddFillersRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddCoatingRequest struct {
	Id      string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Coating []*AddCoating `protobuf:"bytes,2,rep,name=coating" json:"coating,omitempty"`
	TypeCh  string        `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change  string        `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddCoatingRequest) Reset()                    { *m = UpdateAddCoatingRequest{} }
func (m *UpdateAddCoatingRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddCoatingRequest) ProtoMessage()               {}
func (*UpdateAddCoatingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *UpdateAddCoatingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddCoatingRequest) GetCoating() []*AddCoating {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *UpdateAddCoatingRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddCoatingRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddConstructionRequest struct {
	Id     string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Constr []*AddConstruction `protobuf:"bytes,2,rep,name=constr" json:"constr,omitempty"`
	TypeCh string             `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change string             `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddConstructionRequest) Reset()                    { *m = UpdateAddConstructionRequest{} }
func (m *UpdateAddConstructionRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddConstructionRequest) ProtoMessage()               {}
func (*UpdateAddConstructionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *UpdateAddConstructionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddConstructionRequest) GetConstr() []*AddConstruction {
	if m != nil {
		return m.Constr
	}
	return nil
}

func (m *UpdateAddConstructionRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddConstructionRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddObturatorRequest struct {
	Id        string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Obturator []*AddObturator `protobuf:"bytes,2,rep,name=obturator" json:"obturator,omitempty"`
	TypeCh    string          `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change    string          `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddObturatorRequest) Reset()                    { *m = UpdateAddObturatorRequest{} }
func (m *UpdateAddObturatorRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddObturatorRequest) ProtoMessage()               {}
func (*UpdateAddObturatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *UpdateAddObturatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddObturatorRequest) GetObturator() []*AddObturator {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *UpdateAddObturatorRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddObturatorRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddBasisRequest struct {
	Id     string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Basis  []*AddBasis `protobuf:"bytes,2,rep,name=basis" json:"basis,omitempty"`
	TypeCh string      `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change string      `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddBasisRequest) Reset()                    { *m = UpdateAddBasisRequest{} }
func (m *UpdateAddBasisRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddBasisRequest) ProtoMessage()               {}
func (*UpdateAddBasisRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *UpdateAddBasisRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddBasisRequest) GetBasis() []*AddBasis {
	if m != nil {
		return m.Basis
	}
	return nil
}

func (m *UpdateAddBasisRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddBasisRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddPObturatorRequest struct {
	Id         string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PObturator []*AddPObturator `protobuf:"bytes,2,rep,name=pObturator" json:"pObturator,omitempty"`
	TypeCh     string           `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change     string           `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddPObturatorRequest) Reset()                    { *m = UpdateAddPObturatorRequest{} }
func (m *UpdateAddPObturatorRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddPObturatorRequest) ProtoMessage()               {}
func (*UpdateAddPObturatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *UpdateAddPObturatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddPObturatorRequest) GetPObturator() []*AddPObturator {
	if m != nil {
		return m.PObturator
	}
	return nil
}

func (m *UpdateAddPObturatorRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddPObturatorRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type UpdateAddSealantRequest struct {
	Id      string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Sealant []*AddSealant `protobuf:"bytes,2,rep,name=sealant" json:"sealant,omitempty"`
	TypeCh  string        `protobuf:"bytes,3,opt,name=typeCh" json:"typeCh,omitempty"`
	Change  string        `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
}

func (m *UpdateAddSealantRequest) Reset()                    { *m = UpdateAddSealantRequest{} }
func (m *UpdateAddSealantRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateAddSealantRequest) ProtoMessage()               {}
func (*UpdateAddSealantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *UpdateAddSealantRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAddSealantRequest) GetSealant() []*AddSealant {
	if m != nil {
		return m.Sealant
	}
	return nil
}

func (m *UpdateAddSealantRequest) GetTypeCh() string {
	if m != nil {
		return m.TypeCh
	}
	return ""
}

func (m *UpdateAddSealantRequest) GetChange() string {
	if m != nil {
		return m.Change
	}
	return ""
}

type Additional struct {
	Id           string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Materials    []*AddMaterials    `protobuf:"bytes,2,rep,name=materials" json:"materials,omitempty"`
	Mod          []*AddMod          `protobuf:"bytes,3,rep,name=mod" json:"mod,omitempty"`
	Temperature  []*AddTemperature  `protobuf:"bytes,4,rep,name=temperature" json:"temperature,omitempty"`
	Mounting     []*AddMoun         `protobuf:"bytes,5,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []*AddGrap         `protobuf:"bytes,6,rep,name=graphite" json:"graphite,omitempty"`
	Fillers      []*AddFiller       `protobuf:"bytes,7,rep,name=fillers" json:"fillers,omitempty"`
	Coating      []*AddCoating      `protobuf:"bytes,8,rep,name=coating" json:"coating,omitempty"`
	Construction []*AddConstruction `protobuf:"bytes,9,rep,name=construction" json:"construction,omitempty"`
	Obturator    []*AddObturator    `protobuf:"bytes,10,rep,name=obturator" json:"obturator,omitempty"`
	Basis        []*AddBasis        `protobuf:"bytes,11,rep,name=basis" json:"basis,omitempty"`
	PObturator   []*AddPObturator   `protobuf:"bytes,12,rep,name=pObturator" json:"pObturator,omitempty"`
	Sealant      []*AddSealant      `protobuf:"bytes,13,rep,name=sealant" json:"sealant,omitempty"`
}

func (m *Additional) Reset()                    { *m = Additional{} }
func (m *Additional) String() string            { return proto1.CompactTextString(m) }
func (*Additional) ProtoMessage()               {}
func (*Additional) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *Additional) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Additional) GetMaterials() []*AddMaterials {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *Additional) GetMod() []*AddMod {
	if m != nil {
		return m.Mod
	}
	return nil
}

func (m *Additional) GetTemperature() []*AddTemperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

func (m *Additional) GetMounting() []*AddMoun {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *Additional) GetGraphite() []*AddGrap {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *Additional) GetFillers() []*AddFiller {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *Additional) GetCoating() []*AddCoating {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *Additional) GetConstruction() []*AddConstruction {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *Additional) GetObturator() []*AddObturator {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *Additional) GetBasis() []*AddBasis {
	if m != nil {
		return m.Basis
	}
	return nil
}

func (m *Additional) GetPObturator() []*AddPObturator {
	if m != nil {
		return m.PObturator
	}
	return nil
}

func (m *Additional) GetSealant() []*AddSealant {
	if m != nil {
		return m.Sealant
	}
	return nil
}

type AdditionalResponse struct {
	Additionals []*Additional `protobuf:"bytes,1,rep,name=additionals" json:"additionals,omitempty"`
}

func (m *AdditionalResponse) Reset()                    { *m = AdditionalResponse{} }
func (m *AdditionalResponse) String() string            { return proto1.CompactTextString(m) }
func (*AdditionalResponse) ProtoMessage()               {}
func (*AdditionalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *AdditionalResponse) GetAdditionals() []*Additional {
	if m != nil {
		return m.Additionals
	}
	return nil
}

type SuccessResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SuccessResponse) Reset()                    { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string            { return proto1.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()               {}
func (*SuccessResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Size Service ----------------------------------------------------------------
type GetSizesRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,4,opt,name=standId" json:"standId,omitempty"`
}

func (m *GetSizesRequest) Reset()                    { *m = GetSizesRequest{} }
func (m *GetSizesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSizesRequest) ProtoMessage()               {}
func (*GetSizesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *GetSizesRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *GetSizesRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *GetSizesRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *GetSizesRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

type CreateSizeRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	Dn       string `protobuf:"bytes,3,opt,name=dn" json:"dn,omitempty"`
	Pn       string `protobuf:"bytes,4,opt,name=pn" json:"pn,omitempty"`
	TypePr   string `protobuf:"bytes,5,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,6,opt,name=standId" json:"standId,omitempty"`
	D4       string `protobuf:"bytes,7,opt,name=d4" json:"d4,omitempty"`
	D3       string `protobuf:"bytes,8,opt,name=d3" json:"d3,omitempty"`
	D2       string `protobuf:"bytes,9,opt,name=d2" json:"d2,omitempty"`
	D1       string `protobuf:"bytes,10,opt,name=d1" json:"d1,omitempty"`
	H        string `protobuf:"bytes,11,opt,name=h" json:"h,omitempty"`
	S2       string `protobuf:"bytes,12,opt,name=s2" json:"s2,omitempty"`
	S3       string `protobuf:"bytes,13,opt,name=s3" json:"s3,omitempty"`
	Number   int32  `protobuf:"varint,14,opt,name=number" json:"number,omitempty"`
}

func (m *CreateSizeRequest) Reset()                    { *m = CreateSizeRequest{} }
func (m *CreateSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSizeRequest) ProtoMessage()               {}
func (*CreateSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *CreateSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *CreateSizeRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreateSizeRequest) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *CreateSizeRequest) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *CreateSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreateSizeRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateSizeRequest) GetD4() string {
	if m != nil {
		return m.D4
	}
	return ""
}

func (m *CreateSizeRequest) GetD3() string {
	if m != nil {
		return m.D3
	}
	return ""
}

func (m *CreateSizeRequest) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *CreateSizeRequest) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *CreateSizeRequest) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *CreateSizeRequest) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *CreateSizeRequest) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *CreateSizeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CreateSizesRequest struct {
	Sizes []*CreateSizeRequest `protobuf:"bytes,1,rep,name=sizes" json:"sizes,omitempty"`
}

func (m *CreateSizesRequest) Reset()                    { *m = CreateSizesRequest{} }
func (m *CreateSizesRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSizesRequest) ProtoMessage()               {}
func (*CreateSizesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *CreateSizesRequest) GetSizes() []*CreateSizeRequest {
	if m != nil {
		return m.Sizes
	}
	return nil
}

type UpdateSizeRequest struct {
	Flange   string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypeFlId string `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Dn       string `protobuf:"bytes,4,opt,name=dn" json:"dn,omitempty"`
	Pn       string `protobuf:"bytes,5,opt,name=pn" json:"pn,omitempty"`
	TypePr   string `protobuf:"bytes,6,opt,name=typePr" json:"typePr,omitempty"`
	StandId  string `protobuf:"bytes,7,opt,name=standId" json:"standId,omitempty"`
	D4       string `protobuf:"bytes,8,opt,name=d4" json:"d4,omitempty"`
	D3       string `protobuf:"bytes,9,opt,name=d3" json:"d3,omitempty"`
	D2       string `protobuf:"bytes,10,opt,name=d2" json:"d2,omitempty"`
	D1       string `protobuf:"bytes,11,opt,name=d1" json:"d1,omitempty"`
	H        string `protobuf:"bytes,12,opt,name=h" json:"h,omitempty"`
	S2       string `protobuf:"bytes,13,opt,name=s2" json:"s2,omitempty"`
	S3       string `protobuf:"bytes,14,opt,name=s3" json:"s3,omitempty"`
}

func (m *UpdateSizeRequest) Reset()                    { *m = UpdateSizeRequest{} }
func (m *UpdateSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSizeRequest) ProtoMessage()               {}
func (*UpdateSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *UpdateSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *UpdateSizeRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdateSizeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSizeRequest) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *UpdateSizeRequest) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *UpdateSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdateSizeRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateSizeRequest) GetD4() string {
	if m != nil {
		return m.D4
	}
	return ""
}

func (m *UpdateSizeRequest) GetD3() string {
	if m != nil {
		return m.D3
	}
	return ""
}

func (m *UpdateSizeRequest) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *UpdateSizeRequest) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *UpdateSizeRequest) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *UpdateSizeRequest) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *UpdateSizeRequest) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

type DeleteSizeRequest struct {
	Flange string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSizeRequest) Reset()                    { *m = DeleteSizeRequest{} }
func (m *DeleteSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSizeRequest) ProtoMessage()               {}
func (*DeleteSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *DeleteSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *DeleteSizeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteAllSizeRequest struct {
	Flange string `protobuf:"bytes,1,opt,name=flange" json:"flange,omitempty"`
	TypePr string `protobuf:"bytes,2,opt,name=typePr" json:"typePr,omitempty"`
}

func (m *DeleteAllSizeRequest) Reset()                    { *m = DeleteAllSizeRequest{} }
func (m *DeleteAllSizeRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteAllSizeRequest) ProtoMessage()               {}
func (*DeleteAllSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *DeleteAllSizeRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *DeleteAllSizeRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

type Size struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Dn       string `protobuf:"bytes,2,opt,name=dn" json:"dn,omitempty"`
	Pn       string `protobuf:"bytes,3,opt,name=pn" json:"pn,omitempty"`
	D4       string `protobuf:"bytes,4,opt,name=d4" json:"d4,omitempty"`
	D3       string `protobuf:"bytes,5,opt,name=d3" json:"d3,omitempty"`
	D2       string `protobuf:"bytes,6,opt,name=d2" json:"d2,omitempty"`
	D1       string `protobuf:"bytes,7,opt,name=d1" json:"d1,omitempty"`
	H        string `protobuf:"bytes,8,opt,name=h" json:"h,omitempty"`
	S2       string `protobuf:"bytes,9,opt,name=s2" json:"s2,omitempty"`
	S3       string `protobuf:"bytes,10,opt,name=s3" json:"s3,omitempty"`
	TypePr   string `protobuf:"bytes,11,opt,name=typePr" json:"typePr,omitempty"`
	TypeFlId string `protobuf:"bytes,12,opt,name=typeFlId" json:"typeFlId,omitempty"`
}

func (m *Size) Reset()                    { *m = Size{} }
func (m *Size) String() string            { return proto1.CompactTextString(m) }
func (*Size) ProtoMessage()               {}
func (*Size) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *Size) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Size) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *Size) GetPn() string {
	if m != nil {
		return m.Pn
	}
	return ""
}

func (m *Size) GetD4() string {
	if m != nil {
		return m.D4
	}
	return ""
}

func (m *Size) GetD3() string {
	if m != nil {
		return m.D3
	}
	return ""
}

func (m *Size) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *Size) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *Size) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *Size) GetS2() string {
	if m != nil {
		return m.S2
	}
	return ""
}

func (m *Size) GetS3() string {
	if m != nil {
		return m.S3
	}
	return ""
}

func (m *Size) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *Size) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

type Dn struct {
	Dn string `protobuf:"bytes,1,opt,name=dn" json:"dn,omitempty"`
}

func (m *Dn) Reset()                    { *m = Dn{} }
func (m *Dn) String() string            { return proto1.CompactTextString(m) }
func (*Dn) ProtoMessage()               {}
func (*Dn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *Dn) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

type SizeResponse struct {
	Sizes []*Size `protobuf:"bytes,1,rep,name=sizes" json:"sizes,omitempty"`
	Dn    []*Dn   `protobuf:"bytes,2,rep,name=dn" json:"dn,omitempty"`
}

func (m *SizeResponse) Reset()                    { *m = SizeResponse{} }
func (m *SizeResponse) String() string            { return proto1.CompactTextString(m) }
func (*SizeResponse) ProtoMessage()               {}
func (*SizeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *SizeResponse) GetSizes() []*Size {
	if m != nil {
		return m.Sizes
	}
	return nil
}

func (m *SizeResponse) GetDn() []*Dn {
	if m != nil {
		return m.Dn
	}
	return nil
}

// SNP Service ----------------------------------------------------------------
type Filler struct {
	Id    string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Temps []*Temp `protobuf:"bytes,2,rep,name=temps" json:"temps,omitempty"`
}

func (m *Filler) Reset()                    { *m = Filler{} }
func (m *Filler) String() string            { return proto1.CompactTextString(m) }
func (*Filler) ProtoMessage()               {}
func (*Filler) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *Filler) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Filler) GetTemps() []*Temp {
	if m != nil {
		return m.Temps
	}
	return nil
}

type Temp struct {
	Id   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Mods []string `protobuf:"bytes,2,rep,name=mods" json:"mods,omitempty"`
}

func (m *Temp) Reset()                    { *m = Temp{} }
func (m *Temp) String() string            { return proto1.CompactTextString(m) }
func (*Temp) ProtoMessage()               {}
func (*Temp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *Temp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Temp) GetMods() []string {
	if m != nil {
		return m.Mods
	}
	return nil
}

type SnpMaterials struct {
	Values  []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Default string   `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
}

func (m *SnpMaterials) Reset()                    { *m = SnpMaterials{} }
func (m *SnpMaterials) String() string            { return proto1.CompactTextString(m) }
func (*SnpMaterials) ProtoMessage()               {}
func (*SnpMaterials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *SnpMaterials) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *SnpMaterials) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

type GetSNPRequest struct {
	StandId  string `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetSNPRequest) Reset()                    { *m = GetSNPRequest{} }
func (m *GetSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSNPRequest) ProtoMessage()               {}
func (*GetSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *GetSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *GetSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreateSNPRequest struct {
	StandId  string        `protobuf:"bytes,1,opt,name=standId" json:"standId,omitempty"`
	FlangeId string        `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId string        `protobuf:"bytes,3,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string        `protobuf:"bytes,4,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  []*Filler     `protobuf:"bytes,5,rep,name=fillers" json:"fillers,omitempty"`
	Frame    *SnpMaterials `protobuf:"bytes,6,opt,name=frame" json:"frame,omitempty"`
	Ir       *SnpMaterials `protobuf:"bytes,7,opt,name=ir" json:"ir,omitempty"`
	Or       *SnpMaterials `protobuf:"bytes,8,opt,name=or" json:"or,omitempty"`
	Mounting []string      `protobuf:"bytes,9,rep,name=mounting" json:"mounting,omitempty"`
	Graphite []string      `protobuf:"bytes,10,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *CreateSNPRequest) Reset()                    { *m = CreateSNPRequest{} }
func (m *CreateSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSNPRequest) ProtoMessage()               {}
func (*CreateSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CreateSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *CreateSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreateSNPRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreateSNPRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreateSNPRequest) GetFillers() []*Filler {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *CreateSNPRequest) GetFrame() *SnpMaterials {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *CreateSNPRequest) GetIr() *SnpMaterials {
	if m != nil {
		return m.Ir
	}
	return nil
}

func (m *CreateSNPRequest) GetOr() *SnpMaterials {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *CreateSNPRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *CreateSNPRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type UpdateSNPRequest struct {
	Id       string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StandId  string        `protobuf:"bytes,2,opt,name=standId" json:"standId,omitempty"`
	FlangeId string        `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId string        `protobuf:"bytes,4,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string        `protobuf:"bytes,5,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  []*Filler     `protobuf:"bytes,6,rep,name=fillers" json:"fillers,omitempty"`
	Frame    *SnpMaterials `protobuf:"bytes,7,opt,name=frame" json:"frame,omitempty"`
	Ir       *SnpMaterials `protobuf:"bytes,8,opt,name=ir" json:"ir,omitempty"`
	Or       *SnpMaterials `protobuf:"bytes,9,opt,name=or" json:"or,omitempty"`
	Mounting []string      `protobuf:"bytes,10,rep,name=mounting" json:"mounting,omitempty"`
	Graphite []string      `protobuf:"bytes,11,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *UpdateSNPRequest) Reset()                    { *m = UpdateSNPRequest{} }
func (m *UpdateSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSNPRequest) ProtoMessage()               {}
func (*UpdateSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *UpdateSNPRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSNPRequest) GetStandId() string {
	if m != nil {
		return m.StandId
	}
	return ""
}

func (m *UpdateSNPRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *UpdateSNPRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdateSNPRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdateSNPRequest) GetFillers() []*Filler {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *UpdateSNPRequest) GetFrame() *SnpMaterials {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *UpdateSNPRequest) GetIr() *SnpMaterials {
	if m != nil {
		return m.Ir
	}
	return nil
}

func (m *UpdateSNPRequest) GetOr() *SnpMaterials {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *UpdateSNPRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdateSNPRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type DeleteSNPRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSNPRequest) Reset()                    { *m = DeleteSNPRequest{} }
func (m *DeleteSNPRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSNPRequest) ProtoMessage()               {}
func (*DeleteSNPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *DeleteSNPRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SNP struct {
	Id       string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId string        `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr   string        `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Fillers  []*Filler     `protobuf:"bytes,4,rep,name=fillers" json:"fillers,omitempty"`
	Frame    *SnpMaterials `protobuf:"bytes,5,opt,name=frame" json:"frame,omitempty"`
	Ir       *SnpMaterials `protobuf:"bytes,6,opt,name=ir" json:"ir,omitempty"`
	Or       *SnpMaterials `protobuf:"bytes,7,opt,name=or" json:"or,omitempty"`
	Mounting []string      `protobuf:"bytes,8,rep,name=mounting" json:"mounting,omitempty"`
	Graphite []string      `protobuf:"bytes,9,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *SNP) Reset()                    { *m = SNP{} }
func (m *SNP) String() string            { return proto1.CompactTextString(m) }
func (*SNP) ProtoMessage()               {}
func (*SNP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *SNP) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SNP) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *SNP) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *SNP) GetFillers() []*Filler {
	if m != nil {
		return m.Fillers
	}
	return nil
}

func (m *SNP) GetFrame() *SnpMaterials {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *SNP) GetIr() *SnpMaterials {
	if m != nil {
		return m.Ir
	}
	return nil
}

func (m *SNP) GetOr() *SnpMaterials {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *SNP) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *SNP) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type SNPResponse struct {
	Snp []*SNP `protobuf:"bytes,1,rep,name=snp" json:"snp,omitempty"`
}

func (m *SNPResponse) Reset()                    { *m = SNPResponse{} }
func (m *SNPResponse) String() string            { return proto1.CompactTextString(m) }
func (*SNPResponse) ProtoMessage()               {}
func (*SNPResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *SNPResponse) GetSnp() []*SNP {
	if m != nil {
		return m.Snp
	}
	return nil
}

// PUTG Image Service ----------------------------------------------------------------
type PutgImage struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Form   string `protobuf:"bytes,2,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,3,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *PutgImage) Reset()                    { *m = PutgImage{} }
func (m *PutgImage) String() string            { return proto1.CompactTextString(m) }
func (*PutgImage) ProtoMessage()               {}
func (*PutgImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *PutgImage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutgImage) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *PutgImage) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *PutgImage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetPutgImageRequest struct {
	Form string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
}

func (m *GetPutgImageRequest) Reset()                    { *m = GetPutgImageRequest{} }
func (m *GetPutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPutgImageRequest) ProtoMessage()               {}
func (*GetPutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *GetPutgImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

type CreatePutgImageRequest struct {
	Form   string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,2,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
}

func (m *CreatePutgImageRequest) Reset()                    { *m = CreatePutgImageRequest{} }
func (m *CreatePutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreatePutgImageRequest) ProtoMessage()               {}
func (*CreatePutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *CreatePutgImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *CreatePutgImageRequest) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *CreatePutgImageRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UpdatePutgImageRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Form   string `protobuf:"bytes,2,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,3,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *UpdatePutgImageRequest) Reset()                    { *m = UpdatePutgImageRequest{} }
func (m *UpdatePutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePutgImageRequest) ProtoMessage()               {}
func (*UpdatePutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *UpdatePutgImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePutgImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *UpdatePutgImageRequest) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *UpdatePutgImageRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type DeletePutgImageRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePutgImageRequest) Reset()                    { *m = DeletePutgImageRequest{} }
func (m *DeletePutgImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeletePutgImageRequest) ProtoMessage()               {}
func (*DeletePutgImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *DeletePutgImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PutgImageResponse struct {
	PutgImage []*PutgImage `protobuf:"bytes,1,rep,name=putgImage" json:"putgImage,omitempty"`
}

func (m *PutgImageResponse) Reset()                    { *m = PutgImageResponse{} }
func (m *PutgImageResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutgImageResponse) ProtoMessage()               {}
func (*PutgImageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *PutgImageResponse) GetPutgImage() []*PutgImage {
	if m != nil {
		return m.PutgImage
	}
	return nil
}

// PUTG Service ----------------------------------------------------------------
type PutgTemp struct {
	Grap  string  `protobuf:"bytes,1,opt,name=grap" json:"grap,omitempty"`
	Temps []*Temp `protobuf:"bytes,2,rep,name=temps" json:"temps,omitempty"`
}

func (m *PutgTemp) Reset()                    { *m = PutgTemp{} }
func (m *PutgTemp) String() string            { return proto1.CompactTextString(m) }
func (*PutgTemp) ProtoMessage()               {}
func (*PutgTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *PutgTemp) GetGrap() string {
	if m != nil {
		return m.Grap
	}
	return ""
}

func (m *PutgTemp) GetTemps() []*Temp {
	if m != nil {
		return m.Temps
	}
	return nil
}

type PutgConstructions struct {
	Grap         string     `protobuf:"bytes,1,opt,name=grap" json:"grap,omitempty"`
	Temperatures []*ConTemp `protobuf:"bytes,2,rep,name=temperatures" json:"temperatures,omitempty"`
}

func (m *PutgConstructions) Reset()                    { *m = PutgConstructions{} }
func (m *PutgConstructions) String() string            { return proto1.CompactTextString(m) }
func (*PutgConstructions) ProtoMessage()               {}
func (*PutgConstructions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *PutgConstructions) GetGrap() string {
	if m != nil {
		return m.Grap
	}
	return ""
}

func (m *PutgConstructions) GetTemperatures() []*ConTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

type ConTemp struct {
	Temp          string    `protobuf:"bytes,1,opt,name=temp" json:"temp,omitempty"`
	Constructions []*Constr `protobuf:"bytes,2,rep,name=constructions" json:"constructions,omitempty"`
}

func (m *ConTemp) Reset()                    { *m = ConTemp{} }
func (m *ConTemp) String() string            { return proto1.CompactTextString(m) }
func (*ConTemp) ProtoMessage()               {}
func (*ConTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *ConTemp) GetTemp() string {
	if m != nil {
		return m.Temp
	}
	return ""
}

func (m *ConTemp) GetConstructions() []*Constr {
	if m != nil {
		return m.Constructions
	}
	return nil
}

type Constr struct {
	Short      string     `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	Obturators []*PutgObt `protobuf:"bytes,2,rep,name=obturators" json:"obturators,omitempty"`
}

func (m *Constr) Reset()                    { *m = Constr{} }
func (m *Constr) String() string            { return proto1.CompactTextString(m) }
func (*Constr) ProtoMessage()               {}
func (*Constr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *Constr) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *Constr) GetObturators() []*PutgObt {
	if m != nil {
		return m.Obturators
	}
	return nil
}

type PutgObt struct {
	Short    string `protobuf:"bytes,1,opt,name=short" json:"short,omitempty"`
	ImageUrl string `protobuf:"bytes,2,opt,name=imageUrl" json:"imageUrl,omitempty"`
}

func (m *PutgObt) Reset()                    { *m = PutgObt{} }
func (m *PutgObt) String() string            { return proto1.CompactTextString(m) }
func (*PutgObt) ProtoMessage()               {}
func (*PutgObt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *PutgObt) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *PutgObt) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

type PutgMaterials struct {
	Values     []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Default    string   `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Obturators []string `protobuf:"bytes,3,rep,name=obturators" json:"obturators,omitempty"`
}

func (m *PutgMaterials) Reset()                    { *m = PutgMaterials{} }
func (m *PutgMaterials) String() string            { return proto1.CompactTextString(m) }
func (*PutgMaterials) ProtoMessage()               {}
func (*PutgMaterials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *PutgMaterials) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *PutgMaterials) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *PutgMaterials) GetObturators() []string {
	if m != nil {
		return m.Obturators
	}
	return nil
}

type GetPutgRequest struct {
	Form     string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetPutgRequest) Reset()                    { *m = GetPutgRequest{} }
func (m *GetPutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPutgRequest) ProtoMessage()               {}
func (*GetPutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *GetPutgRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *GetPutgRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreatePutgRequest struct {
	FlangeId     string               `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId     string               `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string               `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string               `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp          `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Reinforce    *PutgMaterials       `protobuf:"bytes,7,opt,name=reinforce" json:"reinforce,omitempty"`
	Obturator    *PutgMaterials       `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	ILimiter     *PutgMaterials       `protobuf:"bytes,9,opt,name=iLimiter" json:"iLimiter,omitempty"`
	OLimiter     *PutgMaterials       `protobuf:"bytes,10,opt,name=oLimiter" json:"oLimiter,omitempty"`
	Coating      []string             `protobuf:"bytes,11,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string             `protobuf:"bytes,12,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string             `protobuf:"bytes,13,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *CreatePutgRequest) Reset()                    { *m = CreatePutgRequest{} }
func (m *CreatePutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreatePutgRequest) ProtoMessage()               {}
func (*CreatePutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *CreatePutgRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreatePutgRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreatePutgRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreatePutgRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *CreatePutgRequest) GetConstruction() []*PutgConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *CreatePutgRequest) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *CreatePutgRequest) GetReinforce() *PutgMaterials {
	if m != nil {
		return m.Reinforce
	}
	return nil
}

func (m *CreatePutgRequest) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *CreatePutgRequest) GetILimiter() *PutgMaterials {
	if m != nil {
		return m.ILimiter
	}
	return nil
}

func (m *CreatePutgRequest) GetOLimiter() *PutgMaterials {
	if m != nil {
		return m.OLimiter
	}
	return nil
}

func (m *CreatePutgRequest) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *CreatePutgRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *CreatePutgRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type UpdatePutgRequest struct {
	Id           string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId     string               `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string               `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string               `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp          `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Reinforce    *PutgMaterials       `protobuf:"bytes,7,opt,name=reinforce" json:"reinforce,omitempty"`
	Obturator    *PutgMaterials       `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	ILimiter     *PutgMaterials       `protobuf:"bytes,9,opt,name=iLimiter" json:"iLimiter,omitempty"`
	OLimiter     *PutgMaterials       `protobuf:"bytes,10,opt,name=oLimiter" json:"oLimiter,omitempty"`
	Coating      []string             `protobuf:"bytes,11,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string             `protobuf:"bytes,12,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string             `protobuf:"bytes,13,rep,name=graphite" json:"graphite,omitempty"`
	FlangeId     string               `protobuf:"bytes,14,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdatePutgRequest) Reset()                    { *m = UpdatePutgRequest{} }
func (m *UpdatePutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePutgRequest) ProtoMessage()               {}
func (*UpdatePutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *UpdatePutgRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePutgRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdatePutgRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdatePutgRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *UpdatePutgRequest) GetConstruction() []*PutgConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *UpdatePutgRequest) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *UpdatePutgRequest) GetReinforce() *PutgMaterials {
	if m != nil {
		return m.Reinforce
	}
	return nil
}

func (m *UpdatePutgRequest) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *UpdatePutgRequest) GetILimiter() *PutgMaterials {
	if m != nil {
		return m.ILimiter
	}
	return nil
}

func (m *UpdatePutgRequest) GetOLimiter() *PutgMaterials {
	if m != nil {
		return m.OLimiter
	}
	return nil
}

func (m *UpdatePutgRequest) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *UpdatePutgRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdatePutgRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *UpdatePutgRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeletePutgRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePutgRequest) Reset()                    { *m = DeletePutgRequest{} }
func (m *DeletePutgRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeletePutgRequest) ProtoMessage()               {}
func (*DeletePutgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *DeletePutgRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Putg struct {
	Id           string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId     string               `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string               `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string               `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp          `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Reinforce    *PutgMaterials       `protobuf:"bytes,7,opt,name=reinforce" json:"reinforce,omitempty"`
	Obturator    *PutgMaterials       `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	ILimiter     *PutgMaterials       `protobuf:"bytes,9,opt,name=iLimiter" json:"iLimiter,omitempty"`
	OLimiter     *PutgMaterials       `protobuf:"bytes,10,opt,name=oLimiter" json:"oLimiter,omitempty"`
	Coating      []string             `protobuf:"bytes,11,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string             `protobuf:"bytes,12,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string             `protobuf:"bytes,13,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *Putg) Reset()                    { *m = Putg{} }
func (m *Putg) String() string            { return proto1.CompactTextString(m) }
func (*Putg) ProtoMessage()               {}
func (*Putg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *Putg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Putg) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *Putg) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *Putg) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *Putg) GetConstruction() []*PutgConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *Putg) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *Putg) GetReinforce() *PutgMaterials {
	if m != nil {
		return m.Reinforce
	}
	return nil
}

func (m *Putg) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *Putg) GetILimiter() *PutgMaterials {
	if m != nil {
		return m.ILimiter
	}
	return nil
}

func (m *Putg) GetOLimiter() *PutgMaterials {
	if m != nil {
		return m.OLimiter
	}
	return nil
}

func (m *Putg) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *Putg) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *Putg) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type PutgResponse struct {
	Putg []*Putg `protobuf:"bytes,1,rep,name=putg" json:"putg,omitempty"`
}

func (m *PutgResponse) Reset()                    { *m = PutgResponse{} }
func (m *PutgResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutgResponse) ProtoMessage()               {}
func (*PutgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *PutgResponse) GetPutg() []*Putg {
	if m != nil {
		return m.Putg
	}
	return nil
}

// PUTGm Image Service ----------------------------------------------------------------
type PutgmImage struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Form   string `protobuf:"bytes,2,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,3,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *PutgmImage) Reset()                    { *m = PutgmImage{} }
func (m *PutgmImage) String() string            { return proto1.CompactTextString(m) }
func (*PutgmImage) ProtoMessage()               {}
func (*PutgmImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *PutgmImage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutgmImage) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *PutgmImage) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *PutgmImage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetPutgmImageRequest struct {
	Form string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
}

func (m *GetPutgmImageRequest) Reset()                    { *m = GetPutgmImageRequest{} }
func (m *GetPutgmImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPutgmImageRequest) ProtoMessage()               {}
func (*GetPutgmImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *GetPutgmImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

type CreatePutgmImageRequest struct {
	Form   string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,2,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
}

func (m *CreatePutgmImageRequest) Reset()                    { *m = CreatePutgmImageRequest{} }
func (m *CreatePutgmImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreatePutgmImageRequest) ProtoMessage()               {}
func (*CreatePutgmImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *CreatePutgmImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *CreatePutgmImageRequest) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *CreatePutgmImageRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UpdatePutgmImageRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Form   string `protobuf:"bytes,2,opt,name=form" json:"form,omitempty"`
	Gasket string `protobuf:"bytes,3,opt,name=gasket" json:"gasket,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *UpdatePutgmImageRequest) Reset()                    { *m = UpdatePutgmImageRequest{} }
func (m *UpdatePutgmImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePutgmImageRequest) ProtoMessage()               {}
func (*UpdatePutgmImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *UpdatePutgmImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePutgmImageRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *UpdatePutgmImageRequest) GetGasket() string {
	if m != nil {
		return m.Gasket
	}
	return ""
}

func (m *UpdatePutgmImageRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type DeletePutgmImageRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePutgmImageRequest) Reset()                    { *m = DeletePutgmImageRequest{} }
func (m *DeletePutgmImageRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeletePutgmImageRequest) ProtoMessage()               {}
func (*DeletePutgmImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *DeletePutgmImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PutgmImageResponse struct {
	PutgmImage []*PutgmImage `protobuf:"bytes,1,rep,name=putgmImage" json:"putgmImage,omitempty"`
}

func (m *PutgmImageResponse) Reset()                    { *m = PutgmImageResponse{} }
func (m *PutgmImageResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutgmImageResponse) ProtoMessage()               {}
func (*PutgmImageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *PutgmImageResponse) GetPutgmImage() []*PutgmImage {
	if m != nil {
		return m.PutgmImage
	}
	return nil
}

// PUTGm Service ----------------------------------------------------------------
type PutgmConstructions struct {
	Grap  string         `protobuf:"bytes,1,opt,name=grap" json:"grap,omitempty"`
	Basis []*PutgmConstr `protobuf:"bytes,2,rep,name=basis" json:"basis,omitempty"`
}

func (m *PutgmConstructions) Reset()                    { *m = PutgmConstructions{} }
func (m *PutgmConstructions) String() string            { return proto1.CompactTextString(m) }
func (*PutgmConstructions) ProtoMessage()               {}
func (*PutgmConstructions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *PutgmConstructions) GetGrap() string {
	if m != nil {
		return m.Grap
	}
	return ""
}

func (m *PutgmConstructions) GetBasis() []*PutgmConstr {
	if m != nil {
		return m.Basis
	}
	return nil
}

type PutgmConstr struct {
	Basis     string      `protobuf:"bytes,1,opt,name=basis" json:"basis,omitempty"`
	Obturator []*PutgmObt `protobuf:"bytes,2,rep,name=obturator" json:"obturator,omitempty"`
}

func (m *PutgmConstr) Reset()                    { *m = PutgmConstr{} }
func (m *PutgmConstr) String() string            { return proto1.CompactTextString(m) }
func (*PutgmConstr) ProtoMessage()               {}
func (*PutgmConstr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *PutgmConstr) GetBasis() string {
	if m != nil {
		return m.Basis
	}
	return ""
}

func (m *PutgmConstr) GetObturator() []*PutgmObt {
	if m != nil {
		return m.Obturator
	}
	return nil
}

type PutgmObt struct {
	Obturator string       `protobuf:"bytes,1,opt,name=obturator" json:"obturator,omitempty"`
	Sealant   []*PutgmSeal `protobuf:"bytes,2,rep,name=sealant" json:"sealant,omitempty"`
}

func (m *PutgmObt) Reset()                    { *m = PutgmObt{} }
func (m *PutgmObt) String() string            { return proto1.CompactTextString(m) }
func (*PutgmObt) ProtoMessage()               {}
func (*PutgmObt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *PutgmObt) GetObturator() string {
	if m != nil {
		return m.Obturator
	}
	return ""
}

func (m *PutgmObt) GetSealant() []*PutgmSeal {
	if m != nil {
		return m.Sealant
	}
	return nil
}

type PutgmSeal struct {
	Seal     string `protobuf:"bytes,1,opt,name=seal" json:"seal,omitempty"`
	ImageUrl string `protobuf:"bytes,2,opt,name=imageUrl" json:"imageUrl,omitempty"`
}

func (m *PutgmSeal) Reset()                    { *m = PutgmSeal{} }
func (m *PutgmSeal) String() string            { return proto1.CompactTextString(m) }
func (*PutgmSeal) ProtoMessage()               {}
func (*PutgmSeal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *PutgmSeal) GetSeal() string {
	if m != nil {
		return m.Seal
	}
	return ""
}

func (m *PutgmSeal) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

type GetPutgmRequest struct {
	Form     string `protobuf:"bytes,1,opt,name=form" json:"form,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetPutgmRequest) Reset()                    { *m = GetPutgmRequest{} }
func (m *GetPutgmRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPutgmRequest) ProtoMessage()               {}
func (*GetPutgmRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *GetPutgmRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *GetPutgmRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreatePutgmRequest struct {
	FlangeId     string                `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFlId     string                `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string                `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string                `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgmConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp           `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Basis        *PutgMaterials        `protobuf:"bytes,7,opt,name=basis" json:"basis,omitempty"`
	Obturator    *PutgMaterials        `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	Coating      []string              `protobuf:"bytes,9,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string              `protobuf:"bytes,10,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string              `protobuf:"bytes,11,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *CreatePutgmRequest) Reset()                    { *m = CreatePutgmRequest{} }
func (m *CreatePutgmRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreatePutgmRequest) ProtoMessage()               {}
func (*CreatePutgmRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *CreatePutgmRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreatePutgmRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *CreatePutgmRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *CreatePutgmRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *CreatePutgmRequest) GetConstruction() []*PutgmConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *CreatePutgmRequest) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *CreatePutgmRequest) GetBasis() *PutgMaterials {
	if m != nil {
		return m.Basis
	}
	return nil
}

func (m *CreatePutgmRequest) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *CreatePutgmRequest) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *CreatePutgmRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *CreatePutgmRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type UpdatePutgmRequest struct {
	Id           string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId     string                `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string                `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string                `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgmConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp           `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Basis        *PutgMaterials        `protobuf:"bytes,7,opt,name=basis" json:"basis,omitempty"`
	Obturator    *PutgMaterials        `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	Coating      []string              `protobuf:"bytes,9,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string              `protobuf:"bytes,10,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string              `protobuf:"bytes,11,rep,name=graphite" json:"graphite,omitempty"`
	FlangeId     string                `protobuf:"bytes,12,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdatePutgmRequest) Reset()                    { *m = UpdatePutgmRequest{} }
func (m *UpdatePutgmRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePutgmRequest) ProtoMessage()               {}
func (*UpdatePutgmRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *UpdatePutgmRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePutgmRequest) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *UpdatePutgmRequest) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *UpdatePutgmRequest) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *UpdatePutgmRequest) GetConstruction() []*PutgmConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *UpdatePutgmRequest) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *UpdatePutgmRequest) GetBasis() *PutgMaterials {
	if m != nil {
		return m.Basis
	}
	return nil
}

func (m *UpdatePutgmRequest) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *UpdatePutgmRequest) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *UpdatePutgmRequest) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *UpdatePutgmRequest) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

func (m *UpdatePutgmRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeletePutgmRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePutgmRequest) Reset()                    { *m = DeletePutgmRequest{} }
func (m *DeletePutgmRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeletePutgmRequest) ProtoMessage()               {}
func (*DeletePutgmRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *DeletePutgmRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Putgm struct {
	Id           string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeFlId     string                `protobuf:"bytes,2,opt,name=typeFlId" json:"typeFlId,omitempty"`
	TypePr       string                `protobuf:"bytes,3,opt,name=typePr" json:"typePr,omitempty"`
	Form         string                `protobuf:"bytes,4,opt,name=form" json:"form,omitempty"`
	Construction []*PutgmConstructions `protobuf:"bytes,5,rep,name=construction" json:"construction,omitempty"`
	Temperatures []*PutgTemp           `protobuf:"bytes,6,rep,name=temperatures" json:"temperatures,omitempty"`
	Basis        *PutgMaterials        `protobuf:"bytes,7,opt,name=basis" json:"basis,omitempty"`
	Obturator    *PutgMaterials        `protobuf:"bytes,8,opt,name=obturator" json:"obturator,omitempty"`
	Coating      []string              `protobuf:"bytes,9,rep,name=coating" json:"coating,omitempty"`
	Mounting     []string              `protobuf:"bytes,10,rep,name=mounting" json:"mounting,omitempty"`
	Graphite     []string              `protobuf:"bytes,11,rep,name=graphite" json:"graphite,omitempty"`
}

func (m *Putgm) Reset()                    { *m = Putgm{} }
func (m *Putgm) String() string            { return proto1.CompactTextString(m) }
func (*Putgm) ProtoMessage()               {}
func (*Putgm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *Putgm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Putgm) GetTypeFlId() string {
	if m != nil {
		return m.TypeFlId
	}
	return ""
}

func (m *Putgm) GetTypePr() string {
	if m != nil {
		return m.TypePr
	}
	return ""
}

func (m *Putgm) GetForm() string {
	if m != nil {
		return m.Form
	}
	return ""
}

func (m *Putgm) GetConstruction() []*PutgmConstructions {
	if m != nil {
		return m.Construction
	}
	return nil
}

func (m *Putgm) GetTemperatures() []*PutgTemp {
	if m != nil {
		return m.Temperatures
	}
	return nil
}

func (m *Putgm) GetBasis() *PutgMaterials {
	if m != nil {
		return m.Basis
	}
	return nil
}

func (m *Putgm) GetObturator() *PutgMaterials {
	if m != nil {
		return m.Obturator
	}
	return nil
}

func (m *Putgm) GetCoating() []string {
	if m != nil {
		return m.Coating
	}
	return nil
}

func (m *Putgm) GetMounting() []string {
	if m != nil {
		return m.Mounting
	}
	return nil
}

func (m *Putgm) GetGraphite() []string {
	if m != nil {
		return m.Graphite
	}
	return nil
}

type PutgmResponse struct {
	Putgm []*Putgm `protobuf:"bytes,1,rep,name=putgm" json:"putgm,omitempty"`
}

func (m *PutgmResponse) Reset()                    { *m = PutgmResponse{} }
func (m *PutgmResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutgmResponse) ProtoMessage()               {}
func (*PutgmResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *PutgmResponse) GetPutgm() []*Putgm {
	if m != nil {
		return m.Putgm
	}
	return nil
}

// Materials
type GetMaterialsRequest struct {
}

func (m *GetMaterialsRequest) Reset()                    { *m = GetMaterialsRequest{} }
func (m *GetMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetMaterialsRequest) ProtoMessage()               {}
func (*GetMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

type CreateMaterialsRequest struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	TypeMat string `protobuf:"bytes,2,opt,name=typeMat" json:"typeMat,omitempty"`
}

func (m *CreateMaterialsRequest) Reset()                    { *m = CreateMaterialsRequest{} }
func (m *CreateMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateMaterialsRequest) ProtoMessage()               {}
func (*CreateMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *CreateMaterialsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateMaterialsRequest) GetTypeMat() string {
	if m != nil {
		return m.TypeMat
	}
	return ""
}

type UpdateMaterialsRequest struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	TypeMat string `protobuf:"bytes,3,opt,name=typeMat" json:"typeMat,omitempty"`
}

func (m *UpdateMaterialsRequest) Reset()                    { *m = UpdateMaterialsRequest{} }
func (m *UpdateMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateMaterialsRequest) ProtoMessage()               {}
func (*UpdateMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *UpdateMaterialsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateMaterialsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateMaterialsRequest) GetTypeMat() string {
	if m != nil {
		return m.TypeMat
	}
	return ""
}

type DeleteMaterialsRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteMaterialsRequest) Reset()                    { *m = DeleteMaterialsRequest{} }
func (m *DeleteMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteMaterialsRequest) ProtoMessage()               {}
func (*DeleteMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *DeleteMaterialsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Materials struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	TypeMat string `protobuf:"bytes,3,opt,name=typeMat" json:"typeMat,omitempty"`
}

func (m *Materials) Reset()                    { *m = Materials{} }
func (m *Materials) String() string            { return proto1.CompactTextString(m) }
func (*Materials) ProtoMessage()               {}
func (*Materials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *Materials) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Materials) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Materials) GetTypeMat() string {
	if m != nil {
		return m.TypeMat
	}
	return ""
}

type MaterialsResponse struct {
	Materials []*Materials `protobuf:"bytes,1,rep,name=materials" json:"materials,omitempty"`
}

func (m *MaterialsResponse) Reset()                    { *m = MaterialsResponse{} }
func (m *MaterialsResponse) String() string            { return proto1.CompactTextString(m) }
func (*MaterialsResponse) ProtoMessage()               {}
func (*MaterialsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *MaterialsResponse) GetMaterials() []*Materials {
	if m != nil {
		return m.Materials
	}
	return nil
}

// Bolt Materials
type GetBoltMaterialsRequest struct {
	FlangeId string `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *GetBoltMaterialsRequest) Reset()                    { *m = GetBoltMaterialsRequest{} }
func (m *GetBoltMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetBoltMaterialsRequest) ProtoMessage()               {}
func (*GetBoltMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *GetBoltMaterialsRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type CreateBoltMaterialsRequest struct {
	Title    string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	FlangeId string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *CreateBoltMaterialsRequest) Reset()                    { *m = CreateBoltMaterialsRequest{} }
func (m *CreateBoltMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateBoltMaterialsRequest) ProtoMessage()               {}
func (*CreateBoltMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *CreateBoltMaterialsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateBoltMaterialsRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type UpdateBoltMaterialsRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	FlangeId string `protobuf:"bytes,3,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *UpdateBoltMaterialsRequest) Reset()                    { *m = UpdateBoltMaterialsRequest{} }
func (m *UpdateBoltMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateBoltMaterialsRequest) ProtoMessage()               {}
func (*UpdateBoltMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *UpdateBoltMaterialsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateBoltMaterialsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateBoltMaterialsRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type DeleteBoltMaterialsRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteBoltMaterialsRequest) Reset()                    { *m = DeleteBoltMaterialsRequest{} }
func (m *DeleteBoltMaterialsRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteBoltMaterialsRequest) ProtoMessage()               {}
func (*DeleteBoltMaterialsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *DeleteBoltMaterialsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BoltMaterials struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *BoltMaterials) Reset()                    { *m = BoltMaterials{} }
func (m *BoltMaterials) String() string            { return proto1.CompactTextString(m) }
func (*BoltMaterials) ProtoMessage()               {}
func (*BoltMaterials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *BoltMaterials) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BoltMaterials) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type BoltMaterialsResponse struct {
	Materials []*BoltMaterials `protobuf:"bytes,1,rep,name=materials" json:"materials,omitempty"`
}

func (m *BoltMaterialsResponse) Reset()                    { *m = BoltMaterialsResponse{} }
func (m *BoltMaterialsResponse) String() string            { return proto1.CompactTextString(m) }
func (*BoltMaterialsResponse) ProtoMessage()               {}
func (*BoltMaterialsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *BoltMaterialsResponse) GetMaterials() []*BoltMaterials {
	if m != nil {
		return m.Materials
	}
	return nil
}

// Size
type GetSizesIntRequest struct {
	FlangeId string `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFl   string `protobuf:"bytes,2,opt,name=typeFl" json:"typeFl,omitempty"`
	Row      int32  `protobuf:"varint,3,opt,name=row" json:"row,omitempty"`
}

func (m *GetSizesIntRequest) Reset()                    { *m = GetSizesIntRequest{} }
func (m *GetSizesIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSizesIntRequest) ProtoMessage()               {}
func (*GetSizesIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *GetSizesIntRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *GetSizesIntRequest) GetTypeFl() string {
	if m != nil {
		return m.TypeFl
	}
	return ""
}

func (m *GetSizesIntRequest) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

type GetAllSizeIntRequest struct {
	FlangeId string `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFl   string `protobuf:"bytes,2,opt,name=typeFl" json:"typeFl,omitempty"`
}

func (m *GetAllSizeIntRequest) Reset()                    { *m = GetAllSizeIntRequest{} }
func (m *GetAllSizeIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllSizeIntRequest) ProtoMessage()               {}
func (*GetAllSizeIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *GetAllSizeIntRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *GetAllSizeIntRequest) GetTypeFl() string {
	if m != nil {
		return m.TypeFl
	}
	return ""
}

type CreateSizeIntRequest struct {
	FlangeId  string `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFl    string `protobuf:"bytes,2,opt,name=typeFl" json:"typeFl,omitempty"`
	Dy        string `protobuf:"bytes,3,opt,name=dy" json:"dy,omitempty"`
	Py        string `protobuf:"bytes,4,opt,name=py" json:"py,omitempty"`
	D1        string `protobuf:"bytes,5,opt,name=d1" json:"d1,omitempty"`
	D2        string `protobuf:"bytes,6,opt,name=d2" json:"d2,omitempty"`
	D         string `protobuf:"bytes,7,opt,name=d" json:"d,omitempty"`
	DUp       string `protobuf:"bytes,8,opt,name=dUp" json:"dUp,omitempty"`
	H1        string `protobuf:"bytes,9,opt,name=h1" json:"h1,omitempty"`
	H2        string `protobuf:"bytes,10,opt,name=h2" json:"h2,omitempty"`
	Bolt      string `protobuf:"bytes,11,opt,name=bolt" json:"bolt,omitempty"`
	CountBolt int32  `protobuf:"varint,12,opt,name=countBolt" json:"countBolt,omitempty"`
	Number    int32  `protobuf:"varint,13,opt,name=number" json:"number,omitempty"`
	Row       int32  `protobuf:"varint,14,opt,name=row" json:"row,omitempty"`
}

func (m *CreateSizeIntRequest) Reset()                    { *m = CreateSizeIntRequest{} }
func (m *CreateSizeIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSizeIntRequest) ProtoMessage()               {}
func (*CreateSizeIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *CreateSizeIntRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *CreateSizeIntRequest) GetTypeFl() string {
	if m != nil {
		return m.TypeFl
	}
	return ""
}

func (m *CreateSizeIntRequest) GetDy() string {
	if m != nil {
		return m.Dy
	}
	return ""
}

func (m *CreateSizeIntRequest) GetPy() string {
	if m != nil {
		return m.Py
	}
	return ""
}

func (m *CreateSizeIntRequest) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *CreateSizeIntRequest) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *CreateSizeIntRequest) GetD() string {
	if m != nil {
		return m.D
	}
	return ""
}

func (m *CreateSizeIntRequest) GetDUp() string {
	if m != nil {
		return m.DUp
	}
	return ""
}

func (m *CreateSizeIntRequest) GetH1() string {
	if m != nil {
		return m.H1
	}
	return ""
}

func (m *CreateSizeIntRequest) GetH2() string {
	if m != nil {
		return m.H2
	}
	return ""
}

func (m *CreateSizeIntRequest) GetBolt() string {
	if m != nil {
		return m.Bolt
	}
	return ""
}

func (m *CreateSizeIntRequest) GetCountBolt() int32 {
	if m != nil {
		return m.CountBolt
	}
	return 0
}

func (m *CreateSizeIntRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *CreateSizeIntRequest) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

type CreateSizesIntRequest struct {
	Sizes []*CreateSizeIntRequest `protobuf:"bytes,1,rep,name=sizes" json:"sizes,omitempty"`
}

func (m *CreateSizesIntRequest) Reset()                    { *m = CreateSizesIntRequest{} }
func (m *CreateSizesIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateSizesIntRequest) ProtoMessage()               {}
func (*CreateSizesIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *CreateSizesIntRequest) GetSizes() []*CreateSizeIntRequest {
	if m != nil {
		return m.Sizes
	}
	return nil
}

type UpdateSizeIntRequest struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FlangeId  string `protobuf:"bytes,2,opt,name=flangeId" json:"flangeId,omitempty"`
	TypeFl    string `protobuf:"bytes,3,opt,name=typeFl" json:"typeFl,omitempty"`
	Dy        string `protobuf:"bytes,4,opt,name=dy" json:"dy,omitempty"`
	Py        string `protobuf:"bytes,5,opt,name=py" json:"py,omitempty"`
	D1        string `protobuf:"bytes,6,opt,name=d1" json:"d1,omitempty"`
	D2        string `protobuf:"bytes,7,opt,name=d2" json:"d2,omitempty"`
	DUp       string `protobuf:"bytes,8,opt,name=dUp" json:"dUp,omitempty"`
	D         string `protobuf:"bytes,9,opt,name=d" json:"d,omitempty"`
	H1        string `protobuf:"bytes,10,opt,name=h1" json:"h1,omitempty"`
	H2        string `protobuf:"bytes,11,opt,name=h2" json:"h2,omitempty"`
	Bolt      string `protobuf:"bytes,12,opt,name=bolt" json:"bolt,omitempty"`
	CountBolt int32  `protobuf:"varint,13,opt,name=countBolt" json:"countBolt,omitempty"`
	Row       int32  `protobuf:"varint,14,opt,name=row" json:"row,omitempty"`
}

func (m *UpdateSizeIntRequest) Reset()                    { *m = UpdateSizeIntRequest{} }
func (m *UpdateSizeIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateSizeIntRequest) ProtoMessage()               {}
func (*UpdateSizeIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *UpdateSizeIntRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetTypeFl() string {
	if m != nil {
		return m.TypeFl
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetDy() string {
	if m != nil {
		return m.Dy
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetPy() string {
	if m != nil {
		return m.Py
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetDUp() string {
	if m != nil {
		return m.DUp
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetD() string {
	if m != nil {
		return m.D
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetH1() string {
	if m != nil {
		return m.H1
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetH2() string {
	if m != nil {
		return m.H2
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetBolt() string {
	if m != nil {
		return m.Bolt
	}
	return ""
}

func (m *UpdateSizeIntRequest) GetCountBolt() int32 {
	if m != nil {
		return m.CountBolt
	}
	return 0
}

func (m *UpdateSizeIntRequest) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

type DeleteSizeIntRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSizeIntRequest) Reset()                    { *m = DeleteSizeIntRequest{} }
func (m *DeleteSizeIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSizeIntRequest) ProtoMessage()               {}
func (*DeleteSizeIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *DeleteSizeIntRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteAllSizeIntRequest struct {
	FlangeId string `protobuf:"bytes,1,opt,name=flangeId" json:"flangeId,omitempty"`
}

func (m *DeleteAllSizeIntRequest) Reset()                    { *m = DeleteAllSizeIntRequest{} }
func (m *DeleteAllSizeIntRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteAllSizeIntRequest) ProtoMessage()               {}
func (*DeleteAllSizeIntRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *DeleteAllSizeIntRequest) GetFlangeId() string {
	if m != nil {
		return m.FlangeId
	}
	return ""
}

type SizeInt struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Dy        string `protobuf:"bytes,2,opt,name=dy" json:"dy,omitempty"`
	Py        string `protobuf:"bytes,3,opt,name=py" json:"py,omitempty"`
	DUp       string `protobuf:"bytes,4,opt,name=dUp" json:"dUp,omitempty"`
	D1        string `protobuf:"bytes,5,opt,name=d1" json:"d1,omitempty"`
	D2        string `protobuf:"bytes,6,opt,name=d2" json:"d2,omitempty"`
	D         string `protobuf:"bytes,7,opt,name=d" json:"d,omitempty"`
	H1        string `protobuf:"bytes,8,opt,name=h1" json:"h1,omitempty"`
	H2        string `protobuf:"bytes,9,opt,name=h2" json:"h2,omitempty"`
	Bolt      string `protobuf:"bytes,10,opt,name=bolt" json:"bolt,omitempty"`
	CountBolt int32  `protobuf:"varint,11,opt,name=countBolt" json:"countBolt,omitempty"`
	Row       int32  `protobuf:"varint,12,opt,name=row" json:"row,omitempty"`
}

func (m *SizeInt) Reset()                    { *m = SizeInt{} }
func (m *SizeInt) String() string            { return proto1.CompactTextString(m) }
func (*SizeInt) ProtoMessage()               {}
func (*SizeInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *SizeInt) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SizeInt) GetDy() string {
	if m != nil {
		return m.Dy
	}
	return ""
}

func (m *SizeInt) GetPy() string {
	if m != nil {
		return m.Py
	}
	return ""
}

func (m *SizeInt) GetDUp() string {
	if m != nil {
		return m.DUp
	}
	return ""
}

func (m *SizeInt) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *SizeInt) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *SizeInt) GetD() string {
	if m != nil {
		return m.D
	}
	return ""
}

func (m *SizeInt) GetH1() string {
	if m != nil {
		return m.H1
	}
	return ""
}

func (m *SizeInt) GetH2() string {
	if m != nil {
		return m.H2
	}
	return ""
}

func (m *SizeInt) GetBolt() string {
	if m != nil {
		return m.Bolt
	}
	return ""
}

func (m *SizeInt) GetCountBolt() int32 {
	if m != nil {
		return m.CountBolt
	}
	return 0
}

func (m *SizeInt) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

type SizeIntResponse struct {
	Sizes []*SizeInt `protobuf:"bytes,1,rep,name=sizes" json:"sizes,omitempty"`
	Dn    []*Dn      `protobuf:"bytes,2,rep,name=dn" json:"dn,omitempty"`
}

func (m *SizeIntResponse) Reset()                    { *m = SizeIntResponse{} }
func (m *SizeIntResponse) String() string            { return proto1.CompactTextString(m) }
func (*SizeIntResponse) ProtoMessage()               {}
func (*SizeIntResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *SizeIntResponse) GetSizes() []*SizeInt {
	if m != nil {
		return m.Sizes
	}
	return nil
}

func (m *SizeIntResponse) GetDn() []*Dn {
	if m != nil {
		return m.Dn
	}
	return nil
}

// Interview
type SendInterviewRequest struct {
	Organization  string    `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name          string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email         string    `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	City          string    `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	Position      string    `protobuf:"bytes,5,opt,name=position" json:"position,omitempty"`
	Phone         string    `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Techprocess   string    `protobuf:"bytes,7,opt,name=techprocess" json:"techprocess,omitempty"`
	Equipment     string    `protobuf:"bytes,8,opt,name=equipment" json:"equipment,omitempty"`
	Seal          string    `protobuf:"bytes,9,opt,name=seal" json:"seal,omitempty"`
	Consumer      string    `protobuf:"bytes,10,opt,name=consumer" json:"consumer,omitempty"`
	Factory       string    `protobuf:"bytes,11,opt,name=factory" json:"factory,omitempty"`
	Developer     string    `protobuf:"bytes,12,opt,name=developer" json:"developer,omitempty"`
	Flange        string    `protobuf:"bytes,13,opt,name=flange" json:"flange,omitempty"`
	TypeFl        string    `protobuf:"bytes,14,opt,name=typeFl" json:"typeFl,omitempty"`
	Type          string    `protobuf:"bytes,15,opt,name=type" json:"type,omitempty"`
	DiffFrom      string    `protobuf:"bytes,16,opt,name=diffFrom" json:"diffFrom,omitempty"`
	DiffTo        string    `protobuf:"bytes,17,opt,name=diffTo" json:"diffTo,omitempty"`
	PresWork      string    `protobuf:"bytes,18,opt,name=presWork" json:"presWork,omitempty"`
	PresTest      string    `protobuf:"bytes,19,opt,name=presTest" json:"presTest,omitempty"`
	Pressure      string    `protobuf:"bytes,20,opt,name=pressure" json:"pressure,omitempty"`
	Environ       string    `protobuf:"bytes,21,opt,name=environ" json:"environ,omitempty"`
	TempWorkPipe  string    `protobuf:"bytes,22,opt,name=tempWorkPipe" json:"tempWorkPipe,omitempty"`
	PresWorkPipe  string    `protobuf:"bytes,23,opt,name=presWorkPipe" json:"presWorkPipe,omitempty"`
	EnvironPipe   string    `protobuf:"bytes,24,opt,name=environPipe" json:"environPipe,omitempty"`
	TempWorkAnn   string    `protobuf:"bytes,25,opt,name=tempWorkAnn" json:"tempWorkAnn,omitempty"`
	PresWorkAnn   string    `protobuf:"bytes,26,opt,name=presWorkAnn" json:"presWorkAnn,omitempty"`
	EnvironAnn    string    `protobuf:"bytes,27,opt,name=environAnn" json:"environAnn,omitempty"`
	Material      string    `protobuf:"bytes,28,opt,name=material" json:"material,omitempty"`
	BoltMaterial  string    `protobuf:"bytes,29,opt,name=boltMaterial" json:"boltMaterial,omitempty"`
	Lubricant     bool      `protobuf:"varint,30,opt,name=lubricant" json:"lubricant,omitempty"`
	Along         string    `protobuf:"bytes,31,opt,name=along" json:"along,omitempty"`
	Across        string    `protobuf:"bytes,32,opt,name=across" json:"across,omitempty"`
	NonFlatness   string    `protobuf:"bytes,33,opt,name=nonFlatness" json:"nonFlatness,omitempty"`
	Mounting      bool      `protobuf:"varint,34,opt,name=mounting" json:"mounting,omitempty"`
	Condition     string    `protobuf:"bytes,35,opt,name=condition" json:"condition,omitempty"`
	Period        string    `protobuf:"bytes,36,opt,name=period" json:"period,omitempty"`
	Abrasive      bool      `protobuf:"varint,37,opt,name=abrasive" json:"abrasive,omitempty"`
	Crystallized  bool      `protobuf:"varint,38,opt,name=crystallized" json:"crystallized,omitempty"`
	Penetrating   bool      `protobuf:"varint,39,opt,name=penetrating" json:"penetrating,omitempty"`
	DrawingNumber string    `protobuf:"bytes,40,opt,name=drawingNumber" json:"drawingNumber,omitempty"`
	Info          string    `protobuf:"bytes,41,opt,name=info" json:"info,omitempty"`
	Drawing       *Drawing  `protobuf:"bytes,42,opt,name=drawing" json:"drawing,omitempty"`
	Sizes         *SizesInt `protobuf:"bytes,43,opt,name=sizes" json:"sizes,omitempty"`
}

func (m *SendInterviewRequest) Reset()                    { *m = SendInterviewRequest{} }
func (m *SendInterviewRequest) String() string            { return proto1.CompactTextString(m) }
func (*SendInterviewRequest) ProtoMessage()               {}
func (*SendInterviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *SendInterviewRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *SendInterviewRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SendInterviewRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SendInterviewRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *SendInterviewRequest) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *SendInterviewRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SendInterviewRequest) GetTechprocess() string {
	if m != nil {
		return m.Techprocess
	}
	return ""
}

func (m *SendInterviewRequest) GetEquipment() string {
	if m != nil {
		return m.Equipment
	}
	return ""
}

func (m *SendInterviewRequest) GetSeal() string {
	if m != nil {
		return m.Seal
	}
	return ""
}

func (m *SendInterviewRequest) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *SendInterviewRequest) GetFactory() string {
	if m != nil {
		return m.Factory
	}
	return ""
}

func (m *SendInterviewRequest) GetDeveloper() string {
	if m != nil {
		return m.Developer
	}
	return ""
}

func (m *SendInterviewRequest) GetFlange() string {
	if m != nil {
		return m.Flange
	}
	return ""
}

func (m *SendInterviewRequest) GetTypeFl() string {
	if m != nil {
		return m.TypeFl
	}
	return ""
}

func (m *SendInterviewRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SendInterviewRequest) GetDiffFrom() string {
	if m != nil {
		return m.DiffFrom
	}
	return ""
}

func (m *SendInterviewRequest) GetDiffTo() string {
	if m != nil {
		return m.DiffTo
	}
	return ""
}

func (m *SendInterviewRequest) GetPresWork() string {
	if m != nil {
		return m.PresWork
	}
	return ""
}

func (m *SendInterviewRequest) GetPresTest() string {
	if m != nil {
		return m.PresTest
	}
	return ""
}

func (m *SendInterviewRequest) GetPressure() string {
	if m != nil {
		return m.Pressure
	}
	return ""
}

func (m *SendInterviewRequest) GetEnviron() string {
	if m != nil {
		return m.Environ
	}
	return ""
}

func (m *SendInterviewRequest) GetTempWorkPipe() string {
	if m != nil {
		return m.TempWorkPipe
	}
	return ""
}

func (m *SendInterviewRequest) GetPresWorkPipe() string {
	if m != nil {
		return m.PresWorkPipe
	}
	return ""
}

func (m *SendInterviewRequest) GetEnvironPipe() string {
	if m != nil {
		return m.EnvironPipe
	}
	return ""
}

func (m *SendInterviewRequest) GetTempWorkAnn() string {
	if m != nil {
		return m.TempWorkAnn
	}
	return ""
}

func (m *SendInterviewRequest) GetPresWorkAnn() string {
	if m != nil {
		return m.PresWorkAnn
	}
	return ""
}

func (m *SendInterviewRequest) GetEnvironAnn() string {
	if m != nil {
		return m.EnvironAnn
	}
	return ""
}

func (m *SendInterviewRequest) GetMaterial() string {
	if m != nil {
		return m.Material
	}
	return ""
}

func (m *SendInterviewRequest) GetBoltMaterial() string {
	if m != nil {
		return m.BoltMaterial
	}
	return ""
}

func (m *SendInterviewRequest) GetLubricant() bool {
	if m != nil {
		return m.Lubricant
	}
	return false
}

func (m *SendInterviewRequest) GetAlong() string {
	if m != nil {
		return m.Along
	}
	return ""
}

func (m *SendInterviewRequest) GetAcross() string {
	if m != nil {
		return m.Across
	}
	return ""
}

func (m *SendInterviewRequest) GetNonFlatness() string {
	if m != nil {
		return m.NonFlatness
	}
	return ""
}

func (m *SendInterviewRequest) GetMounting() bool {
	if m != nil {
		return m.Mounting
	}
	return false
}

func (m *SendInterviewRequest) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *SendInterviewRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *SendInterviewRequest) GetAbrasive() bool {
	if m != nil {
		return m.Abrasive
	}
	return false
}

func (m *SendInterviewRequest) GetCrystallized() bool {
	if m != nil {
		return m.Crystallized
	}
	return false
}

func (m *SendInterviewRequest) GetPenetrating() bool {
	if m != nil {
		return m.Penetrating
	}
	return false
}

func (m *SendInterviewRequest) GetDrawingNumber() string {
	if m != nil {
		return m.DrawingNumber
	}
	return ""
}

func (m *SendInterviewRequest) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *SendInterviewRequest) GetDrawing() *Drawing {
	if m != nil {
		return m.Drawing
	}
	return nil
}

func (m *SendInterviewRequest) GetSizes() *SizesInt {
	if m != nil {
		return m.Sizes
	}
	return nil
}

type Drawing struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrigName string `protobuf:"bytes,3,opt,name=origName" json:"origName,omitempty"`
	Group    string `protobuf:"bytes,4,opt,name=group" json:"group,omitempty"`
	Link     string `protobuf:"bytes,5,opt,name=link" json:"link,omitempty"`
}

func (m *Drawing) Reset()                    { *m = Drawing{} }
func (m *Drawing) String() string            { return proto1.CompactTextString(m) }
func (*Drawing) ProtoMessage()               {}
func (*Drawing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *Drawing) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Drawing) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Drawing) GetOrigName() string {
	if m != nil {
		return m.OrigName
	}
	return ""
}

func (m *Drawing) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Drawing) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type SizesInt struct {
	Dy        string `protobuf:"bytes,1,opt,name=dy" json:"dy,omitempty"`
	Py        string `protobuf:"bytes,2,opt,name=py" json:"py,omitempty"`
	DUp       string `protobuf:"bytes,3,opt,name=dUp" json:"dUp,omitempty"`
	D1        string `protobuf:"bytes,4,opt,name=d1" json:"d1,omitempty"`
	D2        string `protobuf:"bytes,5,opt,name=d2" json:"d2,omitempty"`
	D         string `protobuf:"bytes,6,opt,name=d" json:"d,omitempty"`
	H1        string `protobuf:"bytes,7,opt,name=h1" json:"h1,omitempty"`
	H2        string `protobuf:"bytes,8,opt,name=h2" json:"h2,omitempty"`
	Bolt      string `protobuf:"bytes,9,opt,name=bolt" json:"bolt,omitempty"`
	CountBolt int32  `protobuf:"varint,10,opt,name=countBolt" json:"countBolt,omitempty"`
	DIn       string `protobuf:"bytes,11,opt,name=dIn" json:"dIn,omitempty"`
	DOut      string `protobuf:"bytes,12,opt,name=dOut" json:"dOut,omitempty"`
	H         string `protobuf:"bytes,13,opt,name=h" json:"h,omitempty"`
}

func (m *SizesInt) Reset()                    { *m = SizesInt{} }
func (m *SizesInt) String() string            { return proto1.CompactTextString(m) }
func (*SizesInt) ProtoMessage()               {}
func (*SizesInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *SizesInt) GetDy() string {
	if m != nil {
		return m.Dy
	}
	return ""
}

func (m *SizesInt) GetPy() string {
	if m != nil {
		return m.Py
	}
	return ""
}

func (m *SizesInt) GetDUp() string {
	if m != nil {
		return m.DUp
	}
	return ""
}

func (m *SizesInt) GetD1() string {
	if m != nil {
		return m.D1
	}
	return ""
}

func (m *SizesInt) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *SizesInt) GetD() string {
	if m != nil {
		return m.D
	}
	return ""
}

func (m *SizesInt) GetH1() string {
	if m != nil {
		return m.H1
	}
	return ""
}

func (m *SizesInt) GetH2() string {
	if m != nil {
		return m.H2
	}
	return ""
}

func (m *SizesInt) GetBolt() string {
	if m != nil {
		return m.Bolt
	}
	return ""
}

func (m *SizesInt) GetCountBolt() int32 {
	if m != nil {
		return m.CountBolt
	}
	return 0
}

func (m *SizesInt) GetDIn() string {
	if m != nil {
		return m.DIn
	}
	return ""
}

func (m *SizesInt) GetDOut() string {
	if m != nil {
		return m.DOut
	}
	return ""
}

func (m *SizesInt) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

// Order Service --------------------------------------------------------------------
type GetOrderRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *GetOrderRequest) Reset()                    { *m = GetOrderRequest{} }
func (m *GetOrderRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetOrderRequest) ProtoMessage()               {}
func (*GetOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *GetOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type GetAllOrdersRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetAllOrdersRequest) Reset()                    { *m = GetAllOrdersRequest{} }
func (m *GetAllOrdersRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllOrdersRequest) ProtoMessage()               {}
func (*GetAllOrdersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *GetAllOrdersRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetCurOrderRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetCurOrderRequest) Reset()                    { *m = GetCurOrderRequest{} }
func (m *GetCurOrderRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetCurOrderRequest) ProtoMessage()               {}
func (*GetCurOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *GetCurOrderRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CreateOrderRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	Count   int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	UserId  string `protobuf:"bytes,3,opt,name=userId" json:"userId,omitempty"`
}

func (m *CreateOrderRequest) Reset()                    { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()               {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *CreateOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *CreateOrderRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreateOrderRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type DeleteOrderRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *DeleteOrderRequest) Reset()                    { *m = DeleteOrderRequest{} }
func (m *DeleteOrderRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteOrderRequest) ProtoMessage()               {}
func (*DeleteOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *DeleteOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type SaveOrderRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *SaveOrderRequest) Reset()                    { *m = SaveOrderRequest{} }
func (m *SaveOrderRequest) String() string            { return proto1.CompactTextString(m) }
func (*SaveOrderRequest) ProtoMessage()               {}
func (*SaveOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *SaveOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type GetPositionsRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *GetPositionsRequest) Reset()                    { *m = GetPositionsRequest{} }
func (m *GetPositionsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPositionsRequest) ProtoMessage()               {}
func (*GetPositionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *GetPositionsRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type GetCurPositionsRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetCurPositionsRequest) Reset()                    { *m = GetCurPositionsRequest{} }
func (m *GetCurPositionsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetCurPositionsRequest) ProtoMessage()               {}
func (*GetCurPositionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *GetCurPositionsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type AddPositionRequest struct {
	OrderId     string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	Designation string `protobuf:"bytes,2,opt,name=designation" json:"designation,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Count       int32  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Sizes       string `protobuf:"bytes,5,opt,name=sizes" json:"sizes,omitempty"`
	Drawing     string `protobuf:"bytes,6,opt,name=drawing" json:"drawing,omitempty"`
}

func (m *AddPositionRequest) Reset()                    { *m = AddPositionRequest{} }
func (m *AddPositionRequest) String() string            { return proto1.CompactTextString(m) }
func (*AddPositionRequest) ProtoMessage()               {}
func (*AddPositionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *AddPositionRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *AddPositionRequest) GetDesignation() string {
	if m != nil {
		return m.Designation
	}
	return ""
}

func (m *AddPositionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddPositionRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AddPositionRequest) GetSizes() string {
	if m != nil {
		return m.Sizes
	}
	return ""
}

func (m *AddPositionRequest) GetDrawing() string {
	if m != nil {
		return m.Drawing
	}
	return ""
}

type UpdatePositionRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *UpdatePositionRequest) Reset()                    { *m = UpdatePositionRequest{} }
func (m *UpdatePositionRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdatePositionRequest) ProtoMessage()               {}
func (*UpdatePositionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *UpdatePositionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePositionRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RemovePositionRequest struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *RemovePositionRequest) Reset()                    { *m = RemovePositionRequest{} }
func (m *RemovePositionRequest) String() string            { return proto1.CompactTextString(m) }
func (*RemovePositionRequest) ProtoMessage()               {}
func (*RemovePositionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *RemovePositionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemovePositionRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type Order struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Date  string `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`
	Count int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto1.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Order) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type OrderPosition struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Designation string `protobuf:"bytes,2,opt,name=designation" json:"designation,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Count       int32  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Sizes       string `protobuf:"bytes,5,opt,name=sizes" json:"sizes,omitempty"`
	Drawing     string `protobuf:"bytes,6,opt,name=drawing" json:"drawing,omitempty"`
	OrderId     string `protobuf:"bytes,7,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *OrderPosition) Reset()                    { *m = OrderPosition{} }
func (m *OrderPosition) String() string            { return proto1.CompactTextString(m) }
func (*OrderPosition) ProtoMessage()               {}
func (*OrderPosition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *OrderPosition) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderPosition) GetDesignation() string {
	if m != nil {
		return m.Designation
	}
	return ""
}

func (m *OrderPosition) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderPosition) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *OrderPosition) GetSizes() string {
	if m != nil {
		return m.Sizes
	}
	return ""
}

func (m *OrderPosition) GetDrawing() string {
	if m != nil {
		return m.Drawing
	}
	return ""
}

func (m *OrderPosition) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type OrderResponse struct {
	Orders []*Order `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *OrderResponse) Reset()                    { *m = OrderResponse{} }
func (m *OrderResponse) String() string            { return proto1.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()               {}
func (*OrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *OrderResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderPositionResponse struct {
	Positions []*OrderPosition `protobuf:"bytes,1,rep,name=positions" json:"positions,omitempty"`
}

func (m *OrderPositionResponse) Reset()                    { *m = OrderPositionResponse{} }
func (m *OrderPositionResponse) String() string            { return proto1.CompactTextString(m) }
func (*OrderPositionResponse) ProtoMessage()               {}
func (*OrderPositionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *OrderPositionResponse) GetPositions() []*OrderPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

type MetaData struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Size int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *MetaData) Reset()                    { *m = MetaData{} }
func (m *MetaData) String() string            { return proto1.CompactTextString(m) }
func (*MetaData) ProtoMessage()               {}
func (*MetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *MetaData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetaData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MetaData) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type File struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto1.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type FileDownloadResponse struct {
	// Types that are valid to be assigned to Response:
	//	*FileDownloadResponse_Metadata
	//	*FileDownloadResponse_File
	Response isFileDownloadResponse_Response `protobuf_oneof:"response"`
}

func (m *FileDownloadResponse) Reset()                    { *m = FileDownloadResponse{} }
func (m *FileDownloadResponse) String() string            { return proto1.CompactTextString(m) }
func (*FileDownloadResponse) ProtoMessage()               {}
func (*FileDownloadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

type isFileDownloadResponse_Response interface{ isFileDownloadResponse_Response() }

type FileDownloadResponse_Metadata struct {
	Metadata *MetaData `protobuf:"bytes,1,opt,name=metadata,oneof"`
}
type FileDownloadResponse_File struct {
	File *File `protobuf:"bytes,2,opt,name=file,oneof"`
}

func (*FileDownloadResponse_Metadata) isFileDownloadResponse_Response() {}
func (*FileDownloadResponse_File) isFileDownloadResponse_Response()     {}

func (m *FileDownloadResponse) GetResponse() isFileDownloadResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *FileDownloadResponse) GetMetadata() *MetaData {
	if x, ok := m.GetResponse().(*FileDownloadResponse_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *FileDownloadResponse) GetFile() *File {
	if x, ok := m.GetResponse().(*FileDownloadResponse_File); ok {
		return x.File
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FileDownloadResponse) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _FileDownloadResponse_OneofMarshaler, _FileDownloadResponse_OneofUnmarshaler, _FileDownloadResponse_OneofSizer, []interface{}{
		(*FileDownloadResponse_Metadata)(nil),
		(*FileDownloadResponse_File)(nil),
	}
}

func _FileDownloadResponse_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*FileDownloadResponse)
	// response
	switch x := m.Response.(type) {
	case *FileDownloadResponse_Metadata:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Metadata); err != nil {
			return err
		}
	case *FileDownloadResponse_File:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FileDownloadResponse.Response has unexpected type %T", x)
	}
	return nil
}

func _FileDownloadResponse_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*FileDownloadResponse)
	switch tag {
	case 1: // response.metadata
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(MetaData)
		err := b.DecodeMessage(msg)
		m.Response = &FileDownloadResponse_Metadata{msg}
		return true, err
	case 2: // response.file
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Response = &FileDownloadResponse_File{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FileDownloadResponse_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*FileDownloadResponse)
	// response
	switch x := m.Response.(type) {
	case *FileDownloadResponse_Metadata:
		s := proto1.Size(x.Metadata)
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *FileDownloadResponse_File:
		s := proto1.Size(x.File)
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// commmon ----------------------------------------------------------------
type IdResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *IdResponse) Reset()                    { *m = IdResponse{} }
func (m *IdResponse) String() string            { return proto1.CompactTextString(m) }
func (*IdResponse) ProtoMessage()               {}
func (*IdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *IdResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

type PingResponse struct {
	Ping string `protobuf:"bytes,1,opt,name=ping" json:"ping,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *PingResponse) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

func init() {
	proto1.RegisterType((*GetAllFlangeRequest)(nil), "proto.GetAllFlangeRequest")
	proto1.RegisterType((*CreateFlangeRequest)(nil), "proto.CreateFlangeRequest")
	proto1.RegisterType((*UpdateFlangeRequest)(nil), "proto.UpdateFlangeRequest")
	proto1.RegisterType((*DeleteFlangeRequest)(nil), "proto.DeleteFlangeRequest")
	proto1.RegisterType((*Flange)(nil), "proto.Flange")
	proto1.RegisterType((*FlangeResponse)(nil), "proto.FlangeResponse")
	proto1.RegisterType((*GetStandsRequest)(nil), "proto.GetStandsRequest")
	proto1.RegisterType((*CreateStandRequest)(nil), "proto.CreateStandRequest")
	proto1.RegisterType((*UpdateStandRequest)(nil), "proto.UpdateStandRequest")
	proto1.RegisterType((*DeleteStandRequest)(nil), "proto.DeleteStandRequest")
	proto1.RegisterType((*Stand)(nil), "proto.Stand")
	proto1.RegisterType((*StandResponse)(nil), "proto.StandResponse")
	proto1.RegisterType((*GetStFlRequest)(nil), "proto.GetStFlRequest")
	proto1.RegisterType((*CreateStFlRequest)(nil), "proto.CreateStFlRequest")
	proto1.RegisterType((*UpdateStFlRequest)(nil), "proto.UpdateStFlRequest")
	proto1.RegisterType((*DeleteStFlRequest)(nil), "proto.DeleteStFlRequest")
	proto1.RegisterType((*StFl)(nil), "proto.StFl")
	proto1.RegisterType((*StFlResponse)(nil), "proto.StFlResponse")
	proto1.RegisterType((*GetTypeFlRequest)(nil), "proto.GetTypeFlRequest")
	proto1.RegisterType((*CreateTypeFlRequest)(nil), "proto.CreateTypeFlRequest")
	proto1.RegisterType((*UpdateTypeFlRequest)(nil), "proto.UpdateTypeFlRequest")
	proto1.RegisterType((*DeleteTypeFlRequest)(nil), "proto.DeleteTypeFlRequest")
	proto1.RegisterType((*TypeFl)(nil), "proto.TypeFl")
	proto1.RegisterType((*TypeFlResponse)(nil), "proto.TypeFlResponse")
	proto1.RegisterType((*GetAllAddRequest)(nil), "proto.GetAllAddRequest")
	proto1.RegisterType((*AddMaterials)(nil), "proto.AddMaterials")
	proto1.RegisterType((*AddTemperature)(nil), "proto.AddTemperature")
	proto1.RegisterType((*AddMod)(nil), "proto.AddMod")
	proto1.RegisterType((*AddMoun)(nil), "proto.AddMoun")
	proto1.RegisterType((*AddGrap)(nil), "proto.AddGrap")
	proto1.RegisterType((*AddFiller)(nil), "proto.AddFiller")
	proto1.RegisterType((*AddCoating)(nil), "proto.AddCoating")
	proto1.RegisterType((*AddConstruction)(nil), "proto.AddConstruction")
	proto1.RegisterType((*AddObturator)(nil), "proto.AddObturator")
	proto1.RegisterType((*AddBasis)(nil), "proto.AddBasis")
	proto1.RegisterType((*AddPObturator)(nil), "proto.AddPObturator")
	proto1.RegisterType((*AddSealant)(nil), "proto.AddSealant")
	proto1.RegisterType((*CreateAddRequest)(nil), "proto.CreateAddRequest")
	proto1.RegisterType((*UpdateAddMatRequest)(nil), "proto.UpdateAddMatRequest")
	proto1.RegisterType((*UpdateAddModRequest)(nil), "proto.UpdateAddModRequest")
	proto1.RegisterType((*UpdateAddTemRequest)(nil), "proto.UpdateAddTemRequest")
	proto1.RegisterType((*UpdateAddMounRequest)(nil), "proto.UpdateAddMounRequest")
	proto1.RegisterType((*UpdateAddGrapRequest)(nil), "proto.UpdateAddGrapRequest")
	proto1.RegisterType((*UpdateAddFillersRequest)(nil), "proto.UpdateAddFillersRequest")
	proto1.RegisterType((*UpdateAddCoatingRequest)(nil), "proto.UpdateAddCoatingRequest")
	proto1.RegisterType((*UpdateAddConstructionRequest)(nil), "proto.UpdateAddConstructionRequest")
	proto1.RegisterType((*UpdateAddObturatorRequest)(nil), "proto.UpdateAddObturatorRequest")
	proto1.RegisterType((*UpdateAddBasisRequest)(nil), "proto.UpdateAddBasisRequest")
	proto1.RegisterType((*UpdateAddPObturatorRequest)(nil), "proto.UpdateAddPObturatorRequest")
	proto1.RegisterType((*UpdateAddSealantRequest)(nil), "proto.UpdateAddSealantRequest")
	proto1.RegisterType((*Additional)(nil), "proto.Additional")
	proto1.RegisterType((*AdditionalResponse)(nil), "proto.AdditionalResponse")
	proto1.RegisterType((*SuccessResponse)(nil), "proto.SuccessResponse")
	proto1.RegisterType((*GetSizesRequest)(nil), "proto.GetSizesRequest")
	proto1.RegisterType((*CreateSizeRequest)(nil), "proto.CreateSizeRequest")
	proto1.RegisterType((*CreateSizesRequest)(nil), "proto.CreateSizesRequest")
	proto1.RegisterType((*UpdateSizeRequest)(nil), "proto.UpdateSizeRequest")
	proto1.RegisterType((*DeleteSizeRequest)(nil), "proto.DeleteSizeRequest")
	proto1.RegisterType((*DeleteAllSizeRequest)(nil), "proto.DeleteAllSizeRequest")
	proto1.RegisterType((*Size)(nil), "proto.Size")
	proto1.RegisterType((*Dn)(nil), "proto.Dn")
	proto1.RegisterType((*SizeResponse)(nil), "proto.SizeResponse")
	proto1.RegisterType((*Filler)(nil), "proto.Filler")
	proto1.RegisterType((*Temp)(nil), "proto.Temp")
	proto1.RegisterType((*SnpMaterials)(nil), "proto.SnpMaterials")
	proto1.RegisterType((*GetSNPRequest)(nil), "proto.GetSNPRequest")
	proto1.RegisterType((*CreateSNPRequest)(nil), "proto.CreateSNPRequest")
	proto1.RegisterType((*UpdateSNPRequest)(nil), "proto.UpdateSNPRequest")
	proto1.RegisterType((*DeleteSNPRequest)(nil), "proto.DeleteSNPRequest")
	proto1.RegisterType((*SNP)(nil), "proto.SNP")
	proto1.RegisterType((*SNPResponse)(nil), "proto.SNPResponse")
	proto1.RegisterType((*PutgImage)(nil), "proto.PutgImage")
	proto1.RegisterType((*GetPutgImageRequest)(nil), "proto.GetPutgImageRequest")
	proto1.RegisterType((*CreatePutgImageRequest)(nil), "proto.CreatePutgImageRequest")
	proto1.RegisterType((*UpdatePutgImageRequest)(nil), "proto.UpdatePutgImageRequest")
	proto1.RegisterType((*DeletePutgImageRequest)(nil), "proto.DeletePutgImageRequest")
	proto1.RegisterType((*PutgImageResponse)(nil), "proto.PutgImageResponse")
	proto1.RegisterType((*PutgTemp)(nil), "proto.PutgTemp")
	proto1.RegisterType((*PutgConstructions)(nil), "proto.PutgConstructions")
	proto1.RegisterType((*ConTemp)(nil), "proto.ConTemp")
	proto1.RegisterType((*Constr)(nil), "proto.Constr")
	proto1.RegisterType((*PutgObt)(nil), "proto.PutgObt")
	proto1.RegisterType((*PutgMaterials)(nil), "proto.PutgMaterials")
	proto1.RegisterType((*GetPutgRequest)(nil), "proto.GetPutgRequest")
	proto1.RegisterType((*CreatePutgRequest)(nil), "proto.CreatePutgRequest")
	proto1.RegisterType((*UpdatePutgRequest)(nil), "proto.UpdatePutgRequest")
	proto1.RegisterType((*DeletePutgRequest)(nil), "proto.DeletePutgRequest")
	proto1.RegisterType((*Putg)(nil), "proto.Putg")
	proto1.RegisterType((*PutgResponse)(nil), "proto.PutgResponse")
	proto1.RegisterType((*PutgmImage)(nil), "proto.PutgmImage")
	proto1.RegisterType((*GetPutgmImageRequest)(nil), "proto.GetPutgmImageRequest")
	proto1.RegisterType((*CreatePutgmImageRequest)(nil), "proto.CreatePutgmImageRequest")
	proto1.RegisterType((*UpdatePutgmImageRequest)(nil), "proto.UpdatePutgmImageRequest")
	proto1.RegisterType((*DeletePutgmImageRequest)(nil), "proto.DeletePutgmImageRequest")
	proto1.RegisterType((*PutgmImageResponse)(nil), "proto.PutgmImageResponse")
	proto1.RegisterType((*PutgmConstructions)(nil), "proto.PutgmConstructions")
	proto1.RegisterType((*PutgmConstr)(nil), "proto.PutgmConstr")
	proto1.RegisterType((*PutgmObt)(nil), "proto.PutgmObt")
	proto1.RegisterType((*PutgmSeal)(nil), "proto.PutgmSeal")
	proto1.RegisterType((*GetPutgmRequest)(nil), "proto.GetPutgmRequest")
	proto1.RegisterType((*CreatePutgmRequest)(nil), "proto.CreatePutgmRequest")
	proto1.RegisterType((*UpdatePutgmRequest)(nil), "proto.UpdatePutgmRequest")
	proto1.RegisterType((*DeletePutgmRequest)(nil), "proto.DeletePutgmRequest")
	proto1.RegisterType((*Putgm)(nil), "proto.Putgm")
	proto1.RegisterType((*PutgmResponse)(nil), "proto.PutgmResponse")
	proto1.RegisterType((*GetMaterialsRequest)(nil), "proto.GetMaterialsRequest")
	proto1.RegisterType((*CreateMaterialsRequest)(nil), "proto.CreateMaterialsRequest")
	proto1.RegisterType((*UpdateMaterialsRequest)(nil), "proto.UpdateMaterialsRequest")
	proto1.RegisterType((*DeleteMaterialsRequest)(nil), "proto.DeleteMaterialsRequest")
	proto1.RegisterType((*Materials)(nil), "proto.Materials")
	proto1.RegisterType((*MaterialsResponse)(nil), "proto.MaterialsResponse")
	proto1.RegisterType((*GetBoltMaterialsRequest)(nil), "proto.GetBoltMaterialsRequest")
	proto1.RegisterType((*CreateBoltMaterialsRequest)(nil), "proto.CreateBoltMaterialsRequest")
	proto1.RegisterType((*UpdateBoltMaterialsRequest)(nil), "proto.UpdateBoltMaterialsRequest")
	proto1.RegisterType((*DeleteBoltMaterialsRequest)(nil), "proto.DeleteBoltMaterialsRequest")
	proto1.RegisterType((*BoltMaterials)(nil), "proto.BoltMaterials")
	proto1.RegisterType((*BoltMaterialsResponse)(nil), "proto.BoltMaterialsResponse")
	proto1.RegisterType((*GetSizesIntRequest)(nil), "proto.GetSizesIntRequest")
	proto1.RegisterType((*GetAllSizeIntRequest)(nil), "proto.GetAllSizeIntRequest")
	proto1.RegisterType((*CreateSizeIntRequest)(nil), "proto.CreateSizeIntRequest")
	proto1.RegisterType((*CreateSizesIntRequest)(nil), "proto.CreateSizesIntRequest")
	proto1.RegisterType((*UpdateSizeIntRequest)(nil), "proto.UpdateSizeIntRequest")
	proto1.RegisterType((*DeleteSizeIntRequest)(nil), "proto.DeleteSizeIntRequest")
	proto1.RegisterType((*DeleteAllSizeIntRequest)(nil), "proto.DeleteAllSizeIntRequest")
	proto1.RegisterType((*SizeInt)(nil), "proto.SizeInt")
	proto1.RegisterType((*SizeIntResponse)(nil), "proto.SizeIntResponse")
	proto1.RegisterType((*SendInterviewRequest)(nil), "proto.SendInterviewRequest")
	proto1.RegisterType((*Drawing)(nil), "proto.Drawing")
	proto1.RegisterType((*SizesInt)(nil), "proto.SizesInt")
	proto1.RegisterType((*GetOrderRequest)(nil), "proto.GetOrderRequest")
	proto1.RegisterType((*GetAllOrdersRequest)(nil), "proto.GetAllOrdersRequest")
	proto1.RegisterType((*GetCurOrderRequest)(nil), "proto.GetCurOrderRequest")
	proto1.RegisterType((*CreateOrderRequest)(nil), "proto.CreateOrderRequest")
	proto1.RegisterType((*DeleteOrderRequest)(nil), "proto.DeleteOrderRequest")
	proto1.RegisterType((*SaveOrderRequest)(nil), "proto.SaveOrderRequest")
	proto1.RegisterType((*GetPositionsRequest)(nil), "proto.GetPositionsRequest")
	proto1.RegisterType((*GetCurPositionsRequest)(nil), "proto.GetCurPositionsRequest")
	proto1.RegisterType((*AddPositionRequest)(nil), "proto.AddPositionRequest")
	proto1.RegisterType((*UpdatePositionRequest)(nil), "proto.UpdatePositionRequest")
	proto1.RegisterType((*RemovePositionRequest)(nil), "proto.RemovePositionRequest")
	proto1.RegisterType((*Order)(nil), "proto.Order")
	proto1.RegisterType((*OrderPosition)(nil), "proto.OrderPosition")
	proto1.RegisterType((*OrderResponse)(nil), "proto.OrderResponse")
	proto1.RegisterType((*OrderPositionResponse)(nil), "proto.OrderPositionResponse")
	proto1.RegisterType((*MetaData)(nil), "proto.MetaData")
	proto1.RegisterType((*File)(nil), "proto.File")
	proto1.RegisterType((*FileDownloadResponse)(nil), "proto.FileDownloadResponse")
	proto1.RegisterType((*IdResponse)(nil), "proto.IdResponse")
	proto1.RegisterType((*PingRequest)(nil), "proto.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "proto.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProService service

type ProServiceClient interface {
	// common -----------------------------------------------------------------------
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error)
	CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error)
	CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error)
	CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error)
	CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateCoating(ctx context.Context, in *UpdateAddCoatingRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateConstruction(ctx context.Context, in *UpdateAddConstructionRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateObturator(ctx context.Context, in *UpdateAddObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateBasis(ctx context.Context, in *UpdateAddBasisRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdatePObturator(ctx context.Context, in *UpdateAddPObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateSealant(ctx context.Context, in *UpdateAddSealantRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// Size Service ----------------------------------------------------------------
	GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	GetAllSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	CreateManySizes(ctx context.Context, in *CreateSizesRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteAllSize(ctx context.Context, in *DeleteAllSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error)
	CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTG Image Service ----------------------------------------------------------------
	GetPutgImage(ctx context.Context, in *GetPutgImageRequest, opts ...grpc.CallOption) (*PutgImageResponse, error)
	CreatePutgImage(ctx context.Context, in *CreatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgImage(ctx context.Context, in *UpdatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgImage(ctx context.Context, in *DeletePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTG Service ----------------------------------------------------------------
	GetPutg(ctx context.Context, in *GetPutgRequest, opts ...grpc.CallOption) (*PutgResponse, error)
	CreatePutg(ctx context.Context, in *CreatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutg(ctx context.Context, in *UpdatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutg(ctx context.Context, in *DeletePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTGm Image Service ----------------------------------------------------------------
	GetPutgmImage(ctx context.Context, in *GetPutgmImageRequest, opts ...grpc.CallOption) (*PutgmImageResponse, error)
	CreatePutgmImage(ctx context.Context, in *CreatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgmImage(ctx context.Context, in *UpdatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgmImage(ctx context.Context, in *DeletePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTGm Service ----------------------------------------------------------------
	GetPutgm(ctx context.Context, in *GetPutgmRequest, opts ...grpc.CallOption) (*PutgmResponse, error)
	CreatePutgm(ctx context.Context, in *CreatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgm(ctx context.Context, in *UpdatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgm(ctx context.Context, in *DeletePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Interview Service ----------------------------------------------------------------
	// Materials
	GetMaterials(ctx context.Context, in *GetMaterialsRequest, opts ...grpc.CallOption) (*MaterialsResponse, error)
	CreateMaterials(ctx context.Context, in *CreateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateMaterials(ctx context.Context, in *UpdateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteMaterials(ctx context.Context, in *DeleteMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Bolt Materials
	GetBoltMaterials(ctx context.Context, in *GetBoltMaterialsRequest, opts ...grpc.CallOption) (*BoltMaterialsResponse, error)
	CreateBoltMaterials(ctx context.Context, in *CreateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateBoltMaterials(ctx context.Context, in *UpdateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteBoltMaterials(ctx context.Context, in *DeleteBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Size
	GetSizeInt(ctx context.Context, in *GetSizesIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error)
	GetAllSizeInt(ctx context.Context, in *GetAllSizeIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error)
	CreateSizeInt(ctx context.Context, in *CreateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	CreateManySizesInt(ctx context.Context, in *CreateSizesIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSizeInt(ctx context.Context, in *UpdateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSizeInt(ctx context.Context, in *DeleteSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteAllSizeInt(ctx context.Context, in *DeleteAllSizeIntRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// Interview
	SendInterview(ctx context.Context, in *SendInterviewRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// Order Service --------------------------------------------------------------------
	GetAllOrders(ctx context.Context, in *GetAllOrdersRequest, opts ...grpc.CallOption) (*OrderResponse, error)
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*IdResponse, error)
	SaveOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (ProService_SaveOrderClient, error)
	SendOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	GetPositions(ctx context.Context, in *GetPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error)
	GetCurPositions(ctx context.Context, in *GetCurPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error)
	AddPosition(ctx context.Context, in *AddPositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePosition(ctx context.Context, in *UpdatePositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
	RemovePosition(ctx context.Context, in *RemovePositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
}

type proServiceClient struct {
	cc *grpc.ClientConn
}

func NewProServiceClient(cc *grpc.ClientConn) ProServiceClient {
	return &proServiceClient{cc}
}

func (c *proServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error) {
	out := new(FlangeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllFlanges", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteFlange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error) {
	out := new(StandResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllStands", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteStand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error) {
	out := new(StFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteStFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteTypeFl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error) {
	out := new(AdditionalResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllAdditional", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateAdditional", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateTemp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMoun", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateGrap", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateFillers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateCoating(ctx context.Context, in *UpdateAddCoatingRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateCoating", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateConstruction(ctx context.Context, in *UpdateAddConstructionRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateConstruction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateObturator(ctx context.Context, in *UpdateAddObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateObturator", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateBasis(ctx context.Context, in *UpdateAddBasisRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateBasis", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePObturator(ctx context.Context, in *UpdateAddPObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePObturator", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSealant(ctx context.Context, in *UpdateAddSealantRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSealant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSizes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllSizes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateManySizes(ctx context.Context, in *CreateSizesRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateManySizes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteAllSize(ctx context.Context, in *DeleteAllSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteAllSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error) {
	out := new(SNPResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSNP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgImage(ctx context.Context, in *GetPutgImageRequest, opts ...grpc.CallOption) (*PutgImageResponse, error) {
	out := new(PutgImageResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgImage(ctx context.Context, in *CreatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreatePutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgImage(ctx context.Context, in *UpdatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgImage(ctx context.Context, in *DeletePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeletePutgImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutg(ctx context.Context, in *GetPutgRequest, opts ...grpc.CallOption) (*PutgResponse, error) {
	out := new(PutgResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutg(ctx context.Context, in *CreatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreatePutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutg(ctx context.Context, in *UpdatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutg(ctx context.Context, in *DeletePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeletePutg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgmImage(ctx context.Context, in *GetPutgmImageRequest, opts ...grpc.CallOption) (*PutgmImageResponse, error) {
	out := new(PutgmImageResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPutgmImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgmImage(ctx context.Context, in *CreatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreatePutgmImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgmImage(ctx context.Context, in *UpdatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePutgmImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgmImage(ctx context.Context, in *DeletePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeletePutgmImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgm(ctx context.Context, in *GetPutgmRequest, opts ...grpc.CallOption) (*PutgmResponse, error) {
	out := new(PutgmResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPutgm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgm(ctx context.Context, in *CreatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreatePutgm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgm(ctx context.Context, in *UpdatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePutgm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgm(ctx context.Context, in *DeletePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeletePutgm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetMaterials(ctx context.Context, in *GetMaterialsRequest, opts ...grpc.CallOption) (*MaterialsResponse, error) {
	out := new(MaterialsResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateMaterials(ctx context.Context, in *CreateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMaterials(ctx context.Context, in *UpdateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteMaterials(ctx context.Context, in *DeleteMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetBoltMaterials(ctx context.Context, in *GetBoltMaterialsRequest, opts ...grpc.CallOption) (*BoltMaterialsResponse, error) {
	out := new(BoltMaterialsResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetBoltMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateBoltMaterials(ctx context.Context, in *CreateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateBoltMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateBoltMaterials(ctx context.Context, in *UpdateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateBoltMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteBoltMaterials(ctx context.Context, in *DeleteBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteBoltMaterials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSizeInt(ctx context.Context, in *GetSizesIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error) {
	out := new(SizeIntResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetSizeInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllSizeInt(ctx context.Context, in *GetAllSizeIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error) {
	out := new(SizeIntResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllSizeInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSizeInt(ctx context.Context, in *CreateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateSizeInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateManySizesInt(ctx context.Context, in *CreateSizesIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateManySizesInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSizeInt(ctx context.Context, in *UpdateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdateSizeInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSizeInt(ctx context.Context, in *DeleteSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteSizeInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteAllSizeInt(ctx context.Context, in *DeleteAllSizeIntRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteAllSizeInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) SendInterview(ctx context.Context, in *SendInterviewRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/SendInterview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllOrders(ctx context.Context, in *GetAllOrdersRequest, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetAllOrders", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/CreateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/DeleteOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) SaveOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (ProService_SaveOrderClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProService_serviceDesc.Streams[0], c.cc, "/proto.ProService/SaveOrder", opts...)
	if err != nil {
		return nil, err
	}
	x := &proServiceSaveOrderClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProService_SaveOrderClient interface {
	Recv() (*FileDownloadResponse, error)
	grpc.ClientStream
}

type proServiceSaveOrderClient struct {
	grpc.ClientStream
}

func (x *proServiceSaveOrderClient) Recv() (*FileDownloadResponse, error) {
	m := new(FileDownloadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proServiceClient) SendOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/SendOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPositions(ctx context.Context, in *GetPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error) {
	out := new(OrderPositionResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetPositions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetCurPositions(ctx context.Context, in *GetCurPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error) {
	out := new(OrderPositionResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/GetCurPositions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) AddPosition(ctx context.Context, in *AddPositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/AddPosition", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePosition(ctx context.Context, in *UpdatePositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/UpdatePosition", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) RemovePosition(ctx context.Context, in *RemovePositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := grpc.Invoke(ctx, "/proto.ProService/RemovePosition", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProService service

type ProServiceServer interface {
	// common -----------------------------------------------------------------------
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(context.Context, *GetAllFlangeRequest) (*FlangeResponse, error)
	CreateFlange(context.Context, *CreateFlangeRequest) (*IdResponse, error)
	UpdateFlange(context.Context, *UpdateFlangeRequest) (*IdResponse, error)
	DeleteFlange(context.Context, *DeleteFlangeRequest) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(context.Context, *GetStandsRequest) (*StandResponse, error)
	CreateStand(context.Context, *CreateStandRequest) (*IdResponse, error)
	UpdateStand(context.Context, *UpdateStandRequest) (*IdResponse, error)
	DeleteStand(context.Context, *DeleteStandRequest) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(context.Context, *GetStFlRequest) (*StFlResponse, error)
	CreateStFl(context.Context, *CreateStFlRequest) (*IdResponse, error)
	UpdateStFl(context.Context, *UpdateStFlRequest) (*IdResponse, error)
	DeleteStFl(context.Context, *DeleteStFlRequest) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	GetAllTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	CreateTypeFl(context.Context, *CreateTypeFlRequest) (*IdResponse, error)
	UpdateTypeFl(context.Context, *UpdateTypeFlRequest) (*IdResponse, error)
	DeleteTypeFl(context.Context, *DeleteTypeFlRequest) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(context.Context, *GetAllAddRequest) (*AdditionalResponse, error)
	CreateAdditional(context.Context, *CreateAddRequest) (*SuccessResponse, error)
	UpdateMat(context.Context, *UpdateAddMatRequest) (*SuccessResponse, error)
	UpdateMod(context.Context, *UpdateAddModRequest) (*SuccessResponse, error)
	UpdateTemp(context.Context, *UpdateAddTemRequest) (*SuccessResponse, error)
	UpdateMoun(context.Context, *UpdateAddMounRequest) (*SuccessResponse, error)
	UpdateGrap(context.Context, *UpdateAddGrapRequest) (*SuccessResponse, error)
	UpdateFillers(context.Context, *UpdateAddFillersRequest) (*SuccessResponse, error)
	UpdateCoating(context.Context, *UpdateAddCoatingRequest) (*SuccessResponse, error)
	UpdateConstruction(context.Context, *UpdateAddConstructionRequest) (*SuccessResponse, error)
	UpdateObturator(context.Context, *UpdateAddObturatorRequest) (*SuccessResponse, error)
	UpdateBasis(context.Context, *UpdateAddBasisRequest) (*SuccessResponse, error)
	UpdatePObturator(context.Context, *UpdateAddPObturatorRequest) (*SuccessResponse, error)
	UpdateSealant(context.Context, *UpdateAddSealantRequest) (*SuccessResponse, error)
	// Size Service ----------------------------------------------------------------
	GetSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	GetAllSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	CreateSize(context.Context, *CreateSizeRequest) (*IdResponse, error)
	CreateManySizes(context.Context, *CreateSizesRequest) (*IdResponse, error)
	UpdateSize(context.Context, *UpdateSizeRequest) (*IdResponse, error)
	DeleteSize(context.Context, *DeleteSizeRequest) (*IdResponse, error)
	DeleteAllSize(context.Context, *DeleteAllSizeRequest) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(context.Context, *GetSNPRequest) (*SNPResponse, error)
	CreateSNP(context.Context, *CreateSNPRequest) (*IdResponse, error)
	UpdateSNP(context.Context, *UpdateSNPRequest) (*IdResponse, error)
	DeleteSNP(context.Context, *DeleteSNPRequest) (*IdResponse, error)
	// PUTG Image Service ----------------------------------------------------------------
	GetPutgImage(context.Context, *GetPutgImageRequest) (*PutgImageResponse, error)
	CreatePutgImage(context.Context, *CreatePutgImageRequest) (*IdResponse, error)
	UpdatePutgImage(context.Context, *UpdatePutgImageRequest) (*IdResponse, error)
	DeletePutgImage(context.Context, *DeletePutgImageRequest) (*IdResponse, error)
	// PUTG Service ----------------------------------------------------------------
	GetPutg(context.Context, *GetPutgRequest) (*PutgResponse, error)
	CreatePutg(context.Context, *CreatePutgRequest) (*IdResponse, error)
	UpdatePutg(context.Context, *UpdatePutgRequest) (*IdResponse, error)
	DeletePutg(context.Context, *DeletePutgRequest) (*IdResponse, error)
	// PUTGm Image Service ----------------------------------------------------------------
	GetPutgmImage(context.Context, *GetPutgmImageRequest) (*PutgmImageResponse, error)
	CreatePutgmImage(context.Context, *CreatePutgmImageRequest) (*IdResponse, error)
	UpdatePutgmImage(context.Context, *UpdatePutgmImageRequest) (*IdResponse, error)
	DeletePutgmImage(context.Context, *DeletePutgmImageRequest) (*IdResponse, error)
	// PUTGm Service ----------------------------------------------------------------
	GetPutgm(context.Context, *GetPutgmRequest) (*PutgmResponse, error)
	CreatePutgm(context.Context, *CreatePutgmRequest) (*IdResponse, error)
	UpdatePutgm(context.Context, *UpdatePutgmRequest) (*IdResponse, error)
	DeletePutgm(context.Context, *DeletePutgmRequest) (*IdResponse, error)
	// Interview Service ----------------------------------------------------------------
	// Materials
	GetMaterials(context.Context, *GetMaterialsRequest) (*MaterialsResponse, error)
	CreateMaterials(context.Context, *CreateMaterialsRequest) (*IdResponse, error)
	UpdateMaterials(context.Context, *UpdateMaterialsRequest) (*IdResponse, error)
	DeleteMaterials(context.Context, *DeleteMaterialsRequest) (*IdResponse, error)
	// Bolt Materials
	GetBoltMaterials(context.Context, *GetBoltMaterialsRequest) (*BoltMaterialsResponse, error)
	CreateBoltMaterials(context.Context, *CreateBoltMaterialsRequest) (*IdResponse, error)
	UpdateBoltMaterials(context.Context, *UpdateBoltMaterialsRequest) (*IdResponse, error)
	DeleteBoltMaterials(context.Context, *DeleteBoltMaterialsRequest) (*IdResponse, error)
	// Size
	GetSizeInt(context.Context, *GetSizesIntRequest) (*SizeIntResponse, error)
	GetAllSizeInt(context.Context, *GetAllSizeIntRequest) (*SizeIntResponse, error)
	CreateSizeInt(context.Context, *CreateSizeIntRequest) (*IdResponse, error)
	CreateManySizesInt(context.Context, *CreateSizesIntRequest) (*IdResponse, error)
	UpdateSizeInt(context.Context, *UpdateSizeIntRequest) (*IdResponse, error)
	DeleteSizeInt(context.Context, *DeleteSizeIntRequest) (*IdResponse, error)
	DeleteAllSizeInt(context.Context, *DeleteAllSizeIntRequest) (*SuccessResponse, error)
	// Interview
	SendInterview(context.Context, *SendInterviewRequest) (*SuccessResponse, error)
	// Order Service --------------------------------------------------------------------
	GetAllOrders(context.Context, *GetAllOrdersRequest) (*OrderResponse, error)
	CreateOrder(context.Context, *CreateOrderRequest) (*IdResponse, error)
	DeleteOrder(context.Context, *DeleteOrderRequest) (*IdResponse, error)
	SaveOrder(*SaveOrderRequest, ProService_SaveOrderServer) error
	SendOrder(context.Context, *SaveOrderRequest) (*SuccessResponse, error)
	GetPositions(context.Context, *GetPositionsRequest) (*OrderPositionResponse, error)
	GetCurPositions(context.Context, *GetCurPositionsRequest) (*OrderPositionResponse, error)
	AddPosition(context.Context, *AddPositionRequest) (*IdResponse, error)
	UpdatePosition(context.Context, *UpdatePositionRequest) (*IdResponse, error)
	RemovePosition(context.Context, *RemovePositionRequest) (*IdResponse, error)
}

func RegisterProServiceServer(s *grpc.Server, srv ProServiceServer) {
	s.RegisterService(&_ProService_serviceDesc, srv)
}

func _ProService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllFlanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllFlanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllFlanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllFlanges(ctx, req.(*GetAllFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateFlange(ctx, req.(*CreateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFlange(ctx, req.(*UpdateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteFlange(ctx, req.(*DeleteFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllStands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllStands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllStands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllStands(ctx, req.(*GetStandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStand(ctx, req.(*CreateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStand(ctx, req.(*UpdateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStand(ctx, req.(*DeleteStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetStFl(ctx, req.(*GetStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStFl(ctx, req.(*CreateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStFl(ctx, req.(*UpdateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStFl(ctx, req.(*DeleteStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateTypeFl(ctx, req.(*CreateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, req.(*UpdateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, req.(*DeleteTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllAdditional(ctx, req.(*GetAllAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateAdditional(ctx, req.(*CreateAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMat(ctx, req.(*UpdateAddMatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddModRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMod(ctx, req.(*UpdateAddModRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddTemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTemp(ctx, req.(*UpdateAddTemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMoun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMounRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMoun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMoun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMoun(ctx, req.(*UpdateAddMounRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateGrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddGrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateGrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateGrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateGrap(ctx, req.(*UpdateAddGrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFillers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddFillersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFillers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateFillers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFillers(ctx, req.(*UpdateAddFillersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateCoating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddCoatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateCoating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateCoating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateCoating(ctx, req.(*UpdateAddCoatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateConstruction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddConstructionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateConstruction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateConstruction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateConstruction(ctx, req.(*UpdateAddConstructionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateObturator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddObturatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateObturator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateObturator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateObturator(ctx, req.(*UpdateAddObturatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateBasis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddBasisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateBasis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateBasis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateBasis(ctx, req.(*UpdateAddBasisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePObturator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddPObturatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePObturator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePObturator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePObturator(ctx, req.(*UpdateAddPObturatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSealant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddSealantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSealant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSealant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSealant(ctx, req.(*UpdateAddSealantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSize(ctx, req.(*CreateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateManySizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateManySizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateManySizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateManySizes(ctx, req.(*CreateSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSize(ctx, req.(*UpdateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSize(ctx, req.(*DeleteSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteAllSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteAllSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteAllSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteAllSize(ctx, req.(*DeleteAllSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSNP(ctx, req.(*GetSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSNP(ctx, req.(*CreateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSNP(ctx, req.(*UpdateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSNP(ctx, req.(*DeleteSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgImage(ctx, req.(*GetPutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreatePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgImage(ctx, req.(*CreatePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgImage(ctx, req.(*UpdatePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeletePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgImage(ctx, req.(*DeletePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutg(ctx, req.(*GetPutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreatePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutg(ctx, req.(*CreatePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutg(ctx, req.(*UpdatePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeletePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutg(ctx, req.(*DeletePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgmImage(ctx, req.(*GetPutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreatePutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgmImage(ctx, req.(*CreatePutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgmImage(ctx, req.(*UpdatePutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeletePutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgmImage(ctx, req.(*DeletePutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgm(ctx, req.(*GetPutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreatePutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgm(ctx, req.(*CreatePutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgm(ctx, req.(*UpdatePutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeletePutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgm(ctx, req.(*DeletePutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetMaterials(ctx, req.(*GetMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateMaterials(ctx, req.(*CreateMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMaterials(ctx, req.(*UpdateMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteMaterials(ctx, req.(*DeleteMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetBoltMaterials(ctx, req.(*GetBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateBoltMaterials(ctx, req.(*CreateBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateBoltMaterials(ctx, req.(*UpdateBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteBoltMaterials(ctx, req.(*DeleteBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSizeInt(ctx, req.(*GetSizesIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllSizeInt(ctx, req.(*GetAllSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSizeInt(ctx, req.(*CreateSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateManySizesInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizesIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateManySizesInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateManySizesInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateManySizesInt(ctx, req.(*CreateSizesIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdateSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSizeInt(ctx, req.(*UpdateSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSizeInt(ctx, req.(*DeleteSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteAllSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteAllSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteAllSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteAllSizeInt(ctx, req.(*DeleteAllSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_SendInterview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInterviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).SendInterview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/SendInterview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).SendInterview(ctx, req.(*SendInterviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetAllOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllOrders(ctx, req.(*GetAllOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/DeleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteOrder(ctx, req.(*DeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_SaveOrder_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SaveOrderRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProServiceServer).SaveOrder(m, &proServiceSaveOrderServer{stream})
}

type ProService_SaveOrderServer interface {
	Send(*FileDownloadResponse) error
	grpc.ServerStream
}

type proServiceSaveOrderServer struct {
	grpc.ServerStream
}

func (x *proServiceSaveOrderServer) Send(m *FileDownloadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProService_SendOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).SendOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/SendOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).SendOrder(ctx, req.(*SaveOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPositionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPositions(ctx, req.(*GetPositionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetCurPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurPositionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetCurPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/GetCurPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetCurPositions(ctx, req.(*GetCurPositionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_AddPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).AddPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/AddPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).AddPosition(ctx, req.(*AddPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/UpdatePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePosition(ctx, req.(*UpdatePositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_RemovePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).RemovePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProService/RemovePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).RemovePosition(ctx, req.(*RemovePositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProService",
	HandlerType: (*ProServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ProService_Ping_Handler,
		},
		{
			MethodName: "GetAllFlanges",
			Handler:    _ProService_GetAllFlanges_Handler,
		},
		{
			MethodName: "CreateFlange",
			Handler:    _ProService_CreateFlange_Handler,
		},
		{
			MethodName: "UpdateFlange",
			Handler:    _ProService_UpdateFlange_Handler,
		},
		{
			MethodName: "DeleteFlange",
			Handler:    _ProService_DeleteFlange_Handler,
		},
		{
			MethodName: "GetAllStands",
			Handler:    _ProService_GetAllStands_Handler,
		},
		{
			MethodName: "CreateStand",
			Handler:    _ProService_CreateStand_Handler,
		},
		{
			MethodName: "UpdateStand",
			Handler:    _ProService_UpdateStand_Handler,
		},
		{
			MethodName: "DeleteStand",
			Handler:    _ProService_DeleteStand_Handler,
		},
		{
			MethodName: "GetStFl",
			Handler:    _ProService_GetStFl_Handler,
		},
		{
			MethodName: "CreateStFl",
			Handler:    _ProService_CreateStFl_Handler,
		},
		{
			MethodName: "UpdateStFl",
			Handler:    _ProService_UpdateStFl_Handler,
		},
		{
			MethodName: "DeleteStFl",
			Handler:    _ProService_DeleteStFl_Handler,
		},
		{
			MethodName: "GetTypeFl",
			Handler:    _ProService_GetTypeFl_Handler,
		},
		{
			MethodName: "GetAllTypeFl",
			Handler:    _ProService_GetAllTypeFl_Handler,
		},
		{
			MethodName: "CreateTypeFl",
			Handler:    _ProService_CreateTypeFl_Handler,
		},
		{
			MethodName: "UpdateTypeFl",
			Handler:    _ProService_UpdateTypeFl_Handler,
		},
		{
			MethodName: "DeleteTypeFl",
			Handler:    _ProService_DeleteTypeFl_Handler,
		},
		{
			MethodName: "GetAllAdditional",
			Handler:    _ProService_GetAllAdditional_Handler,
		},
		{
			MethodName: "CreateAdditional",
			Handler:    _ProService_CreateAdditional_Handler,
		},
		{
			MethodName: "UpdateMat",
			Handler:    _ProService_UpdateMat_Handler,
		},
		{
			MethodName: "UpdateMod",
			Handler:    _ProService_UpdateMod_Handler,
		},
		{
			MethodName: "UpdateTemp",
			Handler:    _ProService_UpdateTemp_Handler,
		},
		{
			MethodName: "UpdateMoun",
			Handler:    _ProService_UpdateMoun_Handler,
		},
		{
			MethodName: "UpdateGrap",
			Handler:    _ProService_UpdateGrap_Handler,
		},
		{
			MethodName: "UpdateFillers",
			Handler:    _ProService_UpdateFillers_Handler,
		},
		{
			MethodName: "UpdateCoating",
			Handler:    _ProService_UpdateCoating_Handler,
		},
		{
			MethodName: "UpdateConstruction",
			Handler:    _ProService_UpdateConstruction_Handler,
		},
		{
			MethodName: "UpdateObturator",
			Handler:    _ProService_UpdateObturator_Handler,
		},
		{
			MethodName: "UpdateBasis",
			Handler:    _ProService_UpdateBasis_Handler,
		},
		{
			MethodName: "UpdatePObturator",
			Handler:    _ProService_UpdatePObturator_Handler,
		},
		{
			MethodName: "UpdateSealant",
			Handler:    _ProService_UpdateSealant_Handler,
		},
		{
			MethodName: "GetSizes",
			Handler:    _ProService_GetSizes_Handler,
		},
		{
			MethodName: "GetAllSizes",
			Handler:    _ProService_GetAllSizes_Handler,
		},
		{
			MethodName: "CreateSize",
			Handler:    _ProService_CreateSize_Handler,
		},
		{
			MethodName: "CreateManySizes",
			Handler:    _ProService_CreateManySizes_Handler,
		},
		{
			MethodName: "UpdateSize",
			Handler:    _ProService_UpdateSize_Handler,
		},
		{
			MethodName: "DeleteSize",
			Handler:    _ProService_DeleteSize_Handler,
		},
		{
			MethodName: "DeleteAllSize",
			Handler:    _ProService_DeleteAllSize_Handler,
		},
		{
			MethodName: "GetSNP",
			Handler:    _ProService_GetSNP_Handler,
		},
		{
			MethodName: "CreateSNP",
			Handler:    _ProService_CreateSNP_Handler,
		},
		{
			MethodName: "UpdateSNP",
			Handler:    _ProService_UpdateSNP_Handler,
		},
		{
			MethodName: "DeleteSNP",
			Handler:    _ProService_DeleteSNP_Handler,
		},
		{
			MethodName: "GetPutgImage",
			Handler:    _ProService_GetPutgImage_Handler,
		},
		{
			MethodName: "CreatePutgImage",
			Handler:    _ProService_CreatePutgImage_Handler,
		},
		{
			MethodName: "UpdatePutgImage",
			Handler:    _ProService_UpdatePutgImage_Handler,
		},
		{
			MethodName: "DeletePutgImage",
			Handler:    _ProService_DeletePutgImage_Handler,
		},
		{
			MethodName: "GetPutg",
			Handler:    _ProService_GetPutg_Handler,
		},
		{
			MethodName: "CreatePutg",
			Handler:    _ProService_CreatePutg_Handler,
		},
		{
			MethodName: "UpdatePutg",
			Handler:    _ProService_UpdatePutg_Handler,
		},
		{
			MethodName: "DeletePutg",
			Handler:    _ProService_DeletePutg_Handler,
		},
		{
			MethodName: "GetPutgmImage",
			Handler:    _ProService_GetPutgmImage_Handler,
		},
		{
			MethodName: "CreatePutgmImage",
			Handler:    _ProService_CreatePutgmImage_Handler,
		},
		{
			MethodName: "UpdatePutgmImage",
			Handler:    _ProService_UpdatePutgmImage_Handler,
		},
		{
			MethodName: "DeletePutgmImage",
			Handler:    _ProService_DeletePutgmImage_Handler,
		},
		{
			MethodName: "GetPutgm",
			Handler:    _ProService_GetPutgm_Handler,
		},
		{
			MethodName: "CreatePutgm",
			Handler:    _ProService_CreatePutgm_Handler,
		},
		{
			MethodName: "UpdatePutgm",
			Handler:    _ProService_UpdatePutgm_Handler,
		},
		{
			MethodName: "DeletePutgm",
			Handler:    _ProService_DeletePutgm_Handler,
		},
		{
			MethodName: "GetMaterials",
			Handler:    _ProService_GetMaterials_Handler,
		},
		{
			MethodName: "CreateMaterials",
			Handler:    _ProService_CreateMaterials_Handler,
		},
		{
			MethodName: "UpdateMaterials",
			Handler:    _ProService_UpdateMaterials_Handler,
		},
		{
			MethodName: "DeleteMaterials",
			Handler:    _ProService_DeleteMaterials_Handler,
		},
		{
			MethodName: "GetBoltMaterials",
			Handler:    _ProService_GetBoltMaterials_Handler,
		},
		{
			MethodName: "CreateBoltMaterials",
			Handler:    _ProService_CreateBoltMaterials_Handler,
		},
		{
			MethodName: "UpdateBoltMaterials",
			Handler:    _ProService_UpdateBoltMaterials_Handler,
		},
		{
			MethodName: "DeleteBoltMaterials",
			Handler:    _ProService_DeleteBoltMaterials_Handler,
		},
		{
			MethodName: "GetSizeInt",
			Handler:    _ProService_GetSizeInt_Handler,
		},
		{
			MethodName: "GetAllSizeInt",
			Handler:    _ProService_GetAllSizeInt_Handler,
		},
		{
			MethodName: "CreateSizeInt",
			Handler:    _ProService_CreateSizeInt_Handler,
		},
		{
			MethodName: "CreateManySizesInt",
			Handler:    _ProService_CreateManySizesInt_Handler,
		},
		{
			MethodName: "UpdateSizeInt",
			Handler:    _ProService_UpdateSizeInt_Handler,
		},
		{
			MethodName: "DeleteSizeInt",
			Handler:    _ProService_DeleteSizeInt_Handler,
		},
		{
			MethodName: "DeleteAllSizeInt",
			Handler:    _ProService_DeleteAllSizeInt_Handler,
		},
		{
			MethodName: "SendInterview",
			Handler:    _ProService_SendInterview_Handler,
		},
		{
			MethodName: "GetAllOrders",
			Handler:    _ProService_GetAllOrders_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _ProService_CreateOrder_Handler,
		},
		{
			MethodName: "DeleteOrder",
			Handler:    _ProService_DeleteOrder_Handler,
		},
		{
			MethodName: "SendOrder",
			Handler:    _ProService_SendOrder_Handler,
		},
		{
			MethodName: "GetPositions",
			Handler:    _ProService_GetPositions_Handler,
		},
		{
			MethodName: "GetCurPositions",
			Handler:    _ProService_GetCurPositions_Handler,
		},
		{
			MethodName: "AddPosition",
			Handler:    _ProService_AddPosition_Handler,
		},
		{
			MethodName: "UpdatePosition",
			Handler:    _ProService_UpdatePosition_Handler,
		},
		{
			MethodName: "RemovePosition",
			Handler:    _ProService_RemovePosition_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveOrder",
			Handler:       _ProService_SaveOrder_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/pro.proto",
}

func init() { proto1.RegisterFile("proto/pro.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 4976 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x4b, 0x73, 0x1c, 0x47,
	0x72, 0xde, 0x79, 0xcf, 0xe4, 0xcc, 0x00, 0x60, 0x13, 0x00, 0x1b, 0x43, 0x2e, 0x45, 0x96, 0xc4,
	0x15, 0x45, 0x4a, 0xa4, 0x08, 0x88, 0x96, 0x25, 0xae, 0x2c, 0x0d, 0x01, 0x81, 0xc2, 0x6a, 0x49,
	0x61, 0x07, 0x94, 0xb5, 0x92, 0x1d, 0x76, 0x34, 0xd0, 0x0d, 0xa0, 0xad, 0x99, 0xee, 0xd9, 0xee,
	0x1e, 0xd2, 0x60, 0x84, 0x7d, 0x70, 0xc4, 0x6e, 0xec, 0xc9, 0xe1, 0xf0, 0xc5, 0x3e, 0xad, 0x6f,
	0x3e, 0xfa, 0xec, 0xbb, 0xff, 0x81, 0x7d, 0xf1, 0xc1, 0xbe, 0xf8, 0x0f, 0xd8, 0x11, 0xfe, 0x03,
	0x8e, 0x7a, 0x3f, 0xfa, 0x31, 0x0d, 0x02, 0xf2, 0x2a, 0x62, 0x79, 0x9a, 0xa9, 0xea, 0xca, 0xec,
	0xec, 0xaf, 0xaa, 0x32, 0xb3, 0x2a, 0xb3, 0x0a, 0x16, 0xa7, 0x51, 0x98, 0x84, 0x77, 0xa7, 0x51,
	0x78, 0x87, 0xfc, 0xb3, 0x1a, 0xe4, 0x07, 0xad, 0xc0, 0xc5, 0x47, 0x5e, 0x32, 0x1c, 0x8f, 0xb7,
	0xc7, 0x4e, 0x70, 0xe4, 0x8d, 0xbc, 0x5f, 0xcc, 0xbc, 0x38, 0x41, 0x43, 0xb8, 0xb8, 0x19, 0x79,
	0x4e, 0xe2, 0x69, 0xd5, 0xd6, 0x32, 0x34, 0x12, 0x3f, 0x19, 0x7b, 0x76, 0xe5, 0x5a, 0xe5, 0x66,
	0x67, 0x44, 0x0b, 0xb8, 0x36, 0x3e, 0x0e, 0xa3, 0xc4, 0xae, 0xd2, 0x5a, 0x52, 0x40, 0x3f, 0x83,
	0x8b, 0x5f, 0x4e, 0xdd, 0x14, 0x8b, 0x05, 0xa8, 0xfa, 0x2e, 0xa3, 0xaf, 0xfa, 0xae, 0x64, 0x59,
	0xcd, 0x64, 0x59, 0x53, 0x59, 0xde, 0x80, 0x8b, 0x5b, 0xde, 0xd8, 0x9b, 0xc3, 0x12, 0x6d, 0x41,
	0x93, 0x36, 0x38, 0xd3, 0xcb, 0x3e, 0x80, 0x05, 0xfe, 0x9a, 0x78, 0x1a, 0x06, 0xb1, 0x67, 0xbd,
	0x09, 0xad, 0x43, 0x52, 0x13, 0xdb, 0x95, 0x6b, 0xb5, 0x9b, 0xdd, 0xf5, 0x3e, 0xc5, 0xf2, 0x0e,
	0x6b, 0xc7, 0x9f, 0x22, 0x0b, 0x96, 0x1e, 0x79, 0xc9, 0x5e, 0xe2, 0x04, 0x6e, 0xcc, 0x11, 0xbd,
	0x05, 0x16, 0x45, 0x94, 0x54, 0x17, 0x02, 0x8a, 0x3e, 0x04, 0x8b, 0x42, 0xa7, 0xb5, 0x2d, 0xf5,
	0x31, 0xe8, 0x0d, 0xb0, 0x28, 0x46, 0x45, 0xb4, 0xe8, 0x1d, 0x68, 0x90, 0xe7, 0x25, 0x99, 0xde,
	0x87, 0x3e, 0x63, 0xc7, 0xa0, 0x78, 0x03, 0x9a, 0x31, 0xf9, 0x3c, 0x86, 0x44, 0x8f, 0x21, 0x41,
	0x5b, 0xb1, 0x67, 0x68, 0x09, 0x16, 0x08, 0x0e, 0xdb, 0x63, 0x8e, 0xc2, 0x0e, 0x5c, 0xe0, 0x28,
	0x88, 0x4a, 0xcb, 0x86, 0x16, 0x21, 0xd8, 0xe1, 0x82, 0xf0, 0xa2, 0x35, 0x80, 0x36, 0xc5, 0x74,
	0xc7, 0x65, 0x02, 0x89, 0x32, 0xfa, 0x1a, 0x2e, 0x70, 0x90, 0x24, 0x2b, 0xf3, 0x73, 0x14, 0xd6,
	0xd5, 0x7c, 0xd6, 0x35, 0x83, 0xf5, 0xeb, 0x70, 0x81, 0x63, 0x98, 0xcb, 0x1a, 0xfd, 0x4d, 0x05,
	0xea, 0xf8, 0xf9, 0x29, 0xde, 0x89, 0x07, 0x1a, 0xfe, 0x2b, 0x06, 0x1a, 0xe9, 0x02, 0x55, 0x92,
	0xba, 0x2e, 0x89, 0xb5, 0x0a, 0x4d, 0xfa, 0xdf, 0x6e, 0x90, 0x27, 0xac, 0x24, 0x87, 0x6c, 0x53,
	0x1d, 0xb2, 0x77, 0xa1, 0x47, 0x25, 0x66, 0xbd, 0xf4, 0x1a, 0xd4, 0xe3, 0xe4, 0x70, 0xcc, 0xfa,
	0xa8, 0x2b, 0xfa, 0x68, 0x7b, 0x3c, 0x22, 0x0f, 0xd8, 0x40, 0x7d, 0x7a, 0x32, 0xf5, 0x64, 0x17,
	0x4d, 0xf8, 0xd4, 0xd7, 0xaa, 0xf3, 0xa7, 0xbe, 0xeb, 0xc5, 0x07, 0x11, 0x1f, 0x2e, 0xa4, 0x90,
	0x3d, 0xa1, 0x70, 0xed, 0xbe, 0x13, 0xfb, 0x31, 0xf9, 0xc8, 0xf6, 0x88, 0x16, 0xd0, 0x5f, 0x70,
	0x35, 0xa1, 0xbf, 0xae, 0xf4, 0xcc, 0xa5, 0xaf, 0xaf, 0x65, 0xbe, 0xbe, 0x9e, 0xf9, 0xfa, 0x86,
	0xfa, 0x7a, 0xa1, 0x52, 0x0a, 0x5f, 0x8f, 0xbe, 0x81, 0x26, 0x6d, 0x70, 0xfe, 0x82, 0xa1, 0xf7,
	0x61, 0x81, 0xbf, 0x9c, 0xf5, 0xdb, 0x0d, 0x68, 0x26, 0xa4, 0xc6, 0xd0, 0x33, 0xac, 0x19, 0x7b,
	0xc8, 0x7a, 0x6f, 0x38, 0x1e, 0x0f, 0x5d, 0x3e, 0xd1, 0xd1, 0x87, 0xd0, 0x1b, 0xba, 0xee, 0x63,
	0x27, 0xf1, 0x22, 0xdf, 0x19, 0xc7, 0xf2, 0x95, 0x15, 0x03, 0x8b, 0x8c, 0x59, 0xfe, 0x7b, 0xb0,
	0x30, 0x74, 0xdd, 0xa7, 0xde, 0x64, 0xea, 0x45, 0x4e, 0x32, 0x8b, 0x4a, 0xea, 0x4f, 0x74, 0x08,
	0x4d, 0xfc, 0xce, 0x30, 0x53, 0x9b, 0xa4, 0x2d, 0x83, 0xe4, 0x52, 0x53, 0x21, 0xbb, 0x06, 0x5d,
	0x82, 0x92, 0x3f, 0x4d, 0xfc, 0x30, 0x60, 0x10, 0xa9, 0x55, 0xe8, 0x2e, 0xb4, 0xc8, 0x7b, 0x66,
	0x41, 0x49, 0xc1, 0xbe, 0x22, 0x04, 0x8f, 0x22, 0x67, 0x7a, 0x1a, 0x1c, 0x4c, 0x49, 0x6a, 0x69,
	0x49, 0xbe, 0x86, 0xce, 0xd0, 0x75, 0xb7, 0xfd, 0xf1, 0xd8, 0x8b, 0xce, 0x99, 0xf5, 0x9f, 0x01,
	0x0c, 0x5d, 0x77, 0x33, 0x74, 0x12, 0x3f, 0x38, 0xfa, 0x8e, 0x01, 0xfd, 0x53, 0x58, 0x24, 0xef,
	0x0a, 0xe2, 0x24, 0x9a, 0x1d, 0xe0, 0xaa, 0x73, 0xfe, 0x98, 0x3f, 0x27, 0xa3, 0xf1, 0x8b, 0xfd,
	0x64, 0x16, 0x39, 0x49, 0x78, 0xce, 0x50, 0x11, 0xc5, 0x19, 0x46, 0x5b, 0x64, 0x9e, 0x71, 0xc5,
	0xc9, 0xca, 0xe8, 0xe7, 0xd0, 0x1e, 0xba, 0xee, 0x43, 0x3c, 0xc7, 0xcf, 0xf9, 0x9b, 0x4e, 0xa0,
	0x3f, 0x74, 0xdd, 0xdd, 0xdf, 0xc6, 0x47, 0xfd, 0xaa, 0x42, 0x06, 0xc7, 0x9e, 0xe7, 0x8c, 0x9d,
	0x20, 0xf9, 0x6e, 0x07, 0x87, 0x26, 0x48, 0xc3, 0x10, 0xe4, 0xbf, 0xaa, 0xb0, 0x44, 0x8d, 0x84,
	0x54, 0x3d, 0xd6, 0x15, 0xe8, 0x4c, 0xb8, 0xde, 0x61, 0x52, 0xc9, 0x0a, 0x6b, 0x09, 0x6a, 0x93,
	0x90, 0x5b, 0x44, 0xfc, 0x17, 0x8b, 0x90, 0x48, 0x5d, 0xc3, 0xb1, 0x50, 0xaa, 0xb0, 0x08, 0x93,
	0x70, 0x16, 0xe0, 0x99, 0xc0, 0xb1, 0xe0, 0x65, 0xfc, 0xec, 0x28, 0x72, 0xa6, 0xc7, 0x7e, 0xc2,
	0x6d, 0xa3, 0x28, 0x63, 0x0b, 0x7c, 0x48, 0xe6, 0x66, 0xcc, 0xec, 0x23, 0x2f, 0xe2, 0x27, 0x07,
	0x74, 0x6a, 0xd9, 0x2d, 0xfa, 0x84, 0x15, 0x2d, 0x04, 0xbd, 0x03, 0x65, 0x22, 0xd8, 0x6d, 0xf2,
	0x58, 0xab, 0xc3, 0x5f, 0x18, 0xf2, 0x6e, 0xb7, 0x3b, 0xf4, 0x0b, 0x43, 0x75, 0x1c, 0x50, 0x03,
	0x03, 0x14, 0x68, 0x52, 0xb0, 0xae, 0x02, 0x4c, 0xc5, 0x58, 0xb1, 0xbb, 0xe4, 0x91, 0x52, 0x43,
	0xbc, 0x05, 0xda, 0x9f, 0x76, 0x8f, 0x79, 0x0b, 0xb4, 0x88, 0x7e, 0x5d, 0xe1, 0xa6, 0x91, 0x6a,
	0xf4, 0x3c, 0xd3, 0x78, 0x4f, 0xc5, 0xbd, 0x4a, 0x0c, 0xc6, 0x45, 0x66, 0x30, 0x54, 0x53, 0xa0,
	0x76, 0xc6, 0x2a, 0x35, 0x30, 0x9b, 0xc7, 0x0c, 0x75, 0x56, 0xc2, 0xf5, 0x07, 0xc7, 0xc4, 0xdd,
	0xa0, 0x70, 0xb3, 0x12, 0x7a, 0xa6, 0x4a, 0x12, 0xe6, 0x7a, 0xa4, 0xaf, 0xf1, 0x3e, 0x56, 0x8d,
	0x16, 0x23, 0x21, 0x5d, 0x7e, 0xda, 0xf7, 0xfe, 0xb5, 0x0a, 0xc1, 0x53, 0x6f, 0x92, 0xf7, 0xe2,
	0xf7, 0xf5, 0xa1, 0x44, 0x05, 0x58, 0x91, 0x02, 0x28, 0x36, 0x4d, 0x1f, 0x61, 0xa7, 0x15, 0xe8,
	0xaf, 0x2a, 0xb0, 0xac, 0x20, 0x31, 0x0b, 0xf2, 0x24, 0xba, 0xa5, 0x0c, 0x5d, 0x2a, 0xce, 0x82,
	0x8a, 0xc7, 0x2c, 0x50, 0x86, 0xf2, 0x99, 0x84, 0xc0, 0xd6, 0xad, 0x40, 0x08, 0x31, 0x47, 0x52,
	0x42, 0x10, 0x42, 0x39, 0x67, 0x4e, 0x2b, 0xc4, 0x2f, 0x2b, 0x70, 0x49, 0x08, 0x41, 0x2d, 0x61,
	0x9c, 0x2f, 0x87, 0x98, 0x8f, 0x54, 0x8c, 0x25, 0x29, 0x06, 0x25, 0x95, 0x33, 0xf4, 0xb4, 0x72,
	0xfc, 0x4a, 0x95, 0x83, 0x99, 0xcd, 0x3c, 0x39, 0x6e, 0xcb, 0xd9, 0x4f, 0xe5, 0xb8, 0x20, 0xe5,
	0xe0, 0xa4, 0x42, 0x21, 0xbc, 0xc4, 0x58, 0xbd, 0xa2, 0x08, 0x22, 0xd5, 0x46, 0x9e, 0x34, 0x77,
	0xa0, 0x49, 0xb5, 0x0b, 0x13, 0x66, 0x55, 0x15, 0x46, 0x21, 0x67, 0xad, 0x5e, 0x46, 0xa0, 0x35,
	0x21, 0x90, 0x50, 0x38, 0x05, 0x5a, 0x44, 0xea, 0xb6, 0x94, 0x16, 0x91, 0xe4, 0x8a, 0xc2, 0x3b,
	0xad, 0x40, 0x7f, 0x09, 0x2b, 0x42, 0x1e, 0x62, 0x99, 0xf3, 0x64, 0xb9, 0xc1, 0x35, 0x29, 0x95,
	0x63, 0x51, 0xca, 0x41, 0xc9, 0x98, 0x6a, 0x3d, 0xed, 0xfb, 0xff, 0xb6, 0x02, 0x03, 0x21, 0xc0,
	0xee, 0x5c, 0x44, 0xde, 0xd3, 0x34, 0x37, 0x15, 0x65, 0x59, 0x8a, 0xa2, 0x30, 0x50, 0xf5, 0xf9,
	0x99, 0xc6, 0x2f, 0xb3, 0xec, 0x05, 0xe3, 0x97, 0xdb, 0x8a, 0xd4, 0xf8, 0xe5, 0xa4, 0xbc, 0xc5,
	0xa9, 0x05, 0xf9, 0xb7, 0x3a, 0x71, 0x2e, 0x7c, 0x3c, 0xe6, 0x9c, 0xf1, 0x79, 0x58, 0x19, 0x66,
	0x0e, 0x6a, 0xb9, 0xe6, 0xc0, 0x50, 0xdb, 0xf5, 0xd2, 0x6a, 0x5b, 0xd5, 0xae, 0x8d, 0x39, 0xda,
	0x55, 0x55, 0x82, 0xcd, 0x39, 0x4a, 0x50, 0x51, 0x54, 0xad, 0x79, 0x8a, 0x4a, 0x51, 0x26, 0xed,
	0xb9, 0xca, 0xe4, 0x43, 0xc3, 0xbb, 0xe8, 0x14, 0xce, 0x78, 0xdd, 0xeb, 0xd0, 0x66, 0x26, 0x94,
	0x9a, 0x99, 0x62, 0x02, 0x75, 0x0b, 0x27, 0x90, 0x3e, 0xc2, 0x7b, 0x25, 0x47, 0xb8, 0x32, 0x0a,
	0xfb, 0xf3, 0x46, 0x21, 0xda, 0x01, 0x4b, 0x0e, 0x2a, 0xb1, 0xc0, 0xdd, 0x80, 0xae, 0x23, 0x6a,
	0xf9, 0x1e, 0x92, 0xc2, 0x86, 0xb7, 0x57, 0x5b, 0xa1, 0xdb, 0xb0, 0xb8, 0x37, 0x3b, 0x38, 0xf0,
	0xe2, 0x58, 0xf0, 0xc1, 0xce, 0x13, 0xad, 0x22, 0x23, 0xb5, 0x3d, 0xe2, 0x45, 0xf4, 0x1c, 0x16,
	0x1f, 0x79, 0xc9, 0x9e, 0xff, 0xc2, 0x13, 0x5a, 0x46, 0xee, 0xa5, 0x54, 0xb4, 0xbd, 0x94, 0x01,
	0xb4, 0xe9, 0x82, 0x5a, 0x6e, 0x32, 0xf1, 0x32, 0x9f, 0x44, 0xbb, 0x91, 0x3a, 0x89, 0x76, 0x23,
	0x75, 0x8f, 0xa7, 0xae, 0xed, 0xf1, 0xa0, 0x7f, 0xa8, 0x8a, 0x2d, 0x2e, 0xff, 0x85, 0x77, 0x96,
	0x77, 0x2f, 0x40, 0xd5, 0xe5, 0x4b, 0x84, 0xaa, 0x4b, 0xd6, 0xbc, 0x53, 0xee, 0xa9, 0x57, 0xa7,
	0x81, 0x22, 0x5b, 0x23, 0x4f, 0xb6, 0xa6, 0xbe, 0xff, 0x84, 0x39, 0xbe, 0xc7, 0x1c, 0xdf, 0xaa,
	0xfb, 0x1e, 0x29, 0x6f, 0x30, 0x4f, 0xb7, 0xea, 0x6e, 0x90, 0xf2, 0x3a, 0x73, 0x6c, 0xab, 0xee,
	0x3a, 0x29, 0xdf, 0x63, 0xee, 0x6c, 0xd5, 0xbd, 0x67, 0xf5, 0xa0, 0x72, 0xcc, 0x5c, 0xd8, 0xca,
	0x31, 0x7e, 0x1a, 0xaf, 0x33, 0xa7, 0xb5, 0x1a, 0x93, 0xd6, 0xf1, 0x86, 0xdd, 0x67, 0xe5, 0x0d,
	0x2c, 0x5f, 0x30, 0x9b, 0xec, 0x7b, 0x91, 0xbd, 0x70, 0xad, 0x72, 0xb3, 0x31, 0x62, 0x25, 0xb4,
	0x25, 0x76, 0x42, 0xd5, 0xde, 0xb9, 0x03, 0x8d, 0x18, 0x97, 0xd9, 0x60, 0xb0, 0xd9, 0x60, 0x48,
	0x41, 0x39, 0xa2, 0xcd, 0xd0, 0xdf, 0x55, 0xc5, 0xfe, 0xdf, 0xd9, 0x71, 0xf6, 0xf9, 0x96, 0x1c,
	0xd6, 0x74, 0x14, 0xf7, 0xba, 0x81, 0x7b, 0x23, 0x03, 0xf7, 0x66, 0x1e, 0xee, 0xad, 0x2c, 0xdc,
	0xdb, 0x06, 0xee, 0x1d, 0x03, 0x77, 0x30, 0x70, 0xef, 0xea, 0xb8, 0xf7, 0x74, 0xdc, 0xfb, 0x06,
	0xee, 0x0b, 0x1c, 0x77, 0xf4, 0x40, 0xec, 0x5e, 0x96, 0x00, 0x86, 0x7e, 0x7c, 0x55, 0x6c, 0x74,
	0x6d, 0xc3, 0x32, 0x25, 0x1e, 0x8e, 0xc7, 0x65, 0xe8, 0x25, 0x18, 0x55, 0x15, 0x0c, 0xf4, 0xef,
	0x15, 0xa8, 0x63, 0xfa, 0x94, 0x1d, 0xa1, 0xe8, 0x56, 0x0d, 0x74, 0x6b, 0x02, 0x5d, 0x8a, 0x55,
	0xdd, 0xc0, 0xaa, 0x61, 0x60, 0xd5, 0x34, 0xb0, 0x6a, 0xe9, 0x58, 0xb5, 0x75, 0xac, 0x3a, 0x06,
	0x56, 0xa0, 0x8e, 0x51, 0x26, 0x7e, 0x57, 0xeb, 0x4b, 0x75, 0xbc, 0xf4, 0xf4, 0xf1, 0x82, 0x96,
	0xa1, 0xba, 0x15, 0xb0, 0xef, 0xa8, 0xf0, 0xef, 0x40, 0x3f, 0x85, 0x1e, 0xc5, 0x8b, 0xa9, 0xa6,
	0xeb, 0xfa, 0x78, 0x16, 0x9b, 0xaf, 0xb8, 0x0d, 0x7d, 0x62, 0xad, 0x31, 0x28, 0xf0, 0xf3, 0x0e,
	0x7b, 0xbe, 0x15, 0x10, 0x6e, 0x0f, 0xa0, 0xc9, 0x76, 0x97, 0x4c, 0xfc, 0xae, 0x43, 0x03, 0x5b,
	0x42, 0x6e, 0x83, 0x39, 0x5f, 0x6c, 0x2a, 0x47, 0xf4, 0x09, 0xba, 0x05, 0x75, 0x5c, 0x4c, 0x91,
	0x5a, 0x50, 0x9f, 0x84, 0x2e, 0xa5, 0xec, 0x8c, 0xc8, 0x7f, 0xf4, 0x09, 0xf4, 0xf6, 0x82, 0xe9,
	0x63, 0x75, 0x65, 0xf8, 0xcc, 0x19, 0xcf, 0x98, 0xdc, 0x9d, 0x11, 0x2b, 0xe1, 0xc1, 0xed, 0x7a,
	0x87, 0xce, 0x6c, 0xcc, 0x77, 0x17, 0x78, 0x11, 0x7d, 0x0a, 0x7d, 0xac, 0x69, 0x9f, 0xec, 0x9e,
	0x6d, 0x3b, 0xff, 0x5f, 0xc5, 0x96, 0xc2, 0x59, 0x59, 0x69, 0x9d, 0x57, 0xcb, 0x55, 0xe8, 0x75,
	0xad, 0xc3, 0xdf, 0x94, 0x96, 0xbf, 0xa1, 0xc7, 0x76, 0x0c, 0xb3, 0xff, 0x16, 0x34, 0x0e, 0x23,
	0x67, 0xe2, 0x91, 0x21, 0x28, 0x2d, 0xb1, 0x0a, 0xe2, 0x88, 0xb6, 0xb0, 0x5e, 0x87, 0xaa, 0x1f,
	0x91, 0xa1, 0x99, 0xd3, 0xae, 0xea, 0x47, 0xb8, 0x51, 0x18, 0x91, 0x01, 0x9b, 0xd7, 0x28, 0x8c,
	0xb4, 0x8d, 0x90, 0x0e, 0xe9, 0x97, 0xec, 0x8d, 0x10, 0xa0, 0xcf, 0x78, 0x99, 0xec, 0xd3, 0x30,
	0x25, 0x29, 0x41, 0x3d, 0x97, 0x18, 0x89, 0x06, 0x72, 0x3d, 0x17, 0xe4, 0x46, 0x1e, 0xc8, 0xcd,
	0x72, 0x20, 0xb7, 0x4a, 0x82, 0xdc, 0x2e, 0x03, 0x72, 0xa7, 0x3c, 0xc8, 0x50, 0x00, 0x72, 0xd7,
	0x00, 0x19, 0xc1, 0x12, 0xd3, 0xb7, 0xb9, 0x18, 0x63, 0xaf, 0xa0, 0xb6, 0xf7, 0x64, 0x37, 0x85,
	0xfd, 0xcb, 0xf8, 0x1e, 0x0a, 0x8a, 0xf5, 0x72, 0x28, 0x36, 0x4a, 0xa2, 0xd8, 0x2c, 0x83, 0x62,
	0xab, 0x3c, 0x8a, 0xed, 0x02, 0x14, 0x3b, 0x06, 0x8a, 0xb7, 0xa1, 0x4b, 0xf0, 0x63, 0xea, 0xf3,
	0x0a, 0xd4, 0xe2, 0x60, 0xca, 0x94, 0x27, 0xf0, 0x97, 0x3d, 0xd9, 0x1d, 0xe1, 0x6a, 0xf4, 0x35,
	0x74, 0x76, 0x67, 0xc9, 0xd1, 0xce, 0xc4, 0xc9, 0x08, 0xf2, 0x5a, 0x50, 0x3f, 0x0c, 0xa3, 0x09,
	0xc3, 0x93, 0xfc, 0xc7, 0x58, 0x1e, 0x39, 0xf1, 0xb7, 0x1e, 0x0f, 0x49, 0xb1, 0x92, 0xb5, 0x04,
	0xb5, 0x59, 0x34, 0x66, 0x03, 0x18, 0xff, 0x45, 0x6f, 0x91, 0x80, 0xb8, 0xe0, 0xce, 0x3b, 0x94,
	0x33, 0xad, 0x48, 0xa6, 0xe8, 0x0f, 0x61, 0x95, 0x6a, 0xac, 0x32, 0xad, 0x15, 0x11, 0xaa, 0x59,
	0x22, 0xd4, 0xa4, 0x08, 0x87, 0xb0, 0x4a, 0x27, 0x6d, 0x8a, 0xef, 0xf9, 0x7e, 0xea, 0x4d, 0x58,
	0xa5, 0x03, 0x77, 0xde, 0x7b, 0xd0, 0x26, 0x5c, 0x50, 0xda, 0xb0, 0x2e, 0xba, 0x03, 0x9d, 0x29,
	0xaf, 0x64, 0x1d, 0xc5, 0x97, 0x4b, 0xb2, 0xb1, 0x6c, 0x82, 0x86, 0xd0, 0xc6, 0xf5, 0xc4, 0x34,
	0x59, 0x50, 0xc7, 0x3d, 0xcf, 0x01, 0xc2, 0xff, 0xcb, 0x58, 0xb6, 0x3f, 0xa2, 0x72, 0xa8, 0x8b,
	0xa5, 0x38, 0x93, 0xd7, 0x3a, 0xf4, 0x94, 0xf5, 0x62, 0x6c, 0xec, 0x7e, 0x6d, 0x86, 0x01, 0xe1,
	0xaa, 0xb5, 0x41, 0x23, 0x68, 0xb1, 0x07, 0x98, 0x25, 0x7e, 0xc4, 0x59, 0xe2, 0xff, 0xd6, 0x06,
	0xf4, 0xd5, 0x65, 0x59, 0x6c, 0x6c, 0x73, 0x52, 0x99, 0x46, 0x7a, 0x1b, 0xf4, 0x04, 0x9a, 0xf4,
	0x41, 0x4e, 0x94, 0xe0, 0x0e, 0x80, 0x58, 0xb5, 0x99, 0x52, 0xe2, 0x2f, 0xfd, 0x62, 0x3f, 0x19,
	0x29, 0x2d, 0xd0, 0x03, 0x68, 0xb1, 0xea, 0x1c, 0x86, 0x03, 0x68, 0xfb, 0x18, 0xed, 0x2f, 0xa3,
	0x31, 0x57, 0x28, 0xbc, 0x8c, 0x1c, 0xe8, 0x63, 0xe2, 0x33, 0x18, 0x7b, 0xeb, 0xaa, 0x26, 0x6f,
	0x8d, 0x50, 0xa9, 0xf2, 0x7d, 0x42, 0x22, 0xfe, 0xf8, 0x2d, 0x45, 0x53, 0xa1, 0xc8, 0x0f, 0xf8,
	0x75, 0x9d, 0xaf, 0x9f, 0x54, 0x2e, 0x2a, 0x45, 0xa5, 0xc0, 0x12, 0x95, 0xd5, 0xa1, 0x5c, 0xaa,
	0xba, 0x22, 0xd5, 0x8f, 0x8d, 0x35, 0x7a, 0x43, 0x5b, 0x88, 0xa4, 0xc6, 0x9d, 0xb1, 0x4a, 0xdf,
	0x30, 0x46, 0x5c, 0x53, 0x5b, 0x79, 0xf3, 0x81, 0xaf, 0x0f, 0x39, 0x6b, 0x1d, 0x3a, 0x91, 0xe7,
	0x07, 0x87, 0x61, 0x74, 0xc0, 0x6d, 0xdd, 0xb2, 0x42, 0xa1, 0xec, 0xaa, 0x88, 0x66, 0x98, 0x46,
	0x6e, 0x07, 0xb4, 0x8b, 0x68, 0xe4, 0x7e, 0xc0, 0xbb, 0xd0, 0xf6, 0x7f, 0xea, 0x4f, 0xfc, 0xc4,
	0xe3, 0x56, 0x30, 0x9b, 0x44, 0xb4, 0xc2, 0x14, 0x21, 0xa7, 0x80, 0x22, 0x0a, 0xde, 0x4a, 0x0d,
	0xad, 0x50, 0x0b, 0x29, 0x36, 0x3f, 0x54, 0x93, 0xd0, 0x2b, 0x30, 0x09, 0x7d, 0xc3, 0x24, 0xfc,
	0x7d, 0x9d, 0x2f, 0xf1, 0xd4, 0xa1, 0x70, 0x1e, 0x26, 0xf4, 0x55, 0xf7, 0x7f, 0xff, 0xbb, 0x5f,
	0x9b, 0xf3, 0x0b, 0x79, 0x19, 0x3a, 0x05, 0x23, 0x03, 0xfd, 0x77, 0x0d, 0xea, 0xf8, 0xf9, 0xab,
	0x21, 0xf3, 0xbb, 0xa2, 0x31, 0xee, 0x42, 0x8f, 0x0e, 0x08, 0x99, 0x00, 0x85, 0xfd, 0x0f, 0x63,
	0x0d, 0x4e, 0x9a, 0x90, 0x07, 0xe8, 0x1b, 0x00, 0x5c, 0x9a, 0x7c, 0x17, 0x9e, 0xe4, 0x2d, 0x58,
	0x66, 0xb6, 0x70, 0x32, 0xd7, 0x95, 0xfc, 0x0a, 0x2e, 0x49, 0xa3, 0x37, 0x39, 0x47, 0x5f, 0xf2,
	0x88, 0x47, 0x17, 0xd2, 0x8c, 0xcf, 0xdb, 0x6f, 0xbe, 0x24, 0x67, 0x64, 0xe1, 0x8b, 0xd0, 0x23,
	0xb0, 0xd4, 0x46, 0xac, 0xaf, 0xee, 0x01, 0x4c, 0x45, 0xad, 0xb1, 0x25, 0xac, 0x34, 0x57, 0x1a,
	0xa1, 0x11, 0x63, 0x34, 0xdf, 0x1f, 0xbc, 0xa9, 0x47, 0x94, 0x2c, 0x95, 0x2f, 0xf3, 0xdc, 0x58,
	0x42, 0xd8, 0x08, 0xba, 0x4a, 0xad, 0x0c, 0xea, 0x57, 0xd4, 0xa0, 0xfe, 0x3b, 0xe9, 0x60, 0x99,
	0x3a, 0x6f, 0x27, 0xd8, 0x6d, 0x93, 0x2d, 0xd0, 0x53, 0xea, 0xf9, 0xe2, 0x6a, 0x3d, 0x87, 0xa0,
	0x62, 0xe6, 0x10, 0xdc, 0x32, 0x23, 0x3c, 0xaa, 0x47, 0x3d, 0xd9, 0xf3, 0x9c, 0xb1, 0xdc, 0x5a,
	0x7f, 0x40, 0x17, 0x41, 0xa4, 0x16, 0x7f, 0x34, 0xae, 0xe7, 0x1f, 0x8d, 0xff, 0x17, 0xfa, 0x82,
	0x43, 0xb2, 0x3f, 0x4e, 0xe8, 0x5f, 0xd6, 0x53, 0xfb, 0x4d, 0x8d, 0x6f, 0xe4, 0x6a, 0x6c, 0xfe,
	0x3f, 0x5c, 0xb5, 0x8f, 0x32, 0x15, 0xef, 0x5a, 0xba, 0x57, 0xcf, 0x51, 0xf3, 0xde, 0xe2, 0x23,
	0xa1, 0x48, 0xeb, 0xb2, 0xf1, 0xf1, 0x32, 0x1a, 0x57, 0xd1, 0x86, 0x9d, 0x7c, 0x6d, 0x78, 0x9a,
	0x8d, 0x89, 0x7f, 0xaa, 0xf1, 0x3c, 0x62, 0xad, 0x83, 0xbe, 0x2b, 0x6b, 0xf8, 0xaa, 0x53, 0x4a,
	0x74, 0x8a, 0x36, 0x3d, 0x7a, 0xc6, 0x8c, 0x12, 0xb9, 0xdb, 0x45, 0xfd, 0x85, 0x7e, 0x59, 0x83,
	0x06, 0x69, 0xf0, 0xaa, 0x27, 0x7f, 0xab, 0xd3, 0x6b, 0x83, 0x2e, 0xa7, 0x27, 0xc2, 0x82, 0x21,
	0x68, 0x10, 0xe3, 0x64, 0xe4, 0xc4, 0xd3, 0x46, 0xf4, 0x11, 0x3b, 0x6f, 0x21, 0x25, 0x64, 0x69,
	0xbb, 0x9f, 0xf1, 0xad, 0x24, 0xf3, 0x49, 0x4e, 0xde, 0xb5, 0x0d, 0x2d, 0xdc, 0x7f, 0x8f, 0x1d,
	0xb1, 0x42, 0x67, 0x45, 0xf4, 0x73, 0xbe, 0x79, 0x94, 0xe2, 0x54, 0x2e, 0x73, 0x59, 0xe1, 0x5c,
	0xd3, 0x39, 0x8b, 0xed, 0xa2, 0x79, 0x9c, 0xd1, 0xe7, 0xd0, 0x91, 0x9b, 0x0c, 0x67, 0x7d, 0xed,
	0x26, 0x5c, 0x50, 0x5e, 0x28, 0xf7, 0x9e, 0xd4, 0x5c, 0x43, 0xd5, 0x52, 0x66, 0xa5, 0x22, 0xa0,
	0xfb, 0x70, 0xe9, 0x91, 0x97, 0x3c, 0x0c, 0xc7, 0x29, 0xe8, 0x8b, 0xec, 0x15, 0x7a, 0x02, 0x03,
	0xda, 0x2d, 0x99, 0x94, 0xd9, 0x5d, 0x53, 0x64, 0x32, 0xff, 0x84, 0x27, 0xa0, 0x64, 0xf2, 0x2b,
	0x87, 0x54, 0xd1, 0xc1, 0x85, 0xb7, 0x61, 0x40, 0xbb, 0xa8, 0x0c, 0x7f, 0x74, 0x1f, 0xfa, 0x5a,
	0xbb, 0x92, 0x59, 0xd5, 0x9f, 0xc3, 0x8a, 0xc1, 0x9e, 0x75, 0xca, 0x7a, 0xba, 0x53, 0xf8, 0xb4,
	0xd4, 0x09, 0x94, 0x8e, 0xf9, 0x06, 0x2c, 0x1e, 0xa7, 0xdf, 0x91, 0x89, 0x2f, 0x45, 0x3e, 0xc4,
	0xaa, 0x48, 0x8e, 0x57, 0x22, 0x8e, 0xdb, 0x63, 0xec, 0x92, 0x46, 0xe1, 0x73, 0x02, 0x49, 0x63,
	0x84, 0xff, 0xa2, 0x9f, 0x10, 0x07, 0x9c, 0x05, 0x32, 0xcf, 0xc6, 0x1d, 0xfd, 0x63, 0x15, 0x96,
	0x65, 0x2c, 0xfa, 0x8c, 0xa2, 0x2e, 0x40, 0xd5, 0x3d, 0x11, 0x91, 0xfd, 0x13, 0x12, 0x03, 0x3d,
	0x11, 0x91, 0xfd, 0x13, 0x16, 0xd3, 0x6c, 0x88, 0x98, 0xa6, 0x19, 0xf3, 0xec, 0x41, 0x85, 0xc7,
	0x98, 0x2b, 0x2e, 0xfe, 0x70, 0xf7, 0xcb, 0x29, 0x8b, 0x79, 0xe2, 0xbf, 0xb8, 0xfd, 0xf1, 0x3d,
	0x1e, 0xf5, 0x3c, 0x26, 0xf4, 0xc7, 0x22, 0xbe, 0x7c, 0xbc, 0x8e, 0x75, 0xfe, 0x7e, 0x38, 0x4e,
	0x58, 0xcc, 0x93, 0xfc, 0xc7, 0x7e, 0xe9, 0x01, 0xd6, 0x7a, 0xb8, 0xa7, 0x88, 0x61, 0x6a, 0x8c,
	0x64, 0x85, 0x12, 0xcb, 0xef, 0xab, 0xb1, 0x7c, 0x0e, 0xfa, 0x82, 0x0a, 0xfa, 0x8a, 0x12, 0xdd,
	0x57, 0x80, 0xba, 0xa7, 0x07, 0x44, 0x2f, 0xa7, 0x02, 0xfc, 0xb2, 0x2d, 0x8f, 0xf1, 0xff, 0xa6,
	0xca, 0x13, 0x1d, 0x0d, 0xd0, 0x33, 0x0c, 0x5f, 0x6e, 0x34, 0x50, 0x76, 0x42, 0x2d, 0xa3, 0x13,
	0xea, 0x46, 0x27, 0x34, 0x8c, 0x4e, 0x68, 0x1a, 0x9d, 0xd0, 0x12, 0x9d, 0x90, 0x86, 0x9d, 0x74,
	0x4b, 0x87, 0x77, 0x0b, 0xed, 0x04, 0x30, 0x3a, 0xa1, 0x9b, 0xea, 0x84, 0x5e, 0x5e, 0x27, 0xf4,
	0xcd, 0x4e, 0x48, 0x83, 0xfd, 0x23, 0x1e, 0xad, 0x2f, 0xc6, 0x07, 0xab, 0x3f, 0x2d, 0xaa, 0x5f,
	0x6e, 0xfc, 0xa2, 0xff, 0xac, 0x40, 0x8b, 0x35, 0xcf, 0x8c, 0xe3, 0x9f, 0x88, 0x38, 0x3e, 0x87,
	0xaf, 0x26, 0xe0, 0x63, 0xf0, 0xd4, 0xb5, 0x51, 0x79, 0x8a, 0x51, 0x4d, 0xe1, 0x6b, 0x1b, 0xf0,
	0x75, 0x52, 0xf0, 0x41, 0x1e, 0x7c, 0xdd, 0x1c, 0xf8, 0x7a, 0x12, 0xbe, 0x11, 0x2c, 0x0a, 0x34,
	0xc4, 0xc1, 0x36, 0x6d, 0x94, 0x2e, 0x28, 0x61, 0x7b, 0xdc, 0x6c, 0x7e, 0xe4, 0xfe, 0x7f, 0x3b,
	0xb0, 0xbc, 0xe7, 0x05, 0xee, 0x4e, 0x90, 0x78, 0xd1, 0x33, 0xdf, 0x7b, 0xce, 0x81, 0x46, 0xd0,
	0x0b, 0xa3, 0x23, 0x27, 0xf0, 0x5f, 0x38, 0xc4, 0xa9, 0xa2, 0x50, 0x6a, 0x75, 0xf8, 0xa3, 0x02,
	0x67, 0xc2, 0xf5, 0x2d, 0xf9, 0x8f, 0x95, 0xb0, 0x37, 0x71, 0x7c, 0x3e, 0x7c, 0x69, 0x01, 0xb7,
	0x3c, 0xf0, 0x13, 0x3e, 0x7e, 0xc9, 0x7f, 0xdc, 0x95, 0xd3, 0x30, 0xf6, 0x99, 0xcb, 0x46, 0xba,
	0x92, 0x97, 0x31, 0x97, 0xe9, 0x71, 0x18, 0x78, 0xfc, 0xc0, 0x18, 0x29, 0xd0, 0x14, 0xfc, 0x83,
	0xe3, 0x69, 0x14, 0x92, 0x1c, 0xaa, 0x16, 0x4f, 0xc1, 0x17, 0x55, 0x18, 0x52, 0xef, 0x17, 0x33,
	0x7f, 0x3a, 0xf1, 0x82, 0x84, 0xf5, 0x86, 0xac, 0x10, 0xab, 0xce, 0x8e, 0xbe, 0xea, 0xc4, 0xde,
	0xe0, 0x6c, 0xc2, 0xf6, 0x81, 0x3a, 0x23, 0x51, 0x26, 0x89, 0xf9, 0xce, 0x41, 0x12, 0x46, 0x27,
	0x6c, 0x22, 0xf0, 0x22, 0x7e, 0x8f, 0xeb, 0x3d, 0xf3, 0xc6, 0xe1, 0xd4, 0x8b, 0xd8, 0x94, 0x90,
	0x15, 0x4a, 0xf6, 0x49, 0x3f, 0x2b, 0xfb, 0x64, 0x7b, 0xcc, 0x36, 0x08, 0xf9, 0xdc, 0xb6, 0xa0,
	0x8e, 0xff, 0xd9, 0x8b, 0x2c, 0x7e, 0x73, 0x32, 0x25, 0x76, 0xd3, 0xf5, 0x0f, 0x0f, 0xb7, 0xa3,
	0x70, 0x62, 0x2f, 0x51, 0xb9, 0x78, 0x19, 0xf3, 0xc1, 0xff, 0x9f, 0x86, 0xf6, 0x05, 0xca, 0x87,
	0x96, 0x08, 0xa2, 0x91, 0x17, 0x7f, 0x15, 0x46, 0xdf, 0xda, 0x16, 0x43, 0x94, 0x95, 0xf9, 0xb3,
	0xa7, 0x5e, 0x9c, 0xd8, 0x17, 0xe5, 0xb3, 0xa7, 0x6c, 0x52, 0xe1, 0xff, 0xf1, 0x2c, 0xf2, 0xec,
	0x65, 0xf9, 0x0c, 0x97, 0x31, 0x06, 0x5e, 0xf0, 0xcc, 0x8f, 0xc2, 0xc0, 0x5e, 0xa1, 0x18, 0xb0,
	0x22, 0x1e, 0x21, 0xd8, 0x25, 0xc6, 0xdc, 0x77, 0xfd, 0xa9, 0x67, 0xaf, 0xd2, 0x11, 0xa2, 0xd6,
	0xe1, 0x36, 0x5c, 0x02, 0xd2, 0xe6, 0x12, 0x6d, 0xa3, 0xd6, 0xe1, 0x5e, 0x65, 0x2c, 0x49, 0x13,
	0x9b, 0xf6, 0xaa, 0x52, 0xc5, 0x8f, 0x5e, 0x60, 0x8a, 0x61, 0x10, 0xd8, 0x6b, 0xf2, 0xe8, 0x05,
	0xab, 0xc2, 0x2d, 0x38, 0x4f, 0xdc, 0x62, 0x40, 0x5b, 0x28, 0x55, 0xd6, 0x55, 0x00, 0xc6, 0x12,
	0x37, 0xb8, 0x4c, 0x0f, 0x36, 0xc8, 0x1a, 0xe2, 0x56, 0x33, 0x33, 0x6f, 0x5f, 0x61, 0x87, 0x37,
	0x58, 0x19, 0x7f, 0xc5, 0xbe, 0xe2, 0x11, 0xd8, 0x3f, 0xa4, 0x5f, 0xa1, 0xd6, 0xe1, 0x11, 0x31,
	0x9e, 0xed, 0x47, 0xfe, 0x81, 0x13, 0x24, 0xf6, 0x55, 0x92, 0xdd, 0x27, 0x2b, 0xf0, 0x78, 0x76,
	0xc6, 0x61, 0x70, 0x64, 0xbf, 0x46, 0xc7, 0x33, 0x29, 0xe0, 0x7e, 0x74, 0x0e, 0xa2, 0x30, 0x8e,
	0xed, 0x6b, 0xb4, 0x1f, 0x69, 0x09, 0x7f, 0x4d, 0x10, 0x06, 0xdb, 0x63, 0x27, 0x09, 0xf0, 0x38,
	0xbf, 0x4e, 0xbf, 0x46, 0xa9, 0xd2, 0x16, 0x01, 0x88, 0xbc, 0x4c, 0x2e, 0x02, 0x88, 0x5a, 0x09,
	0x68, 0x22, 0xa2, 0xfd, 0x3a, 0x1d, 0x9b, 0xa2, 0x02, 0xbf, 0x73, 0xea, 0x45, 0x7e, 0xe8, 0xda,
	0x6f, 0xd0, 0x77, 0xd2, 0x12, 0xe6, 0xe8, 0xec, 0x47, 0x4e, 0xec, 0x3f, 0xf3, 0xec, 0x1b, 0x94,
	0x23, 0x2f, 0x93, 0xc3, 0x26, 0xd1, 0x49, 0x9c, 0x38, 0xe3, 0xb1, 0xff, 0xc2, 0x73, 0xed, 0x1f,
	0x91, 0xe7, 0x5a, 0x1d, 0xe9, 0x01, 0x2f, 0xf0, 0x92, 0x88, 0x2e, 0x5a, 0xde, 0x24, 0x4d, 0xd4,
	0x2a, 0xeb, 0x0d, 0xe8, 0xbb, 0x91, 0xf3, 0xdc, 0x0f, 0x8e, 0x9e, 0x50, 0xdb, 0x7c, 0x93, 0x08,
	0xa0, 0x57, 0xe2, 0xb9, 0xe0, 0x07, 0x87, 0xa1, 0xfd, 0x16, 0x9d, 0x0b, 0xf8, 0xbf, 0x75, 0x13,
	0x5a, 0xac, 0x91, 0x7d, 0x8b, 0x2c, 0x9f, 0xb8, 0x9e, 0xdb, 0xa2, 0xb5, 0x23, 0xfe, 0xd8, 0xba,
	0xc1, 0xf5, 0xe1, 0x6d, 0xd2, 0x6e, 0x51, 0xd1, 0x87, 0xb1, 0x54, 0x88, 0x28, 0x86, 0x16, 0x23,
	0xcd, 0xda, 0x56, 0x4c, 0xe9, 0xb4, 0x01, 0xb4, 0xc3, 0xc8, 0x3f, 0x7a, 0x82, 0xeb, 0x99, 0x0f,
	0xcb, 0xcb, 0xb8, 0x67, 0x8f, 0xa2, 0x70, 0xc6, 0x4d, 0x07, 0x2d, 0x60, 0x2e, 0x63, 0x3f, 0xf8,
	0x96, 0xe9, 0x35, 0xf2, 0x1f, 0xfd, 0x4f, 0x05, 0xda, 0x5c, 0x10, 0x66, 0x8f, 0x2a, 0x86, 0x3d,
	0xaa, 0x9a, 0xf6, 0xa8, 0x66, 0xda, 0xa3, 0xba, 0x61, 0x8f, 0x1a, 0xba, 0x3d, 0x6a, 0xea, 0xf6,
	0xa8, 0x65, 0xd8, 0xa3, 0x76, 0xca, 0x1e, 0x75, 0xf2, 0xec, 0x11, 0x64, 0xd8, 0x23, 0x77, 0x27,
	0x60, 0x8a, 0x10, 0xff, 0xc5, 0x3c, 0xdc, 0x2f, 0x66, 0xc2, 0x25, 0xc0, 0xff, 0x69, 0x3e, 0x5b,
	0x9f, 0xe5, 0xb3, 0xa1, 0xdb, 0x64, 0xdb, 0xee, 0x8b, 0xc8, 0xf5, 0x22, 0x25, 0x47, 0x2a, 0xc4,
	0x65, 0x99, 0x23, 0xc5, 0x8a, 0xe8, 0x1d, 0x7e, 0xb6, 0x9f, 0xb4, 0x57, 0xf3, 0x60, 0x67, 0xb1,
	0xd2, 0x9e, 0x95, 0xd0, 0xdb, 0xc4, 0x15, 0xdf, 0x9c, 0x45, 0x1a, 0xfb, 0xbc, 0xd6, 0x7f, 0xcc,
	0x37, 0xff, 0xca, 0x09, 0x83, 0xbb, 0x95, 0x7c, 0x3a, 0xe9, 0x92, 0xc6, 0x88, 0x16, 0x14, 0xee,
	0x35, 0x8d, 0xfb, 0x1d, 0xbe, 0x13, 0x52, 0xf2, 0x53, 0xdf, 0x86, 0xa5, 0x3d, 0xe7, 0x59, 0xd9,
	0xd6, 0x77, 0x69, 0x8e, 0x07, 0xb3, 0x8d, 0xf1, 0x7c, 0x82, 0x77, 0x61, 0x95, 0x42, 0x93, 0xa2,
	0xc9, 0x83, 0xe7, 0x9f, 0x2b, 0x24, 0xf1, 0x99, 0xb7, 0x9f, 0x8f, 0x0f, 0x3d, 0x90, 0xe7, 0x1f,
	0x05, 0xd4, 0x3b, 0xa8, 0x8a, 0x03, 0x79, 0xbc, 0xaa, 0xc4, 0xd9, 0x41, 0x81, 0x71, 0x5d, 0xc5,
	0x78, 0x99, 0x4f, 0xe1, 0x06, 0x4b, 0x14, 0x20, 0x2e, 0x8c, 0x2d, 0x55, 0x00, 0xcb, 0x12, 0x66,
	0x45, 0xf4, 0x11, 0x3f, 0xa6, 0x61, 0x0a, 0x9f, 0xb1, 0x3c, 0x4c, 0x77, 0x29, 0x1a, 0xc2, 0xca,
	0xc8, 0x9b, 0x84, 0xcf, 0xe6, 0x92, 0x2b, 0x58, 0x54, 0x75, 0xb8, 0x87, 0xd0, 0x20, 0x3d, 0x99,
	0xa5, 0x4b, 0xb0, 0x60, 0x5c, 0x97, 0xe0, 0xff, 0x52, 0x8a, 0x9a, 0x2a, 0xc5, 0xbf, 0x54, 0xa0,
	0x4f, 0x78, 0x70, 0x29, 0x52, 0xbc, 0xbe, 0x37, 0x80, 0xab, 0x40, 0xb4, 0x74, 0x20, 0xee, 0xb3,
	0x8f, 0x50, 0xef, 0x5d, 0x20, 0xcf, 0xcc, 0x7b, 0x17, 0x68, 0x2b, 0xf6, 0x0c, 0xaf, 0xd0, 0xb5,
	0x6f, 0x57, 0x57, 0xe8, 0xdc, 0x23, 0x34, 0x57, 0xe8, 0x3a, 0x81, 0x6c, 0x86, 0xb6, 0xa1, 0xfd,
	0xd8, 0x4b, 0x9c, 0x2d, 0x27, 0x71, 0x84, 0x2e, 0xaf, 0x28, 0xba, 0x9c, 0xfb, 0x5a, 0x55, 0xc5,
	0xd7, 0xc2, 0x7e, 0xa1, 0xff, 0x82, 0xea, 0xf6, 0xda, 0x88, 0xfc, 0x47, 0xd7, 0xa0, 0xbe, 0xed,
	0xd3, 0x9d, 0x9e, 0x83, 0x30, 0x48, 0xb0, 0x3f, 0x89, 0xd9, 0xf4, 0x46, 0xbc, 0x88, 0x12, 0x58,
	0xc6, 0x2d, 0xb6, 0xc2, 0xe7, 0xc1, 0x38, 0x74, 0xe4, 0x65, 0x13, 0xef, 0x40, 0x7b, 0xe2, 0x25,
	0x8e, 0xeb, 0x24, 0x0e, 0x21, 0x91, 0x66, 0x88, 0x0b, 0xf6, 0xd9, 0x0f, 0x46, 0xa2, 0x89, 0x75,
	0x1d, 0xea, 0x87, 0x3e, 0xdb, 0xb4, 0x90, 0x41, 0x3f, 0xcc, 0xf9, 0xb3, 0x1f, 0x8c, 0xc8, 0xa3,
	0x87, 0x00, 0xed, 0x88, 0x71, 0x47, 0x57, 0x00, 0x76, 0xe4, 0xbb, 0xcc, 0x95, 0x53, 0x1f, 0xba,
	0xbb, 0xf2, 0x44, 0x19, 0x42, 0xd0, 0xa3, 0x45, 0xd6, 0xdc, 0x82, 0xfa, 0x14, 0xf7, 0x28, 0x03,
	0x04, 0xff, 0x5f, 0xff, 0x8f, 0xdb, 0x00, 0xbb, 0x51, 0xb8, 0x87, 0xdd, 0xff, 0x03, 0xcf, 0xba,
	0x0b, 0x75, 0x4c, 0x62, 0x89, 0x98, 0x93, 0x64, 0x37, 0xb8, 0xa8, 0xd5, 0x31, 0x9e, 0x0f, 0x49,
	0x42, 0xad, 0xb8, 0x92, 0x25, 0xb6, 0x06, 0xac, 0x55, 0xc6, 0x45, 0x2d, 0x83, 0x15, 0xfd, 0x0a,
	0x12, 0xce, 0xe3, 0x23, 0xe8, 0xa9, 0xf7, 0xb7, 0x08, 0x16, 0x19, 0x97, 0xba, 0x0c, 0x78, 0x90,
	0x4d, 0x41, 0xe1, 0x23, 0xe8, 0xa9, 0x77, 0xb7, 0x08, 0xf2, 0x8c, 0x0b, 0x5d, 0x72, 0xc8, 0xd5,
	0x7b, 0x5a, 0x04, 0x79, 0xc6, 0xe5, 0x2d, 0x39, 0xe4, 0x6c, 0xdf, 0x86, 0x5c, 0x23, 0x62, 0x5d,
	0x92, 0xdf, 0xaf, 0xdd, 0xa9, 0x32, 0x58, 0xd6, 0x6e, 0x1d, 0xe1, 0xe4, 0x0f, 0xa0, 0xab, 0xdc,
	0xb4, 0x62, 0xad, 0xe9, 0x1b, 0x0d, 0xca, 0xad, 0x28, 0x59, 0xef, 0x7e, 0x00, 0x5d, 0xe5, 0xea,
	0x15, 0x41, 0x9c, 0xbe, 0x8e, 0x25, 0x87, 0x58, 0xb9, 0x7b, 0x45, 0x10, 0xa7, 0xef, 0x63, 0xc9,
	0x22, 0xbe, 0x0f, 0x2d, 0x76, 0x59, 0x8a, 0xb5, 0xa2, 0x7e, 0xb0, 0xb8, 0x94, 0x42, 0x8c, 0x16,
	0xed, 0x8e, 0x8f, 0x0f, 0x00, 0xe4, 0x8d, 0x2a, 0x96, 0x71, 0x6c, 0x42, 0x21, 0xce, 0x78, 0xe3,
	0x07, 0x00, 0xf2, 0x06, 0x15, 0x41, 0x9a, 0xba, 0x54, 0x25, 0x87, 0x54, 0xde, 0x90, 0x22, 0x48,
	0x53, 0x97, 0xa6, 0x64, 0x83, 0xd4, 0x11, 0x77, 0x8e, 0xa8, 0x5d, 0xab, 0x5d, 0xc0, 0x21, 0xc6,
	0xb5, 0x71, 0x33, 0xc6, 0x1f, 0xf0, 0xa1, 0xf1, 0x92, 0xf4, 0x62, 0x5e, 0x30, 0x7a, 0x7d, 0x5e,
	0xe8, 0x2c, 0x8a, 0xe6, 0x85, 0x41, 0x9e, 0x71, 0x83, 0x49, 0xe1, 0xbc, 0x30, 0xc8, 0x33, 0x6e,
	0x20, 0xc9, 0x22, 0xdf, 0x56, 0xee, 0xfb, 0xe0, 0xc7, 0xf4, 0x2e, 0x69, 0xba, 0x41, 0x9e, 0xc6,
	0x1f, 0xac, 0xa5, 0x4f, 0x53, 0x71, 0x3e, 0x9b, 0xca, 0xe1, 0x7d, 0x93, 0x8f, 0x79, 0xaa, 0x7f,
	0xc0, 0xcf, 0xa8, 0x99, 0x47, 0xaf, 0x3e, 0x86, 0x8e, 0x88, 0x33, 0x18, 0x38, 0x68, 0xc7, 0xd5,
	0x4b, 0x30, 0xc0, 0x8b, 0xa5, 0x14, 0x83, 0x70, 0xae, 0x04, 0x9f, 0xf0, 0xe1, 0x4b, 0x52, 0x36,
	0x53, 0x1c, 0xe4, 0x71, 0xf1, 0x5c, 0x0e, 0x43, 0xce, 0x81, 0xdc, 0x29, 0x72, 0x39, 0x2d, 0x83,
	0x38, 0xdf, 0x3d, 0x9f, 0x05, 0xb9, 0x65, 0x24, 0xc5, 0x42, 0x39, 0x9d, 0x9d, 0xcb, 0xe2, 0x11,
	0xf4, 0x99, 0x5e, 0x65, 0x79, 0xdb, 0x57, 0x4d, 0x2e, 0xfa, 0xf1, 0xea, 0xf9, 0x8c, 0xf8, 0xed,
	0x21, 0x29, 0x46, 0xfa, 0xf9, 0xe8, 0x5c, 0x46, 0x3f, 0xe3, 0x71, 0x63, 0xed, 0x6a, 0x90, 0xd7,
	0xd3, 0xdc, 0x52, 0x87, 0x9c, 0x73, 0x59, 0x7e, 0x0e, 0x8b, 0x94, 0x4e, 0x9e, 0x23, 0xbc, 0x66,
	0xf2, 0x33, 0x4f, 0xe4, 0xe6, 0x32, 0xdb, 0xe4, 0x4a, 0x9a, 0xde, 0xef, 0x71, 0xc5, 0x64, 0xa4,
	0x1e, 0x2e, 0xce, 0x65, 0xf2, 0x98, 0x1f, 0x8d, 0x50, 0xae, 0xf2, 0xb8, 0x6e, 0x72, 0xda, 0x2d,
	0x2d, 0x93, 0x00, 0x9f, 0xdf, 0xce, 0x91, 0x02, 0x5f, 0x3f, 0xdc, 0x9b, 0xcb, 0xe8, 0x7d, 0x68,
	0xf3, 0x88, 0x88, 0xb5, 0xaa, 0x18, 0x02, 0xe5, 0xb0, 0x9c, 0xb4, 0x04, 0xea, 0x89, 0xa3, 0x0f,
	0xa1, 0x2b, 0xc3, 0x1d, 0xa7, 0xa4, 0x95, 0x56, 0xc4, 0x7f, 0xe1, 0x59, 0xb9, 0x87, 0xef, 0xb2,
	0xb4, 0xd2, 0xc7, 0xb0, 0xc8, 0x43, 0x97, 0xc1, 0x09, 0x7d, 0xf5, 0x5a, 0x8a, 0x3e, 0x2e, 0x65,
	0x86, 0xd4, 0x77, 0xa7, 0xce, 0xf6, 0x15, 0x9b, 0x21, 0x95, 0x34, 0x75, 0xfa, 0x2d, 0x5b, 0xec,
	0xbe, 0xb6, 0x25, 0x2e, 0xe6, 0x6e, 0xd6, 0xf1, 0xb7, 0x2c, 0x06, 0xeb, 0xd0, 0xa4, 0xe7, 0x9e,
	0xac, 0x65, 0x05, 0x69, 0x71, 0x04, 0x64, 0x60, 0x29, 0x87, 0x16, 0x64, 0xdf, 0x76, 0xc4, 0x19,
	0x27, 0x43, 0xe5, 0x2a, 0x94, 0x19, 0x2f, 0x7b, 0x9f, 0x2b, 0x4b, 0x95, 0xd0, 0x3c, 0xd9, 0x93,
	0x43, 0x28, 0x0e, 0xa7, 0x08, 0x42, 0xf3, 0xb8, 0x4a, 0x16, 0xe1, 0x16, 0xb1, 0xb4, 0xf2, 0x94,
	0x85, 0xe2, 0x84, 0x9a, 0xc7, 0x05, 0x06, 0x76, 0x2a, 0xed, 0x5f, 0xce, 0xd4, 0x45, 0xe3, 0x88,
	0x84, 0xf5, 0x43, 0xed, 0xb3, 0x53, 0xbc, 0x32, 0x44, 0xd9, 0xe4, 0xba, 0x23, 0xcd, 0x24, 0xfb,
	0x9c, 0x44, 0x0e, 0x13, 0xe3, 0xb0, 0x83, 0x60, 0x92, 0x7d, 0x08, 0x22, 0xdf, 0x47, 0x23, 0x39,
	0xa5, 0x2b, 0x3a, 0x1e, 0x29, 0x8f, 0x5e, 0x4d, 0x43, 0x14, 0xb3, 0x8b, 0x50, 0xda, 0x29, 0x00,
	0xca, 0x4c, 0x0e, 0x8d, 0x34, 0x95, 0x15, 0x5d, 0x38, 0x39, 0x34, 0xd2, 0x54, 0xda, 0x6c, 0x16,
	0xe9, 0x23, 0xb2, 0x04, 0x51, 0x32, 0x23, 0x2f, 0xeb, 0x5f, 0xab, 0xe5, 0xf7, 0x0d, 0xd6, 0xd2,
	0x59, 0x7a, 0x9c, 0xd1, 0xa7, 0xdc, 0xd5, 0x50, 0x78, 0x5d, 0x4d, 0x7d, 0xff, 0x64, 0x1e, 0xee,
	0x9f, 0x0a, 0x5d, 0x9d, 0x66, 0x93, 0x93, 0xde, 0x98, 0xc3, 0xc6, 0xcc, 0x51, 0x14, 0x6c, 0x72,
	0x92, 0x17, 0xb3, 0xd8, 0xfc, 0x3e, 0xd1, 0xd0, 0x34, 0x05, 0x67, 0xd5, 0x00, 0xc6, 0x5c, 0x9a,
	0xe8, 0x19, 0x22, 0x62, 0x69, 0x42, 0x89, 0xd7, 0xd2, 0x48, 0x94, 0x59, 0x9a, 0xe8, 0xc4, 0xe9,
	0x0c, 0xaf, 0xc2, 0xa5, 0x89, 0x4e, 0x9c, 0x4e, 0x37, 0xca, 0xd7, 0x05, 0x32, 0x4f, 0x40, 0xd1,
	0x05, 0x66, 0x92, 0x81, 0xd0, 0x05, 0xe9, 0xf4, 0x80, 0x4d, 0x69, 0x28, 0x38, 0x23, 0x5d, 0x17,
	0xa4, 0x78, 0x15, 0xe9, 0x82, 0x34, 0x93, 0xec, 0xb4, 0x97, 0x42, 0x5d, 0x90, 0x66, 0x92, 0x9d,
	0xe1, 0x92, 0xc5, 0x64, 0x97, 0x78, 0xe3, 0x7a, 0x02, 0xc5, 0x55, 0x09, 0x4c, 0x56, 0x06, 0xc6,
	0xe0, 0x4a, 0x66, 0x3a, 0x84, 0xf4, 0x91, 0x2e, 0x66, 0x64, 0x9b, 0x08, 0xa7, 0x24, 0x3f, 0x13,
	0x25, 0x4b, 0xbc, 0xcf, 0xf9, 0xcd, 0x49, 0xd9, 0xcc, 0xf2, 0xd3, 0x50, 0x72, 0x98, 0x65, 0xe4,
	0x95, 0x08, 0x66, 0xf9, 0x39, 0x27, 0xd9, 0x96, 0x17, 0x98, 0x4f, 0xb2, 0x13, 0x24, 0x62, 0x24,
	0xa6, 0xb3, 0x40, 0xa4, 0x87, 0x64, 0xc4, 0x68, 0xb7, 0xf8, 0x06, 0x09, 0xe7, 0x71, 0x59, 0x5b,
	0x04, 0xe9, 0x01, 0xee, 0x5c, 0x2e, 0x1f, 0x43, 0x5f, 0xcb, 0x3d, 0xb0, 0x8a, 0x32, 0x12, 0xb2,
	0xb5, 0x89, 0x65, 0x38, 0x3e, 0x98, 0xcb, 0x95, 0xb4, 0xef, 0x53, 0xcc, 0xe6, 0x63, 0xe1, 0x38,
	0x1a, 0x72, 0x64, 0x65, 0x3e, 0x14, 0x7a, 0x32, 0x26, 0x83, 0xac, 0xd4, 0x80, 0x2c, 0x06, 0x3f,
	0xe1, 0x6a, 0x51, 0x81, 0xf4, 0x6a, 0x96, 0x37, 0xb4, 0x33, 0xdf, 0x7b, 0xdd, 0x82, 0xbe, 0x16,
	0xfd, 0x16, 0xc2, 0x64, 0xc5, 0xc4, 0x0b, 0x96, 0x76, 0x3d, 0x35, 0x72, 0x61, 0xec, 0x80, 0x69,
	0xe1, 0x8c, 0x81, 0xb6, 0x81, 0x99, 0xd6, 0xb4, 0x74, 0x23, 0x59, 0xd7, 0xb4, 0x6a, 0x98, 0xa0,
	0x50, 0x59, 0xea, 0xc4, 0xe9, 0x88, 0x44, 0xb6, 0x72, 0xe9, 0x88, 0x50, 0x84, 0xf0, 0xb8, 0xcc,
	0xe0, 0xc4, 0xe0, 0xb2, 0xb2, 0x2d, 0x69, 0x6e, 0x78, 0xbe, 0x5b, 0xb1, 0x7e, 0x0c, 0x1d, 0x0c,
	0xd8, 0x1c, 0x26, 0x79, 0xf0, 0x7d, 0x46, 0x7d, 0x37, 0xbe, 0x85, 0xab, 0xf9, 0x6e, 0x46, 0x00,
	0x43, 0xa8, 0xa4, 0xec, 0x0d, 0xe3, 0x27, 0x24, 0xde, 0xa4, 0x06, 0x3e, 0x84, 0xa6, 0xcc, 0x0e,
	0x88, 0xcc, 0xe1, 0xf7, 0x00, 0xba, 0x4a, 0x54, 0xc4, 0x52, 0x36, 0x29, 0x8c, 0x68, 0x41, 0x16,
	0xb2, 0x43, 0x58, 0xd0, 0x03, 0x13, 0xc6, 0xca, 0xaf, 0x1c, 0x0b, 0x3d, 0x38, 0x21, 0x58, 0x64,
	0xc6, 0x2c, 0x32, 0x58, 0x3c, 0x84, 0x6f, 0xda, 0x77, 0xee, 0x3e, 0x20, 0xd5, 0xfb, 0x4d, 0xf2,
	0xb3, 0xf1, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xfc, 0x22, 0xe0, 0x5e, 0x5b, 0x00, 0x00,
}
