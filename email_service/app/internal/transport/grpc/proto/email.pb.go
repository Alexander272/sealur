// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/email.proto

/*
Package proto_email is a generated protocol buffer package.

It is generated from these files:
	proto/email.proto

It has these top-level messages:
	IdResponse
	SuccessResponse
	PingRequest
	PingResponse
	File
	FileData
	User
	InterviewData
	SendInterviewRequest
*/
package proto_email

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IdResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *IdResponse) Reset()                    { *m = IdResponse{} }
func (m *IdResponse) String() string            { return proto.CompactTextString(m) }
func (*IdResponse) ProtoMessage()               {}
func (*IdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IdResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SuccessResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SuccessResponse) Reset()                    { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string            { return proto.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()               {}
func (*SuccessResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PingResponse struct {
	Ping string `protobuf:"bytes,1,opt,name=ping" json:"ping,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PingResponse) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

// Interview --------------------------------------------------
type File struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type FileData struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Size int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *FileData) Reset()                    { *m = FileData{} }
func (m *FileData) String() string            { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()               {}
func (*FileData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FileData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FileData) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type User struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email        string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	City         string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	Position     string `protobuf:"bytes,5,opt,name=position" json:"position,omitempty"`
	Phone        string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *User) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *User) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type InterviewData struct {
	User *User     `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	File *FileData `protobuf:"bytes,2,opt,name=file" json:"file,omitempty"`
}

func (m *InterviewData) Reset()                    { *m = InterviewData{} }
func (m *InterviewData) String() string            { return proto.CompactTextString(m) }
func (*InterviewData) ProtoMessage()               {}
func (*InterviewData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InterviewData) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *InterviewData) GetFile() *FileData {
	if m != nil {
		return m.File
	}
	return nil
}

type SendInterviewRequest struct {
	// Types that are valid to be assigned to Request:
	//	*SendInterviewRequest_Data
	//	*SendInterviewRequest_File
	Request isSendInterviewRequest_Request `protobuf_oneof:"request"`
}

func (m *SendInterviewRequest) Reset()                    { *m = SendInterviewRequest{} }
func (m *SendInterviewRequest) String() string            { return proto.CompactTextString(m) }
func (*SendInterviewRequest) ProtoMessage()               {}
func (*SendInterviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type isSendInterviewRequest_Request interface{ isSendInterviewRequest_Request() }

type SendInterviewRequest_Data struct {
	Data *InterviewData `protobuf:"bytes,2,opt,name=data,oneof"`
}
type SendInterviewRequest_File struct {
	File *File `protobuf:"bytes,1,opt,name=file,oneof"`
}

func (*SendInterviewRequest_Data) isSendInterviewRequest_Request() {}
func (*SendInterviewRequest_File) isSendInterviewRequest_Request() {}

func (m *SendInterviewRequest) GetRequest() isSendInterviewRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *SendInterviewRequest) GetData() *InterviewData {
	if x, ok := m.GetRequest().(*SendInterviewRequest_Data); ok {
		return x.Data
	}
	return nil
}

func (m *SendInterviewRequest) GetFile() *File {
	if x, ok := m.GetRequest().(*SendInterviewRequest_File); ok {
		return x.File
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SendInterviewRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SendInterviewRequest_OneofMarshaler, _SendInterviewRequest_OneofUnmarshaler, _SendInterviewRequest_OneofSizer, []interface{}{
		(*SendInterviewRequest_Data)(nil),
		(*SendInterviewRequest_File)(nil),
	}
}

func _SendInterviewRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SendInterviewRequest)
	// request
	switch x := m.Request.(type) {
	case *SendInterviewRequest_Data:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case *SendInterviewRequest_File:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SendInterviewRequest.Request has unexpected type %T", x)
	}
	return nil
}

func _SendInterviewRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SendInterviewRequest)
	switch tag {
	case 2: // request.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InterviewData)
		err := b.DecodeMessage(msg)
		m.Request = &SendInterviewRequest_Data{msg}
		return true, err
	case 1: // request.file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Request = &SendInterviewRequest_File{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SendInterviewRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SendInterviewRequest)
	// request
	switch x := m.Request.(type) {
	case *SendInterviewRequest_Data:
		s := proto.Size(x.Data)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SendInterviewRequest_File:
		s := proto.Size(x.File)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*IdResponse)(nil), "proto_email.IdResponse")
	proto.RegisterType((*SuccessResponse)(nil), "proto_email.SuccessResponse")
	proto.RegisterType((*PingRequest)(nil), "proto_email.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "proto_email.PingResponse")
	proto.RegisterType((*File)(nil), "proto_email.File")
	proto.RegisterType((*FileData)(nil), "proto_email.FileData")
	proto.RegisterType((*User)(nil), "proto_email.User")
	proto.RegisterType((*InterviewData)(nil), "proto_email.InterviewData")
	proto.RegisterType((*SendInterviewRequest)(nil), "proto_email.SendInterviewRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EmailService service

type EmailServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Interview --------------------------------------------------
	SendInterview(ctx context.Context, opts ...grpc.CallOption) (EmailService_SendInterviewClient, error)
}

type emailServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmailServiceClient(cc *grpc.ClientConn) EmailServiceClient {
	return &emailServiceClient{cc}
}

func (c *emailServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto_email.EmailService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) SendInterview(ctx context.Context, opts ...grpc.CallOption) (EmailService_SendInterviewClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_EmailService_serviceDesc.Streams[0], c.cc, "/proto_email.EmailService/SendInterview", opts...)
	if err != nil {
		return nil, err
	}
	x := &emailServiceSendInterviewClient{stream}
	return x, nil
}

type EmailService_SendInterviewClient interface {
	Send(*SendInterviewRequest) error
	CloseAndRecv() (*SuccessResponse, error)
	grpc.ClientStream
}

type emailServiceSendInterviewClient struct {
	grpc.ClientStream
}

func (x *emailServiceSendInterviewClient) Send(m *SendInterviewRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *emailServiceSendInterviewClient) CloseAndRecv() (*SuccessResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SuccessResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for EmailService service

type EmailServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Interview --------------------------------------------------
	SendInterview(EmailService_SendInterviewServer) error
}

func RegisterEmailServiceServer(s *grpc.Server, srv EmailServiceServer) {
	s.RegisterService(&_EmailService_serviceDesc, srv)
}

func _EmailService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_email.EmailService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailService_SendInterview_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EmailServiceServer).SendInterview(&emailServiceSendInterviewServer{stream})
}

type EmailService_SendInterviewServer interface {
	SendAndClose(*SuccessResponse) error
	Recv() (*SendInterviewRequest, error)
	grpc.ServerStream
}

type emailServiceSendInterviewServer struct {
	grpc.ServerStream
}

func (x *emailServiceSendInterviewServer) SendAndClose(m *SuccessResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *emailServiceSendInterviewServer) Recv() (*SendInterviewRequest, error) {
	m := new(SendInterviewRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _EmailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_email.EmailService",
	HandlerType: (*EmailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _EmailService_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendInterview",
			Handler:       _EmailService_SendInterview_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/email.proto",
}

func init() { proto.RegisterFile("proto/email.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xd9, 0x74, 0xdb, 0x26, 0x93, 0xa4, 0x50, 0xab, 0x48, 0x4b, 0xd4, 0x43, 0xb0, 0x84,
	0x08, 0x42, 0x4a, 0x51, 0x38, 0xf6, 0x56, 0x41, 0x45, 0x6f, 0xc8, 0x11, 0x17, 0x2e, 0xc8, 0xec,
	0x0e, 0xc1, 0x52, 0x6a, 0x2f, 0x6b, 0x07, 0xd4, 0x88, 0x27, 0xe1, 0xc2, 0xab, 0x56, 0x33, 0xde,
	0x44, 0x6b, 0x29, 0xa7, 0x9d, 0xf9, 0xfd, 0xed, 0x3f, 0x33, 0xf6, 0xc0, 0x79, 0xdd, 0xb8, 0xe0,
	0xae, 0xf0, 0x5e, 0x9b, 0xf5, 0x9c, 0x63, 0x31, 0xe4, 0xcf, 0x37, 0x96, 0xe4, 0x25, 0xc0, 0x5d,
	0xa5, 0xd0, 0xd7, 0xce, 0x7a, 0x14, 0x67, 0xd0, 0x33, 0x55, 0x91, 0x4d, 0xb3, 0xd9, 0x40, 0xf5,
	0x4c, 0x25, 0xdf, 0xc2, 0xd3, 0xe5, 0xa6, 0x2c, 0xd1, 0xfb, 0x3d, 0x52, 0xc0, 0xa9, 0x8f, 0x12,
	0x73, 0x7d, 0xb5, 0x4b, 0xe5, 0x18, 0x86, 0x9f, 0x8d, 0x5d, 0x29, 0xfc, 0xb5, 0x41, 0x1f, 0xa4,
	0x84, 0x51, 0x4c, 0xdb, 0x1f, 0x05, 0xe4, 0xb5, 0xb1, 0xab, 0xd6, 0x9d, 0x63, 0x39, 0x85, 0xfc,
	0xd6, 0xac, 0xd9, 0xb4, 0x74, 0x36, 0xa0, 0x0d, 0x7c, 0x3c, 0x52, 0xbb, 0x54, 0xde, 0x42, 0x9f,
	0x88, 0x0f, 0x3a, 0x68, 0x72, 0xb0, 0xfa, 0x1e, 0x77, 0x0e, 0x14, 0x93, 0x16, 0x1e, 0x6a, 0x2c,
	0x7a, 0x51, 0xa3, 0x98, 0x34, 0x6f, 0xb6, 0x58, 0x1c, 0x4d, 0xb3, 0xd9, 0x91, 0xe2, 0x58, 0xfe,
	0xcb, 0x20, 0xff, 0xe2, 0xb1, 0x11, 0x12, 0x46, 0xae, 0x59, 0x69, 0x6b, 0xb6, 0x3a, 0x18, 0x67,
	0x5b, 0xb3, 0x44, 0xdb, 0x17, 0xea, 0x75, 0x0a, 0x5d, 0xc0, 0x31, 0xdf, 0x18, 0xbb, 0x0e, 0x54,
	0x4c, 0x88, 0x2c, 0x4d, 0x78, 0x28, 0xf2, 0x48, 0x52, 0x2c, 0x26, 0xd0, 0xaf, 0x9d, 0x37, 0xec,
	0x7e, 0xcc, 0xfa, 0x3e, 0x27, 0x97, 0xfa, 0xa7, 0xb3, 0x58, 0x9c, 0x44, 0x17, 0x4e, 0xa4, 0x86,
	0xf1, 0x9d, 0x0d, 0xd8, 0xfc, 0x36, 0xf8, 0x87, 0x27, 0x7d, 0x05, 0xf9, 0xc6, 0x63, 0xc3, 0xcd,
	0x0d, 0x17, 0xe7, 0xf3, 0xce, 0x8b, 0xcd, 0x69, 0x0a, 0xc5, 0xc7, 0xe2, 0x0d, 0xe4, 0x3f, 0xcc,
	0x3a, 0xf6, 0x39, 0x5c, 0x3c, 0x4f, 0xb0, 0xdd, 0xad, 0x29, 0x46, 0xe4, 0x5f, 0xb8, 0x58, 0xa2,
	0xad, 0xf6, 0x65, 0xda, 0x57, 0x12, 0xef, 0x20, 0xaf, 0x74, 0xd0, 0xad, 0xc5, 0x24, 0xb1, 0x48,
	0x7a, 0xfa, 0xf4, 0x44, 0x31, 0x29, 0x5e, 0xb7, 0x45, 0x0f, 0xf5, 0x46, 0x45, 0x09, 0x24, 0xe0,
	0x66, 0x00, 0xa7, 0x4d, 0xac, 0xb2, 0xf8, 0x9f, 0xc1, 0xe8, 0x23, 0x11, 0x4b, 0x32, 0x2c, 0x51,
	0x5c, 0x43, 0x4e, 0xcb, 0x21, 0x8a, 0xe4, 0xf7, 0xce, 0xfa, 0x4c, 0x5e, 0x1c, 0x38, 0x69, 0x37,
	0x49, 0xc1, 0x38, 0x99, 0x45, 0xbc, 0x4c, 0xd8, 0x43, 0x73, 0x4e, 0x2e, 0x53, 0x24, 0x5d, 0xea,
	0x59, 0x76, 0xf3, 0xec, 0xeb, 0xd9, 0xfc, 0xea, 0xba, 0xc3, 0x7c, 0x3f, 0xe1, 0xe4, 0xfd, 0x63,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xec, 0xba, 0xda, 0x42, 0x03, 0x00, 0x00,
}
